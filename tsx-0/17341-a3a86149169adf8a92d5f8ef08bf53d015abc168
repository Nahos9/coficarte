{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});const util=require(\"../core/util\");const{InvalidArgumentError,RequestAbortedError}=require(\"../core/errors\");const DecoratorHandler=require(\"../handler/decorator-handler\");class DumpHandler extends DecoratorHandler{static{__name(this,\"DumpHandler\")}#maxSize=1024*1024;#abort=null;#dumped=false;#aborted=false;#size=0;#reason=null;#handler=null;constructor({maxSize},handler){super(handler);if(maxSize!=null&&(!Number.isFinite(maxSize)||maxSize<1)){throw new InvalidArgumentError(\"maxSize must be a number greater than 0\")}this.#maxSize=maxSize??this.#maxSize;this.#handler=handler}onConnect(abort){this.#abort=abort;this.#handler.onConnect(this.#customAbort.bind(this))}#customAbort(reason){this.#aborted=true;this.#reason=reason}onHeaders(statusCode,rawHeaders,resume,statusMessage){const headers=util.parseHeaders(rawHeaders);const contentLength=headers[\"content-length\"];if(contentLength!=null&&contentLength>this.#maxSize){throw new RequestAbortedError(`Response size (${contentLength}) larger than maxSize (${this.#maxSize})`)}if(this.#aborted){return true}return this.#handler.onHeaders(statusCode,rawHeaders,resume,statusMessage)}onError(err){if(this.#dumped){return}err=this.#reason??err;this.#handler.onError(err)}onData(chunk){this.#size=this.#size+chunk.length;if(this.#size>=this.#maxSize){this.#dumped=true;if(this.#aborted){this.#handler.onError(this.#reason)}else{this.#handler.onComplete([])}}return true}onComplete(trailers){if(this.#dumped){return}if(this.#aborted){this.#handler.onError(this.reason);return}this.#handler.onComplete(trailers)}}function createDumpInterceptor({maxSize:defaultMaxSize}={maxSize:1024*1024}){return dispatch=>{return __name(function Intercept(opts,handler){const{dumpMaxSize=defaultMaxSize}=opts;const dumpHandler=new DumpHandler({maxSize:dumpMaxSize},handler);return dispatch(opts,dumpHandler)},\"Intercept\")}}__name(createDumpInterceptor,\"createDumpInterceptor\");module.exports=createDumpInterceptor;\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HAEA,MAAM,KAAO,QAAQ,cAAc,EACnC,KAAM,CAAE,qBAAsB,mBAAoB,EAAI,QAAQ,gBAAgB,EAC9E,MAAM,iBAAmB,QAAQ,8BAA8B,EAE/D,MAAM,oBAAoB,gBAAiB,CAN3C,MAM2C,4BACzC,SAAW,KAAO,KAClB,OAAS,KACT,QAAU,MACV,SAAW,MACX,MAAQ,EACR,QAAU,KACV,SAAW,KAEX,YAAa,CAAE,OAAQ,EAAG,QAAS,CACjC,MAAM,OAAO,EAEb,GAAI,SAAW,OAAS,CAAC,OAAO,SAAS,OAAO,GAAK,QAAU,GAAI,CACjE,MAAM,IAAI,qBAAqB,yCAAyC,CAC1E,CAEA,KAAK,SAAW,SAAW,KAAK,SAChC,KAAK,SAAW,OAClB,CAEA,UAAW,MAAO,CAChB,KAAK,OAAS,MAEd,KAAK,SAAS,UAAU,KAAK,aAAa,KAAK,IAAI,CAAC,CACtD,CAEA,aAAc,OAAQ,CACpB,KAAK,SAAW,KAChB,KAAK,QAAU,MACjB,CAGA,UAAW,WAAY,WAAY,OAAQ,cAAe,CACxD,MAAM,QAAU,KAAK,aAAa,UAAU,EAC5C,MAAM,cAAgB,QAAQ,gBAAgB,EAE9C,GAAI,eAAiB,MAAQ,cAAgB,KAAK,SAAU,CAC1D,MAAM,IAAI,oBACR,kBAAkB,aAAa,0BAC7B,KAAK,QACP,GACF,CACF,CAEA,GAAI,KAAK,SAAU,CACjB,MAAO,KACT,CAEA,OAAO,KAAK,SAAS,UACnB,WACA,WACA,OACA,aACF,CACF,CAEA,QAAS,IAAK,CACZ,GAAI,KAAK,QAAS,CAChB,MACF,CAEA,IAAM,KAAK,SAAW,IAEtB,KAAK,SAAS,QAAQ,GAAG,CAC3B,CAEA,OAAQ,MAAO,CACb,KAAK,MAAQ,KAAK,MAAQ,MAAM,OAEhC,GAAI,KAAK,OAAS,KAAK,SAAU,CAC/B,KAAK,QAAU,KAEf,GAAI,KAAK,SAAU,CACjB,KAAK,SAAS,QAAQ,KAAK,OAAO,CACpC,KAAO,CACL,KAAK,SAAS,WAAW,CAAC,CAAC,CAC7B,CACF,CAEA,MAAO,KACT,CAEA,WAAY,SAAU,CACpB,GAAI,KAAK,QAAS,CAChB,MACF,CAEA,GAAI,KAAK,SAAU,CACjB,KAAK,SAAS,QAAQ,KAAK,MAAM,EACjC,MACF,CAEA,KAAK,SAAS,WAAW,QAAQ,CACnC,CACF,CAEA,SAAS,sBACP,CAAE,QAAS,cAAe,EAAI,CAC5B,QAAS,KAAO,IAClB,EACA,CACA,OAAO,UAAY,CACjB,OAAO,gBAAS,UAAW,KAAM,QAAS,CACxC,KAAM,CAAE,YAAc,cAAe,EACnC,KAEF,MAAM,YAAc,IAAI,YACtB,CAAE,QAAS,WAAY,EACvB,OACF,EAEA,OAAO,SAAS,KAAM,WAAW,CACnC,EAVO,YAWT,CACF,CAlBS,sDAoBT,OAAO,QAAU","names":[],"sources":["/home/creditga/CofiCarte/node_modules/.pnpm/undici@6.21.0/node_modules/undici/lib/interceptor/dump.js"],"sourcesContent":["'use strict'\n\nconst util = require('../core/util')\nconst { InvalidArgumentError, RequestAbortedError } = require('../core/errors')\nconst DecoratorHandler = require('../handler/decorator-handler')\n\nclass DumpHandler extends DecoratorHandler {\n  #maxSize = 1024 * 1024\n  #abort = null\n  #dumped = false\n  #aborted = false\n  #size = 0\n  #reason = null\n  #handler = null\n\n  constructor ({ maxSize }, handler) {\n    super(handler)\n\n    if (maxSize != null && (!Number.isFinite(maxSize) || maxSize < 1)) {\n      throw new InvalidArgumentError('maxSize must be a number greater than 0')\n    }\n\n    this.#maxSize = maxSize ?? this.#maxSize\n    this.#handler = handler\n  }\n\n  onConnect (abort) {\n    this.#abort = abort\n\n    this.#handler.onConnect(this.#customAbort.bind(this))\n  }\n\n  #customAbort (reason) {\n    this.#aborted = true\n    this.#reason = reason\n  }\n\n  // TODO: will require adjustment after new hooks are out\n  onHeaders (statusCode, rawHeaders, resume, statusMessage) {\n    const headers = util.parseHeaders(rawHeaders)\n    const contentLength = headers['content-length']\n\n    if (contentLength != null && contentLength > this.#maxSize) {\n      throw new RequestAbortedError(\n        `Response size (${contentLength}) larger than maxSize (${\n          this.#maxSize\n        })`\n      )\n    }\n\n    if (this.#aborted) {\n      return true\n    }\n\n    return this.#handler.onHeaders(\n      statusCode,\n      rawHeaders,\n      resume,\n      statusMessage\n    )\n  }\n\n  onError (err) {\n    if (this.#dumped) {\n      return\n    }\n\n    err = this.#reason ?? err\n\n    this.#handler.onError(err)\n  }\n\n  onData (chunk) {\n    this.#size = this.#size + chunk.length\n\n    if (this.#size >= this.#maxSize) {\n      this.#dumped = true\n\n      if (this.#aborted) {\n        this.#handler.onError(this.#reason)\n      } else {\n        this.#handler.onComplete([])\n      }\n    }\n\n    return true\n  }\n\n  onComplete (trailers) {\n    if (this.#dumped) {\n      return\n    }\n\n    if (this.#aborted) {\n      this.#handler.onError(this.reason)\n      return\n    }\n\n    this.#handler.onComplete(trailers)\n  }\n}\n\nfunction createDumpInterceptor (\n  { maxSize: defaultMaxSize } = {\n    maxSize: 1024 * 1024\n  }\n) {\n  return dispatch => {\n    return function Intercept (opts, handler) {\n      const { dumpMaxSize = defaultMaxSize } =\n        opts\n\n      const dumpHandler = new DumpHandler(\n        { maxSize: dumpMaxSize },\n        handler\n      )\n\n      return dispatch(opts, dumpHandler)\n    }\n  }\n}\n\nmodule.exports = createDumpInterceptor\n"]}}