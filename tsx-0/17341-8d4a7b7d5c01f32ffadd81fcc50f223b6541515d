{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});exports.parseWithParse5=parseWithParse5;exports.renderWithParse5=renderWithParse5;const domhandler_1=require(\"domhandler\");const parse5_1=require(\"parse5\");const parse5_htmlparser2_tree_adapter_1=require(\"parse5-htmlparser2-tree-adapter\");function parseWithParse5(content,options,isDocument,context){var _a;(_a=options.treeAdapter)!==null&&_a!==void 0?_a:options.treeAdapter=parse5_htmlparser2_tree_adapter_1.adapter;if(options.scriptingEnabled!==false){options.scriptingEnabled=true}return isDocument?(0,parse5_1.parse)(content,options):(0,parse5_1.parseFragment)(context,content,options)}__name(parseWithParse5,\"parseWithParse5\");const renderOpts={treeAdapter:parse5_htmlparser2_tree_adapter_1.adapter};function renderWithParse5(dom){const nodes=\"length\"in dom?dom:[dom];for(let index=0;index<nodes.length;index+=1){const node=nodes[index];if((0,domhandler_1.isDocument)(node)){Array.prototype.splice.call(nodes,index,1,...node.children)}}let result=\"\";for(let index=0;index<nodes.length;index+=1){const node=nodes[index];result+=(0,parse5_1.serializeOuter)(node,renderOpts)}return result}__name(renderWithParse5,\"renderWithParse5\");\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HACA,OAAO,eAAe,QAAS,aAAc,CAAE,MAAO,IAAK,CAAC,EAC5D,QAAQ,gBAAkB,gBAC1B,QAAQ,iBAAmB,iBAC3B,MAAM,aAAe,QAAQ,YAAY,EACzC,MAAM,SAAW,QAAQ,QAAQ,EACjC,MAAM,kCAAoC,QAAQ,iCAAiC,EAUnF,SAAS,gBAAgB,QAAS,QAAS,WAAY,QAAS,CAC5D,IAAI,IACH,GAAK,QAAQ,eAAiB,MAAQ,KAAO,OAAS,GAAM,QAAQ,YAAc,kCAAkC,QACrH,GAAI,QAAQ,mBAAqB,MAAO,CACpC,QAAQ,iBAAmB,IAC/B,CACA,OAAO,YACA,EAAG,SAAS,OAAO,QAAS,OAAO,GACnC,EAAG,SAAS,eAAe,QAAS,QAAS,OAAO,CAC/D,CATS,0CAUT,MAAM,WAAa,CAAE,YAAa,kCAAkC,OAAQ,EAO5E,SAAS,iBAAiB,IAAK,CAM3B,MAAM,MAAQ,WAAY,IAAM,IAAM,CAAC,GAAG,EAC1C,QAAS,MAAQ,EAAG,MAAQ,MAAM,OAAQ,OAAS,EAAG,CAClD,MAAM,KAAO,MAAM,KAAK,EACxB,IAAK,EAAG,aAAa,YAAY,IAAI,EAAG,CACpC,MAAM,UAAU,OAAO,KAAK,MAAO,MAAO,EAAG,GAAG,KAAK,QAAQ,CACjE,CACJ,CACA,IAAI,OAAS,GACb,QAAS,MAAQ,EAAG,MAAQ,MAAM,OAAQ,OAAS,EAAG,CAClD,MAAM,KAAO,MAAM,KAAK,EACxB,SAAW,EAAG,SAAS,gBAAgB,KAAM,UAAU,CAC3D,CACA,OAAO,MACX,CAnBS","names":[],"sources":["/home/creditga/CofiCarte/node_modules/.pnpm/cheerio@1.0.0/node_modules/cheerio/dist/commonjs/parsers/parse5-adapter.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseWithParse5 = parseWithParse5;\nexports.renderWithParse5 = renderWithParse5;\nconst domhandler_1 = require(\"domhandler\");\nconst parse5_1 = require(\"parse5\");\nconst parse5_htmlparser2_tree_adapter_1 = require(\"parse5-htmlparser2-tree-adapter\");\n/**\n * Parse the content with `parse5` in the context of the given `ParentNode`.\n *\n * @param content - The content to parse.\n * @param options - A set of options to use to parse.\n * @param isDocument - Whether to parse the content as a full HTML document.\n * @param context - The context in which to parse the content.\n * @returns The parsed content.\n */\nfunction parseWithParse5(content, options, isDocument, context) {\n    var _a;\n    (_a = options.treeAdapter) !== null && _a !== void 0 ? _a : (options.treeAdapter = parse5_htmlparser2_tree_adapter_1.adapter);\n    if (options.scriptingEnabled !== false) {\n        options.scriptingEnabled = true;\n    }\n    return isDocument\n        ? (0, parse5_1.parse)(content, options)\n        : (0, parse5_1.parseFragment)(context, content, options);\n}\nconst renderOpts = { treeAdapter: parse5_htmlparser2_tree_adapter_1.adapter };\n/**\n * Renders the given DOM tree with `parse5` and returns the result as a string.\n *\n * @param dom - The DOM tree to render.\n * @returns The rendered document.\n */\nfunction renderWithParse5(dom) {\n    /*\n     * `dom-serializer` passes over the special \"root\" node and renders the\n     * node's children in its place. To mimic this behavior with `parse5`, an\n     * equivalent operation must be applied to the input array.\n     */\n    const nodes = 'length' in dom ? dom : [dom];\n    for (let index = 0; index < nodes.length; index += 1) {\n        const node = nodes[index];\n        if ((0, domhandler_1.isDocument)(node)) {\n            Array.prototype.splice.call(nodes, index, 1, ...node.children);\n        }\n    }\n    let result = '';\n    for (let index = 0; index < nodes.length; index += 1) {\n        const node = nodes[index];\n        result += (0, parse5_1.serializeOuter)(node, renderOpts);\n    }\n    return result;\n}\n//# sourceMappingURL=parse5-adapter.js.map"]}}