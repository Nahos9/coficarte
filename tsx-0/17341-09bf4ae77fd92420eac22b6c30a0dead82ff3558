{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});const{webidl}=require(\"../fetch/webidl\");const{kEnumerableProperty}=require(\"../../core/util\");const{kConstruct}=require(\"../../core/symbols\");const{MessagePort}=require(\"node:worker_threads\");class MessageEvent extends Event{static{__name(this,\"MessageEvent\")}#eventInit;constructor(type,eventInitDict={}){if(type===kConstruct){super(arguments[1],arguments[2]);webidl.util.markAsUncloneable(this);return}const prefix=\"MessageEvent constructor\";webidl.argumentLengthCheck(arguments,1,prefix);type=webidl.converters.DOMString(type,prefix,\"type\");eventInitDict=webidl.converters.MessageEventInit(eventInitDict,prefix,\"eventInitDict\");super(type,eventInitDict);this.#eventInit=eventInitDict;webidl.util.markAsUncloneable(this)}get data(){webidl.brandCheck(this,MessageEvent);return this.#eventInit.data}get origin(){webidl.brandCheck(this,MessageEvent);return this.#eventInit.origin}get lastEventId(){webidl.brandCheck(this,MessageEvent);return this.#eventInit.lastEventId}get source(){webidl.brandCheck(this,MessageEvent);return this.#eventInit.source}get ports(){webidl.brandCheck(this,MessageEvent);if(!Object.isFrozen(this.#eventInit.ports)){Object.freeze(this.#eventInit.ports)}return this.#eventInit.ports}initMessageEvent(type,bubbles=false,cancelable=false,data=null,origin=\"\",lastEventId=\"\",source=null,ports=[]){webidl.brandCheck(this,MessageEvent);webidl.argumentLengthCheck(arguments,1,\"MessageEvent.initMessageEvent\");return new MessageEvent(type,{bubbles,cancelable,data,origin,lastEventId,source,ports})}static createFastMessageEvent(type,init){const messageEvent=new MessageEvent(kConstruct,type,init);messageEvent.#eventInit=init;messageEvent.#eventInit.data??=null;messageEvent.#eventInit.origin??=\"\";messageEvent.#eventInit.lastEventId??=\"\";messageEvent.#eventInit.source??=null;messageEvent.#eventInit.ports??=[];return messageEvent}}const{createFastMessageEvent}=MessageEvent;delete MessageEvent.createFastMessageEvent;class CloseEvent extends Event{static{__name(this,\"CloseEvent\")}#eventInit;constructor(type,eventInitDict={}){const prefix=\"CloseEvent constructor\";webidl.argumentLengthCheck(arguments,1,prefix);type=webidl.converters.DOMString(type,prefix,\"type\");eventInitDict=webidl.converters.CloseEventInit(eventInitDict);super(type,eventInitDict);this.#eventInit=eventInitDict;webidl.util.markAsUncloneable(this)}get wasClean(){webidl.brandCheck(this,CloseEvent);return this.#eventInit.wasClean}get code(){webidl.brandCheck(this,CloseEvent);return this.#eventInit.code}get reason(){webidl.brandCheck(this,CloseEvent);return this.#eventInit.reason}}class ErrorEvent extends Event{static{__name(this,\"ErrorEvent\")}#eventInit;constructor(type,eventInitDict){const prefix=\"ErrorEvent constructor\";webidl.argumentLengthCheck(arguments,1,prefix);super(type,eventInitDict);webidl.util.markAsUncloneable(this);type=webidl.converters.DOMString(type,prefix,\"type\");eventInitDict=webidl.converters.ErrorEventInit(eventInitDict??{});this.#eventInit=eventInitDict}get message(){webidl.brandCheck(this,ErrorEvent);return this.#eventInit.message}get filename(){webidl.brandCheck(this,ErrorEvent);return this.#eventInit.filename}get lineno(){webidl.brandCheck(this,ErrorEvent);return this.#eventInit.lineno}get colno(){webidl.brandCheck(this,ErrorEvent);return this.#eventInit.colno}get error(){webidl.brandCheck(this,ErrorEvent);return this.#eventInit.error}}Object.defineProperties(MessageEvent.prototype,{[Symbol.toStringTag]:{value:\"MessageEvent\",configurable:true},data:kEnumerableProperty,origin:kEnumerableProperty,lastEventId:kEnumerableProperty,source:kEnumerableProperty,ports:kEnumerableProperty,initMessageEvent:kEnumerableProperty});Object.defineProperties(CloseEvent.prototype,{[Symbol.toStringTag]:{value:\"CloseEvent\",configurable:true},reason:kEnumerableProperty,code:kEnumerableProperty,wasClean:kEnumerableProperty});Object.defineProperties(ErrorEvent.prototype,{[Symbol.toStringTag]:{value:\"ErrorEvent\",configurable:true},message:kEnumerableProperty,filename:kEnumerableProperty,lineno:kEnumerableProperty,colno:kEnumerableProperty,error:kEnumerableProperty});webidl.converters.MessagePort=webidl.interfaceConverter(MessagePort);webidl.converters[\"sequence<MessagePort>\"]=webidl.sequenceConverter(webidl.converters.MessagePort);const eventInit=[{key:\"bubbles\",converter:webidl.converters.boolean,defaultValue:()=>false},{key:\"cancelable\",converter:webidl.converters.boolean,defaultValue:()=>false},{key:\"composed\",converter:webidl.converters.boolean,defaultValue:()=>false}];webidl.converters.MessageEventInit=webidl.dictionaryConverter([...eventInit,{key:\"data\",converter:webidl.converters.any,defaultValue:()=>null},{key:\"origin\",converter:webidl.converters.USVString,defaultValue:()=>\"\"},{key:\"lastEventId\",converter:webidl.converters.DOMString,defaultValue:()=>\"\"},{key:\"source\",converter:webidl.nullableConverter(webidl.converters.MessagePort),defaultValue:()=>null},{key:\"ports\",converter:webidl.converters[\"sequence<MessagePort>\"],defaultValue:()=>new Array(0)}]);webidl.converters.CloseEventInit=webidl.dictionaryConverter([...eventInit,{key:\"wasClean\",converter:webidl.converters.boolean,defaultValue:()=>false},{key:\"code\",converter:webidl.converters[\"unsigned short\"],defaultValue:()=>0},{key:\"reason\",converter:webidl.converters.USVString,defaultValue:()=>\"\"}]);webidl.converters.ErrorEventInit=webidl.dictionaryConverter([...eventInit,{key:\"message\",converter:webidl.converters.DOMString,defaultValue:()=>\"\"},{key:\"filename\",converter:webidl.converters.USVString,defaultValue:()=>\"\"},{key:\"lineno\",converter:webidl.converters[\"unsigned long\"],defaultValue:()=>0},{key:\"colno\",converter:webidl.converters[\"unsigned long\"],defaultValue:()=>0},{key:\"error\",converter:webidl.converters.any}]);module.exports={MessageEvent,CloseEvent,ErrorEvent,createFastMessageEvent};\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HAEA,KAAM,CAAE,MAAO,EAAI,QAAQ,iBAAiB,EAC5C,KAAM,CAAE,mBAAoB,EAAI,QAAQ,iBAAiB,EACzD,KAAM,CAAE,UAAW,EAAI,QAAQ,oBAAoB,EACnD,KAAM,CAAE,WAAY,EAAI,QAAQ,qBAAqB,EAKrD,MAAM,qBAAqB,KAAM,CAVjC,MAUiC,6BAC/B,WAEA,YAAa,KAAM,cAAgB,CAAC,EAAG,CACrC,GAAI,OAAS,WAAY,CACvB,MAAM,UAAU,CAAC,EAAG,UAAU,CAAC,CAAC,EAChC,OAAO,KAAK,kBAAkB,IAAI,EAClC,MACF,CAEA,MAAM,OAAS,2BACf,OAAO,oBAAoB,UAAW,EAAG,MAAM,EAE/C,KAAO,OAAO,WAAW,UAAU,KAAM,OAAQ,MAAM,EACvD,cAAgB,OAAO,WAAW,iBAAiB,cAAe,OAAQ,eAAe,EAEzF,MAAM,KAAM,aAAa,EAEzB,KAAK,WAAa,cAClB,OAAO,KAAK,kBAAkB,IAAI,CACpC,CAEA,IAAI,MAAQ,CACV,OAAO,WAAW,KAAM,YAAY,EAEpC,OAAO,KAAK,WAAW,IACzB,CAEA,IAAI,QAAU,CACZ,OAAO,WAAW,KAAM,YAAY,EAEpC,OAAO,KAAK,WAAW,MACzB,CAEA,IAAI,aAAe,CACjB,OAAO,WAAW,KAAM,YAAY,EAEpC,OAAO,KAAK,WAAW,WACzB,CAEA,IAAI,QAAU,CACZ,OAAO,WAAW,KAAM,YAAY,EAEpC,OAAO,KAAK,WAAW,MACzB,CAEA,IAAI,OAAS,CACX,OAAO,WAAW,KAAM,YAAY,EAEpC,GAAI,CAAC,OAAO,SAAS,KAAK,WAAW,KAAK,EAAG,CAC3C,OAAO,OAAO,KAAK,WAAW,KAAK,CACrC,CAEA,OAAO,KAAK,WAAW,KACzB,CAEA,iBACE,KACA,QAAU,MACV,WAAa,MACb,KAAO,KACP,OAAS,GACT,YAAc,GACd,OAAS,KACT,MAAQ,CAAC,EACT,CACA,OAAO,WAAW,KAAM,YAAY,EAEpC,OAAO,oBAAoB,UAAW,EAAG,+BAA+B,EAExE,OAAO,IAAI,aAAa,KAAM,CAC5B,QAAS,WAAY,KAAM,OAAQ,YAAa,OAAQ,KAC1D,CAAC,CACH,CAEA,OAAO,uBAAwB,KAAM,KAAM,CACzC,MAAM,aAAe,IAAI,aAAa,WAAY,KAAM,IAAI,EAC5D,aAAa,WAAa,KAC1B,aAAa,WAAW,OAAS,KACjC,aAAa,WAAW,SAAW,GACnC,aAAa,WAAW,cAAgB,GACxC,aAAa,WAAW,SAAW,KACnC,aAAa,WAAW,QAAU,CAAC,EACnC,OAAO,YACT,CACF,CAEA,KAAM,CAAE,sBAAuB,EAAI,aACnC,OAAO,aAAa,uBAKpB,MAAM,mBAAmB,KAAM,CAvG/B,MAuG+B,2BAC7B,WAEA,YAAa,KAAM,cAAgB,CAAC,EAAG,CACrC,MAAM,OAAS,yBACf,OAAO,oBAAoB,UAAW,EAAG,MAAM,EAE/C,KAAO,OAAO,WAAW,UAAU,KAAM,OAAQ,MAAM,EACvD,cAAgB,OAAO,WAAW,eAAe,aAAa,EAE9D,MAAM,KAAM,aAAa,EAEzB,KAAK,WAAa,cAClB,OAAO,KAAK,kBAAkB,IAAI,CACpC,CAEA,IAAI,UAAY,CACd,OAAO,WAAW,KAAM,UAAU,EAElC,OAAO,KAAK,WAAW,QACzB,CAEA,IAAI,MAAQ,CACV,OAAO,WAAW,KAAM,UAAU,EAElC,OAAO,KAAK,WAAW,IACzB,CAEA,IAAI,QAAU,CACZ,OAAO,WAAW,KAAM,UAAU,EAElC,OAAO,KAAK,WAAW,MACzB,CACF,CAGA,MAAM,mBAAmB,KAAM,CA3I/B,MA2I+B,2BAC7B,WAEA,YAAa,KAAM,cAAe,CAChC,MAAM,OAAS,yBACf,OAAO,oBAAoB,UAAW,EAAG,MAAM,EAE/C,MAAM,KAAM,aAAa,EACzB,OAAO,KAAK,kBAAkB,IAAI,EAElC,KAAO,OAAO,WAAW,UAAU,KAAM,OAAQ,MAAM,EACvD,cAAgB,OAAO,WAAW,eAAe,eAAiB,CAAC,CAAC,EAEpE,KAAK,WAAa,aACpB,CAEA,IAAI,SAAW,CACb,OAAO,WAAW,KAAM,UAAU,EAElC,OAAO,KAAK,WAAW,OACzB,CAEA,IAAI,UAAY,CACd,OAAO,WAAW,KAAM,UAAU,EAElC,OAAO,KAAK,WAAW,QACzB,CAEA,IAAI,QAAU,CACZ,OAAO,WAAW,KAAM,UAAU,EAElC,OAAO,KAAK,WAAW,MACzB,CAEA,IAAI,OAAS,CACX,OAAO,WAAW,KAAM,UAAU,EAElC,OAAO,KAAK,WAAW,KACzB,CAEA,IAAI,OAAS,CACX,OAAO,WAAW,KAAM,UAAU,EAElC,OAAO,KAAK,WAAW,KACzB,CACF,CAEA,OAAO,iBAAiB,aAAa,UAAW,CAC9C,CAAC,OAAO,WAAW,EAAG,CACpB,MAAO,eACP,aAAc,IAChB,EACA,KAAM,oBACN,OAAQ,oBACR,YAAa,oBACb,OAAQ,oBACR,MAAO,oBACP,iBAAkB,mBACpB,CAAC,EAED,OAAO,iBAAiB,WAAW,UAAW,CAC5C,CAAC,OAAO,WAAW,EAAG,CACpB,MAAO,aACP,aAAc,IAChB,EACA,OAAQ,oBACR,KAAM,oBACN,SAAU,mBACZ,CAAC,EAED,OAAO,iBAAiB,WAAW,UAAW,CAC5C,CAAC,OAAO,WAAW,EAAG,CACpB,MAAO,aACP,aAAc,IAChB,EACA,QAAS,oBACT,SAAU,oBACV,OAAQ,oBACR,MAAO,oBACP,MAAO,mBACT,CAAC,EAED,OAAO,WAAW,YAAc,OAAO,mBAAmB,WAAW,EAErE,OAAO,WAAW,uBAAuB,EAAI,OAAO,kBAClD,OAAO,WAAW,WACpB,EAEA,MAAM,UAAY,CAChB,CACE,IAAK,UACL,UAAW,OAAO,WAAW,QAC7B,aAAc,IAAM,KACtB,EACA,CACE,IAAK,aACL,UAAW,OAAO,WAAW,QAC7B,aAAc,IAAM,KACtB,EACA,CACE,IAAK,WACL,UAAW,OAAO,WAAW,QAC7B,aAAc,IAAM,KACtB,CACF,EAEA,OAAO,WAAW,iBAAmB,OAAO,oBAAoB,CAC9D,GAAG,UACH,CACE,IAAK,OACL,UAAW,OAAO,WAAW,IAC7B,aAAc,IAAM,IACtB,EACA,CACE,IAAK,SACL,UAAW,OAAO,WAAW,UAC7B,aAAc,IAAM,EACtB,EACA,CACE,IAAK,cACL,UAAW,OAAO,WAAW,UAC7B,aAAc,IAAM,EACtB,EACA,CACE,IAAK,SAGL,UAAW,OAAO,kBAAkB,OAAO,WAAW,WAAW,EACjE,aAAc,IAAM,IACtB,EACA,CACE,IAAK,QACL,UAAW,OAAO,WAAW,uBAAuB,EACpD,aAAc,IAAM,IAAI,MAAM,CAAC,CACjC,CACF,CAAC,EAED,OAAO,WAAW,eAAiB,OAAO,oBAAoB,CAC5D,GAAG,UACH,CACE,IAAK,WACL,UAAW,OAAO,WAAW,QAC7B,aAAc,IAAM,KACtB,EACA,CACE,IAAK,OACL,UAAW,OAAO,WAAW,gBAAgB,EAC7C,aAAc,IAAM,CACtB,EACA,CACE,IAAK,SACL,UAAW,OAAO,WAAW,UAC7B,aAAc,IAAM,EACtB,CACF,CAAC,EAED,OAAO,WAAW,eAAiB,OAAO,oBAAoB,CAC5D,GAAG,UACH,CACE,IAAK,UACL,UAAW,OAAO,WAAW,UAC7B,aAAc,IAAM,EACtB,EACA,CACE,IAAK,WACL,UAAW,OAAO,WAAW,UAC7B,aAAc,IAAM,EACtB,EACA,CACE,IAAK,SACL,UAAW,OAAO,WAAW,eAAe,EAC5C,aAAc,IAAM,CACtB,EACA,CACE,IAAK,QACL,UAAW,OAAO,WAAW,eAAe,EAC5C,aAAc,IAAM,CACtB,EACA,CACE,IAAK,QACL,UAAW,OAAO,WAAW,GAC/B,CACF,CAAC,EAED,OAAO,QAAU,CACf,aACA,WACA,WACA,sBACF","names":[],"sources":["/home/creditga/CofiCarte/node_modules/.pnpm/undici@6.21.0/node_modules/undici/lib/web/websocket/events.js"],"sourcesContent":["'use strict'\n\nconst { webidl } = require('../fetch/webidl')\nconst { kEnumerableProperty } = require('../../core/util')\nconst { kConstruct } = require('../../core/symbols')\nconst { MessagePort } = require('node:worker_threads')\n\n/**\n * @see https://html.spec.whatwg.org/multipage/comms.html#messageevent\n */\nclass MessageEvent extends Event {\n  #eventInit\n\n  constructor (type, eventInitDict = {}) {\n    if (type === kConstruct) {\n      super(arguments[1], arguments[2])\n      webidl.util.markAsUncloneable(this)\n      return\n    }\n\n    const prefix = 'MessageEvent constructor'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    type = webidl.converters.DOMString(type, prefix, 'type')\n    eventInitDict = webidl.converters.MessageEventInit(eventInitDict, prefix, 'eventInitDict')\n\n    super(type, eventInitDict)\n\n    this.#eventInit = eventInitDict\n    webidl.util.markAsUncloneable(this)\n  }\n\n  get data () {\n    webidl.brandCheck(this, MessageEvent)\n\n    return this.#eventInit.data\n  }\n\n  get origin () {\n    webidl.brandCheck(this, MessageEvent)\n\n    return this.#eventInit.origin\n  }\n\n  get lastEventId () {\n    webidl.brandCheck(this, MessageEvent)\n\n    return this.#eventInit.lastEventId\n  }\n\n  get source () {\n    webidl.brandCheck(this, MessageEvent)\n\n    return this.#eventInit.source\n  }\n\n  get ports () {\n    webidl.brandCheck(this, MessageEvent)\n\n    if (!Object.isFrozen(this.#eventInit.ports)) {\n      Object.freeze(this.#eventInit.ports)\n    }\n\n    return this.#eventInit.ports\n  }\n\n  initMessageEvent (\n    type,\n    bubbles = false,\n    cancelable = false,\n    data = null,\n    origin = '',\n    lastEventId = '',\n    source = null,\n    ports = []\n  ) {\n    webidl.brandCheck(this, MessageEvent)\n\n    webidl.argumentLengthCheck(arguments, 1, 'MessageEvent.initMessageEvent')\n\n    return new MessageEvent(type, {\n      bubbles, cancelable, data, origin, lastEventId, source, ports\n    })\n  }\n\n  static createFastMessageEvent (type, init) {\n    const messageEvent = new MessageEvent(kConstruct, type, init)\n    messageEvent.#eventInit = init\n    messageEvent.#eventInit.data ??= null\n    messageEvent.#eventInit.origin ??= ''\n    messageEvent.#eventInit.lastEventId ??= ''\n    messageEvent.#eventInit.source ??= null\n    messageEvent.#eventInit.ports ??= []\n    return messageEvent\n  }\n}\n\nconst { createFastMessageEvent } = MessageEvent\ndelete MessageEvent.createFastMessageEvent\n\n/**\n * @see https://websockets.spec.whatwg.org/#the-closeevent-interface\n */\nclass CloseEvent extends Event {\n  #eventInit\n\n  constructor (type, eventInitDict = {}) {\n    const prefix = 'CloseEvent constructor'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    type = webidl.converters.DOMString(type, prefix, 'type')\n    eventInitDict = webidl.converters.CloseEventInit(eventInitDict)\n\n    super(type, eventInitDict)\n\n    this.#eventInit = eventInitDict\n    webidl.util.markAsUncloneable(this)\n  }\n\n  get wasClean () {\n    webidl.brandCheck(this, CloseEvent)\n\n    return this.#eventInit.wasClean\n  }\n\n  get code () {\n    webidl.brandCheck(this, CloseEvent)\n\n    return this.#eventInit.code\n  }\n\n  get reason () {\n    webidl.brandCheck(this, CloseEvent)\n\n    return this.#eventInit.reason\n  }\n}\n\n// https://html.spec.whatwg.org/multipage/webappapis.html#the-errorevent-interface\nclass ErrorEvent extends Event {\n  #eventInit\n\n  constructor (type, eventInitDict) {\n    const prefix = 'ErrorEvent constructor'\n    webidl.argumentLengthCheck(arguments, 1, prefix)\n\n    super(type, eventInitDict)\n    webidl.util.markAsUncloneable(this)\n\n    type = webidl.converters.DOMString(type, prefix, 'type')\n    eventInitDict = webidl.converters.ErrorEventInit(eventInitDict ?? {})\n\n    this.#eventInit = eventInitDict\n  }\n\n  get message () {\n    webidl.brandCheck(this, ErrorEvent)\n\n    return this.#eventInit.message\n  }\n\n  get filename () {\n    webidl.brandCheck(this, ErrorEvent)\n\n    return this.#eventInit.filename\n  }\n\n  get lineno () {\n    webidl.brandCheck(this, ErrorEvent)\n\n    return this.#eventInit.lineno\n  }\n\n  get colno () {\n    webidl.brandCheck(this, ErrorEvent)\n\n    return this.#eventInit.colno\n  }\n\n  get error () {\n    webidl.brandCheck(this, ErrorEvent)\n\n    return this.#eventInit.error\n  }\n}\n\nObject.defineProperties(MessageEvent.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'MessageEvent',\n    configurable: true\n  },\n  data: kEnumerableProperty,\n  origin: kEnumerableProperty,\n  lastEventId: kEnumerableProperty,\n  source: kEnumerableProperty,\n  ports: kEnumerableProperty,\n  initMessageEvent: kEnumerableProperty\n})\n\nObject.defineProperties(CloseEvent.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'CloseEvent',\n    configurable: true\n  },\n  reason: kEnumerableProperty,\n  code: kEnumerableProperty,\n  wasClean: kEnumerableProperty\n})\n\nObject.defineProperties(ErrorEvent.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'ErrorEvent',\n    configurable: true\n  },\n  message: kEnumerableProperty,\n  filename: kEnumerableProperty,\n  lineno: kEnumerableProperty,\n  colno: kEnumerableProperty,\n  error: kEnumerableProperty\n})\n\nwebidl.converters.MessagePort = webidl.interfaceConverter(MessagePort)\n\nwebidl.converters['sequence<MessagePort>'] = webidl.sequenceConverter(\n  webidl.converters.MessagePort\n)\n\nconst eventInit = [\n  {\n    key: 'bubbles',\n    converter: webidl.converters.boolean,\n    defaultValue: () => false\n  },\n  {\n    key: 'cancelable',\n    converter: webidl.converters.boolean,\n    defaultValue: () => false\n  },\n  {\n    key: 'composed',\n    converter: webidl.converters.boolean,\n    defaultValue: () => false\n  }\n]\n\nwebidl.converters.MessageEventInit = webidl.dictionaryConverter([\n  ...eventInit,\n  {\n    key: 'data',\n    converter: webidl.converters.any,\n    defaultValue: () => null\n  },\n  {\n    key: 'origin',\n    converter: webidl.converters.USVString,\n    defaultValue: () => ''\n  },\n  {\n    key: 'lastEventId',\n    converter: webidl.converters.DOMString,\n    defaultValue: () => ''\n  },\n  {\n    key: 'source',\n    // Node doesn't implement WindowProxy or ServiceWorker, so the only\n    // valid value for source is a MessagePort.\n    converter: webidl.nullableConverter(webidl.converters.MessagePort),\n    defaultValue: () => null\n  },\n  {\n    key: 'ports',\n    converter: webidl.converters['sequence<MessagePort>'],\n    defaultValue: () => new Array(0)\n  }\n])\n\nwebidl.converters.CloseEventInit = webidl.dictionaryConverter([\n  ...eventInit,\n  {\n    key: 'wasClean',\n    converter: webidl.converters.boolean,\n    defaultValue: () => false\n  },\n  {\n    key: 'code',\n    converter: webidl.converters['unsigned short'],\n    defaultValue: () => 0\n  },\n  {\n    key: 'reason',\n    converter: webidl.converters.USVString,\n    defaultValue: () => ''\n  }\n])\n\nwebidl.converters.ErrorEventInit = webidl.dictionaryConverter([\n  ...eventInit,\n  {\n    key: 'message',\n    converter: webidl.converters.DOMString,\n    defaultValue: () => ''\n  },\n  {\n    key: 'filename',\n    converter: webidl.converters.USVString,\n    defaultValue: () => ''\n  },\n  {\n    key: 'lineno',\n    converter: webidl.converters['unsigned long'],\n    defaultValue: () => 0\n  },\n  {\n    key: 'colno',\n    converter: webidl.converters['unsigned long'],\n    defaultValue: () => 0\n  },\n  {\n    key: 'error',\n    converter: webidl.converters.any\n  }\n])\n\nmodule.exports = {\n  MessageEvent,\n  CloseEvent,\n  ErrorEvent,\n  createFastMessageEvent\n}\n"]}}