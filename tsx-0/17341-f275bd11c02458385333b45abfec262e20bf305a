{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});exports.QuoteType=void 0;var decode_js_1=require(\"entities/lib/decode.js\");var CharCodes;(function(CharCodes2){CharCodes2[CharCodes2[\"Tab\"]=9]=\"Tab\";CharCodes2[CharCodes2[\"NewLine\"]=10]=\"NewLine\";CharCodes2[CharCodes2[\"FormFeed\"]=12]=\"FormFeed\";CharCodes2[CharCodes2[\"CarriageReturn\"]=13]=\"CarriageReturn\";CharCodes2[CharCodes2[\"Space\"]=32]=\"Space\";CharCodes2[CharCodes2[\"ExclamationMark\"]=33]=\"ExclamationMark\";CharCodes2[CharCodes2[\"Number\"]=35]=\"Number\";CharCodes2[CharCodes2[\"Amp\"]=38]=\"Amp\";CharCodes2[CharCodes2[\"SingleQuote\"]=39]=\"SingleQuote\";CharCodes2[CharCodes2[\"DoubleQuote\"]=34]=\"DoubleQuote\";CharCodes2[CharCodes2[\"Dash\"]=45]=\"Dash\";CharCodes2[CharCodes2[\"Slash\"]=47]=\"Slash\";CharCodes2[CharCodes2[\"Zero\"]=48]=\"Zero\";CharCodes2[CharCodes2[\"Nine\"]=57]=\"Nine\";CharCodes2[CharCodes2[\"Semi\"]=59]=\"Semi\";CharCodes2[CharCodes2[\"Lt\"]=60]=\"Lt\";CharCodes2[CharCodes2[\"Eq\"]=61]=\"Eq\";CharCodes2[CharCodes2[\"Gt\"]=62]=\"Gt\";CharCodes2[CharCodes2[\"Questionmark\"]=63]=\"Questionmark\";CharCodes2[CharCodes2[\"UpperA\"]=65]=\"UpperA\";CharCodes2[CharCodes2[\"LowerA\"]=97]=\"LowerA\";CharCodes2[CharCodes2[\"UpperF\"]=70]=\"UpperF\";CharCodes2[CharCodes2[\"LowerF\"]=102]=\"LowerF\";CharCodes2[CharCodes2[\"UpperZ\"]=90]=\"UpperZ\";CharCodes2[CharCodes2[\"LowerZ\"]=122]=\"LowerZ\";CharCodes2[CharCodes2[\"LowerX\"]=120]=\"LowerX\";CharCodes2[CharCodes2[\"OpeningSquareBracket\"]=91]=\"OpeningSquareBracket\"})(CharCodes||(CharCodes={}));var State;(function(State2){State2[State2[\"Text\"]=1]=\"Text\";State2[State2[\"BeforeTagName\"]=2]=\"BeforeTagName\";State2[State2[\"InTagName\"]=3]=\"InTagName\";State2[State2[\"InSelfClosingTag\"]=4]=\"InSelfClosingTag\";State2[State2[\"BeforeClosingTagName\"]=5]=\"BeforeClosingTagName\";State2[State2[\"InClosingTagName\"]=6]=\"InClosingTagName\";State2[State2[\"AfterClosingTagName\"]=7]=\"AfterClosingTagName\";State2[State2[\"BeforeAttributeName\"]=8]=\"BeforeAttributeName\";State2[State2[\"InAttributeName\"]=9]=\"InAttributeName\";State2[State2[\"AfterAttributeName\"]=10]=\"AfterAttributeName\";State2[State2[\"BeforeAttributeValue\"]=11]=\"BeforeAttributeValue\";State2[State2[\"InAttributeValueDq\"]=12]=\"InAttributeValueDq\";State2[State2[\"InAttributeValueSq\"]=13]=\"InAttributeValueSq\";State2[State2[\"InAttributeValueNq\"]=14]=\"InAttributeValueNq\";State2[State2[\"BeforeDeclaration\"]=15]=\"BeforeDeclaration\";State2[State2[\"InDeclaration\"]=16]=\"InDeclaration\";State2[State2[\"InProcessingInstruction\"]=17]=\"InProcessingInstruction\";State2[State2[\"BeforeComment\"]=18]=\"BeforeComment\";State2[State2[\"CDATASequence\"]=19]=\"CDATASequence\";State2[State2[\"InSpecialComment\"]=20]=\"InSpecialComment\";State2[State2[\"InCommentLike\"]=21]=\"InCommentLike\";State2[State2[\"BeforeSpecialS\"]=22]=\"BeforeSpecialS\";State2[State2[\"BeforeSpecialT\"]=23]=\"BeforeSpecialT\";State2[State2[\"SpecialStartSequence\"]=24]=\"SpecialStartSequence\";State2[State2[\"InSpecialTag\"]=25]=\"InSpecialTag\";State2[State2[\"InEntity\"]=26]=\"InEntity\"})(State||(State={}));function isWhitespace(c){return c===CharCodes.Space||c===CharCodes.NewLine||c===CharCodes.Tab||c===CharCodes.FormFeed||c===CharCodes.CarriageReturn}__name(isWhitespace,\"isWhitespace\");function isEndOfTagSection(c){return c===CharCodes.Slash||c===CharCodes.Gt||isWhitespace(c)}__name(isEndOfTagSection,\"isEndOfTagSection\");function isASCIIAlpha(c){return c>=CharCodes.LowerA&&c<=CharCodes.LowerZ||c>=CharCodes.UpperA&&c<=CharCodes.UpperZ}__name(isASCIIAlpha,\"isASCIIAlpha\");var QuoteType;(function(QuoteType2){QuoteType2[QuoteType2[\"NoValue\"]=0]=\"NoValue\";QuoteType2[QuoteType2[\"Unquoted\"]=1]=\"Unquoted\";QuoteType2[QuoteType2[\"Single\"]=2]=\"Single\";QuoteType2[QuoteType2[\"Double\"]=3]=\"Double\"})(QuoteType||(exports.QuoteType=QuoteType={}));var Sequences={Cdata:new Uint8Array([67,68,65,84,65,91]),CdataEnd:new Uint8Array([93,93,62]),CommentEnd:new Uint8Array([45,45,62]),ScriptEnd:new Uint8Array([60,47,115,99,114,105,112,116]),StyleEnd:new Uint8Array([60,47,115,116,121,108,101]),TitleEnd:new Uint8Array([60,47,116,105,116,108,101]),TextareaEnd:new Uint8Array([60,47,116,101,120,116,97,114,101,97])};var Tokenizer=function(){function Tokenizer2(_a,cbs){var _b=_a.xmlMode,xmlMode=_b===void 0?false:_b,_c=_a.decodeEntities,decodeEntities=_c===void 0?true:_c;var _this=this;this.cbs=cbs;this.state=State.Text;this.buffer=\"\";this.sectionStart=0;this.index=0;this.entityStart=0;this.baseState=State.Text;this.isSpecial=false;this.running=true;this.offset=0;this.currentSequence=void 0;this.sequenceIndex=0;this.xmlMode=xmlMode;this.decodeEntities=decodeEntities;this.entityDecoder=new decode_js_1.EntityDecoder(xmlMode?decode_js_1.xmlDecodeTree:decode_js_1.htmlDecodeTree,function(cp,consumed){return _this.emitCodePoint(cp,consumed)})}__name(Tokenizer2,\"Tokenizer\");Tokenizer2.prototype.reset=function(){this.state=State.Text;this.buffer=\"\";this.sectionStart=0;this.index=0;this.baseState=State.Text;this.currentSequence=void 0;this.running=true;this.offset=0};Tokenizer2.prototype.write=function(chunk){this.offset+=this.buffer.length;this.buffer=chunk;this.parse()};Tokenizer2.prototype.end=function(){if(this.running)this.finish()};Tokenizer2.prototype.pause=function(){this.running=false};Tokenizer2.prototype.resume=function(){this.running=true;if(this.index<this.buffer.length+this.offset){this.parse()}};Tokenizer2.prototype.stateText=function(c){if(c===CharCodes.Lt||!this.decodeEntities&&this.fastForwardTo(CharCodes.Lt)){if(this.index>this.sectionStart){this.cbs.ontext(this.sectionStart,this.index)}this.state=State.BeforeTagName;this.sectionStart=this.index}else if(this.decodeEntities&&c===CharCodes.Amp){this.startEntity()}};Tokenizer2.prototype.stateSpecialStartSequence=function(c){var isEnd=this.sequenceIndex===this.currentSequence.length;var isMatch=isEnd?isEndOfTagSection(c):(c|32)===this.currentSequence[this.sequenceIndex];if(!isMatch){this.isSpecial=false}else if(!isEnd){this.sequenceIndex++;return}this.sequenceIndex=0;this.state=State.InTagName;this.stateInTagName(c)};Tokenizer2.prototype.stateInSpecialTag=function(c){if(this.sequenceIndex===this.currentSequence.length){if(c===CharCodes.Gt||isWhitespace(c)){var endOfText=this.index-this.currentSequence.length;if(this.sectionStart<endOfText){var actualIndex=this.index;this.index=endOfText;this.cbs.ontext(this.sectionStart,endOfText);this.index=actualIndex}this.isSpecial=false;this.sectionStart=endOfText+2;this.stateInClosingTagName(c);return}this.sequenceIndex=0}if((c|32)===this.currentSequence[this.sequenceIndex]){this.sequenceIndex+=1}else if(this.sequenceIndex===0){if(this.currentSequence===Sequences.TitleEnd){if(this.decodeEntities&&c===CharCodes.Amp){this.startEntity()}}else if(this.fastForwardTo(CharCodes.Lt)){this.sequenceIndex=1}}else{this.sequenceIndex=Number(c===CharCodes.Lt)}};Tokenizer2.prototype.stateCDATASequence=function(c){if(c===Sequences.Cdata[this.sequenceIndex]){if(++this.sequenceIndex===Sequences.Cdata.length){this.state=State.InCommentLike;this.currentSequence=Sequences.CdataEnd;this.sequenceIndex=0;this.sectionStart=this.index+1}}else{this.sequenceIndex=0;this.state=State.InDeclaration;this.stateInDeclaration(c)}};Tokenizer2.prototype.fastForwardTo=function(c){while(++this.index<this.buffer.length+this.offset){if(this.buffer.charCodeAt(this.index-this.offset)===c){return true}}this.index=this.buffer.length+this.offset-1;return false};Tokenizer2.prototype.stateInCommentLike=function(c){if(c===this.currentSequence[this.sequenceIndex]){if(++this.sequenceIndex===this.currentSequence.length){if(this.currentSequence===Sequences.CdataEnd){this.cbs.oncdata(this.sectionStart,this.index,2)}else{this.cbs.oncomment(this.sectionStart,this.index,2)}this.sequenceIndex=0;this.sectionStart=this.index+1;this.state=State.Text}}else if(this.sequenceIndex===0){if(this.fastForwardTo(this.currentSequence[0])){this.sequenceIndex=1}}else if(c!==this.currentSequence[this.sequenceIndex-1]){this.sequenceIndex=0}};Tokenizer2.prototype.isTagStartChar=function(c){return this.xmlMode?!isEndOfTagSection(c):isASCIIAlpha(c)};Tokenizer2.prototype.startSpecial=function(sequence,offset){this.isSpecial=true;this.currentSequence=sequence;this.sequenceIndex=offset;this.state=State.SpecialStartSequence};Tokenizer2.prototype.stateBeforeTagName=function(c){if(c===CharCodes.ExclamationMark){this.state=State.BeforeDeclaration;this.sectionStart=this.index+1}else if(c===CharCodes.Questionmark){this.state=State.InProcessingInstruction;this.sectionStart=this.index+1}else if(this.isTagStartChar(c)){var lower=c|32;this.sectionStart=this.index;if(this.xmlMode){this.state=State.InTagName}else if(lower===Sequences.ScriptEnd[2]){this.state=State.BeforeSpecialS}else if(lower===Sequences.TitleEnd[2]){this.state=State.BeforeSpecialT}else{this.state=State.InTagName}}else if(c===CharCodes.Slash){this.state=State.BeforeClosingTagName}else{this.state=State.Text;this.stateText(c)}};Tokenizer2.prototype.stateInTagName=function(c){if(isEndOfTagSection(c)){this.cbs.onopentagname(this.sectionStart,this.index);this.sectionStart=-1;this.state=State.BeforeAttributeName;this.stateBeforeAttributeName(c)}};Tokenizer2.prototype.stateBeforeClosingTagName=function(c){if(isWhitespace(c)){}else if(c===CharCodes.Gt){this.state=State.Text}else{this.state=this.isTagStartChar(c)?State.InClosingTagName:State.InSpecialComment;this.sectionStart=this.index}};Tokenizer2.prototype.stateInClosingTagName=function(c){if(c===CharCodes.Gt||isWhitespace(c)){this.cbs.onclosetag(this.sectionStart,this.index);this.sectionStart=-1;this.state=State.AfterClosingTagName;this.stateAfterClosingTagName(c)}};Tokenizer2.prototype.stateAfterClosingTagName=function(c){if(c===CharCodes.Gt||this.fastForwardTo(CharCodes.Gt)){this.state=State.Text;this.sectionStart=this.index+1}};Tokenizer2.prototype.stateBeforeAttributeName=function(c){if(c===CharCodes.Gt){this.cbs.onopentagend(this.index);if(this.isSpecial){this.state=State.InSpecialTag;this.sequenceIndex=0}else{this.state=State.Text}this.sectionStart=this.index+1}else if(c===CharCodes.Slash){this.state=State.InSelfClosingTag}else if(!isWhitespace(c)){this.state=State.InAttributeName;this.sectionStart=this.index}};Tokenizer2.prototype.stateInSelfClosingTag=function(c){if(c===CharCodes.Gt){this.cbs.onselfclosingtag(this.index);this.state=State.Text;this.sectionStart=this.index+1;this.isSpecial=false}else if(!isWhitespace(c)){this.state=State.BeforeAttributeName;this.stateBeforeAttributeName(c)}};Tokenizer2.prototype.stateInAttributeName=function(c){if(c===CharCodes.Eq||isEndOfTagSection(c)){this.cbs.onattribname(this.sectionStart,this.index);this.sectionStart=this.index;this.state=State.AfterAttributeName;this.stateAfterAttributeName(c)}};Tokenizer2.prototype.stateAfterAttributeName=function(c){if(c===CharCodes.Eq){this.state=State.BeforeAttributeValue}else if(c===CharCodes.Slash||c===CharCodes.Gt){this.cbs.onattribend(QuoteType.NoValue,this.sectionStart);this.sectionStart=-1;this.state=State.BeforeAttributeName;this.stateBeforeAttributeName(c)}else if(!isWhitespace(c)){this.cbs.onattribend(QuoteType.NoValue,this.sectionStart);this.state=State.InAttributeName;this.sectionStart=this.index}};Tokenizer2.prototype.stateBeforeAttributeValue=function(c){if(c===CharCodes.DoubleQuote){this.state=State.InAttributeValueDq;this.sectionStart=this.index+1}else if(c===CharCodes.SingleQuote){this.state=State.InAttributeValueSq;this.sectionStart=this.index+1}else if(!isWhitespace(c)){this.sectionStart=this.index;this.state=State.InAttributeValueNq;this.stateInAttributeValueNoQuotes(c)}};Tokenizer2.prototype.handleInAttributeValue=function(c,quote){if(c===quote||!this.decodeEntities&&this.fastForwardTo(quote)){this.cbs.onattribdata(this.sectionStart,this.index);this.sectionStart=-1;this.cbs.onattribend(quote===CharCodes.DoubleQuote?QuoteType.Double:QuoteType.Single,this.index+1);this.state=State.BeforeAttributeName}else if(this.decodeEntities&&c===CharCodes.Amp){this.startEntity()}};Tokenizer2.prototype.stateInAttributeValueDoubleQuotes=function(c){this.handleInAttributeValue(c,CharCodes.DoubleQuote)};Tokenizer2.prototype.stateInAttributeValueSingleQuotes=function(c){this.handleInAttributeValue(c,CharCodes.SingleQuote)};Tokenizer2.prototype.stateInAttributeValueNoQuotes=function(c){if(isWhitespace(c)||c===CharCodes.Gt){this.cbs.onattribdata(this.sectionStart,this.index);this.sectionStart=-1;this.cbs.onattribend(QuoteType.Unquoted,this.index);this.state=State.BeforeAttributeName;this.stateBeforeAttributeName(c)}else if(this.decodeEntities&&c===CharCodes.Amp){this.startEntity()}};Tokenizer2.prototype.stateBeforeDeclaration=function(c){if(c===CharCodes.OpeningSquareBracket){this.state=State.CDATASequence;this.sequenceIndex=0}else{this.state=c===CharCodes.Dash?State.BeforeComment:State.InDeclaration}};Tokenizer2.prototype.stateInDeclaration=function(c){if(c===CharCodes.Gt||this.fastForwardTo(CharCodes.Gt)){this.cbs.ondeclaration(this.sectionStart,this.index);this.state=State.Text;this.sectionStart=this.index+1}};Tokenizer2.prototype.stateInProcessingInstruction=function(c){if(c===CharCodes.Gt||this.fastForwardTo(CharCodes.Gt)){this.cbs.onprocessinginstruction(this.sectionStart,this.index);this.state=State.Text;this.sectionStart=this.index+1}};Tokenizer2.prototype.stateBeforeComment=function(c){if(c===CharCodes.Dash){this.state=State.InCommentLike;this.currentSequence=Sequences.CommentEnd;this.sequenceIndex=2;this.sectionStart=this.index+1}else{this.state=State.InDeclaration}};Tokenizer2.prototype.stateInSpecialComment=function(c){if(c===CharCodes.Gt||this.fastForwardTo(CharCodes.Gt)){this.cbs.oncomment(this.sectionStart,this.index,0);this.state=State.Text;this.sectionStart=this.index+1}};Tokenizer2.prototype.stateBeforeSpecialS=function(c){var lower=c|32;if(lower===Sequences.ScriptEnd[3]){this.startSpecial(Sequences.ScriptEnd,4)}else if(lower===Sequences.StyleEnd[3]){this.startSpecial(Sequences.StyleEnd,4)}else{this.state=State.InTagName;this.stateInTagName(c)}};Tokenizer2.prototype.stateBeforeSpecialT=function(c){var lower=c|32;if(lower===Sequences.TitleEnd[3]){this.startSpecial(Sequences.TitleEnd,4)}else if(lower===Sequences.TextareaEnd[3]){this.startSpecial(Sequences.TextareaEnd,4)}else{this.state=State.InTagName;this.stateInTagName(c)}};Tokenizer2.prototype.startEntity=function(){this.baseState=this.state;this.state=State.InEntity;this.entityStart=this.index;this.entityDecoder.startEntity(this.xmlMode?decode_js_1.DecodingMode.Strict:this.baseState===State.Text||this.baseState===State.InSpecialTag?decode_js_1.DecodingMode.Legacy:decode_js_1.DecodingMode.Attribute)};Tokenizer2.prototype.stateInEntity=function(){var length=this.entityDecoder.write(this.buffer,this.index-this.offset);if(length>=0){this.state=this.baseState;if(length===0){this.index=this.entityStart}}else{this.index=this.offset+this.buffer.length-1}};Tokenizer2.prototype.cleanup=function(){if(this.running&&this.sectionStart!==this.index){if(this.state===State.Text||this.state===State.InSpecialTag&&this.sequenceIndex===0){this.cbs.ontext(this.sectionStart,this.index);this.sectionStart=this.index}else if(this.state===State.InAttributeValueDq||this.state===State.InAttributeValueSq||this.state===State.InAttributeValueNq){this.cbs.onattribdata(this.sectionStart,this.index);this.sectionStart=this.index}}};Tokenizer2.prototype.shouldContinue=function(){return this.index<this.buffer.length+this.offset&&this.running};Tokenizer2.prototype.parse=function(){while(this.shouldContinue()){var c=this.buffer.charCodeAt(this.index-this.offset);switch(this.state){case State.Text:{this.stateText(c);break}case State.SpecialStartSequence:{this.stateSpecialStartSequence(c);break}case State.InSpecialTag:{this.stateInSpecialTag(c);break}case State.CDATASequence:{this.stateCDATASequence(c);break}case State.InAttributeValueDq:{this.stateInAttributeValueDoubleQuotes(c);break}case State.InAttributeName:{this.stateInAttributeName(c);break}case State.InCommentLike:{this.stateInCommentLike(c);break}case State.InSpecialComment:{this.stateInSpecialComment(c);break}case State.BeforeAttributeName:{this.stateBeforeAttributeName(c);break}case State.InTagName:{this.stateInTagName(c);break}case State.InClosingTagName:{this.stateInClosingTagName(c);break}case State.BeforeTagName:{this.stateBeforeTagName(c);break}case State.AfterAttributeName:{this.stateAfterAttributeName(c);break}case State.InAttributeValueSq:{this.stateInAttributeValueSingleQuotes(c);break}case State.BeforeAttributeValue:{this.stateBeforeAttributeValue(c);break}case State.BeforeClosingTagName:{this.stateBeforeClosingTagName(c);break}case State.AfterClosingTagName:{this.stateAfterClosingTagName(c);break}case State.BeforeSpecialS:{this.stateBeforeSpecialS(c);break}case State.BeforeSpecialT:{this.stateBeforeSpecialT(c);break}case State.InAttributeValueNq:{this.stateInAttributeValueNoQuotes(c);break}case State.InSelfClosingTag:{this.stateInSelfClosingTag(c);break}case State.InDeclaration:{this.stateInDeclaration(c);break}case State.BeforeDeclaration:{this.stateBeforeDeclaration(c);break}case State.BeforeComment:{this.stateBeforeComment(c);break}case State.InProcessingInstruction:{this.stateInProcessingInstruction(c);break}case State.InEntity:{this.stateInEntity();break}}this.index++}this.cleanup()};Tokenizer2.prototype.finish=function(){if(this.state===State.InEntity){this.entityDecoder.end();this.state=this.baseState}this.handleTrailingData();this.cbs.onend()};Tokenizer2.prototype.handleTrailingData=function(){var endIndex=this.buffer.length+this.offset;if(this.sectionStart>=endIndex){return}if(this.state===State.InCommentLike){if(this.currentSequence===Sequences.CdataEnd){this.cbs.oncdata(this.sectionStart,endIndex,0)}else{this.cbs.oncomment(this.sectionStart,endIndex,0)}}else if(this.state===State.InTagName||this.state===State.BeforeAttributeName||this.state===State.BeforeAttributeValue||this.state===State.AfterAttributeName||this.state===State.InAttributeName||this.state===State.InAttributeValueSq||this.state===State.InAttributeValueDq||this.state===State.InAttributeValueNq||this.state===State.InClosingTagName){}else{this.cbs.ontext(this.sectionStart,endIndex)}};Tokenizer2.prototype.emitCodePoint=function(cp,consumed){if(this.baseState!==State.Text&&this.baseState!==State.InSpecialTag){if(this.sectionStart<this.entityStart){this.cbs.onattribdata(this.sectionStart,this.entityStart)}this.sectionStart=this.entityStart+consumed;this.index=this.sectionStart-1;this.cbs.onattribentity(cp)}else{if(this.sectionStart<this.entityStart){this.cbs.ontext(this.sectionStart,this.entityStart)}this.sectionStart=this.entityStart+consumed;this.index=this.sectionStart-1;this.cbs.ontextentity(cp,this.sectionStart)}};return Tokenizer2}();exports.default=Tokenizer;\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HACA,OAAO,eAAe,QAAS,aAAc,CAAE,MAAO,IAAK,CAAC,EAC5D,QAAQ,UAAY,OACpB,IAAI,YAAc,QAAQ,wBAAwB,EAClD,IAAI,WACH,SAAUA,WAAW,CAClBA,WAAUA,WAAU,KAAK,EAAI,CAAC,EAAI,MAClCA,WAAUA,WAAU,SAAS,EAAI,EAAE,EAAI,UACvCA,WAAUA,WAAU,UAAU,EAAI,EAAE,EAAI,WACxCA,WAAUA,WAAU,gBAAgB,EAAI,EAAE,EAAI,iBAC9CA,WAAUA,WAAU,OAAO,EAAI,EAAE,EAAI,QACrCA,WAAUA,WAAU,iBAAiB,EAAI,EAAE,EAAI,kBAC/CA,WAAUA,WAAU,QAAQ,EAAI,EAAE,EAAI,SACtCA,WAAUA,WAAU,KAAK,EAAI,EAAE,EAAI,MACnCA,WAAUA,WAAU,aAAa,EAAI,EAAE,EAAI,cAC3CA,WAAUA,WAAU,aAAa,EAAI,EAAE,EAAI,cAC3CA,WAAUA,WAAU,MAAM,EAAI,EAAE,EAAI,OACpCA,WAAUA,WAAU,OAAO,EAAI,EAAE,EAAI,QACrCA,WAAUA,WAAU,MAAM,EAAI,EAAE,EAAI,OACpCA,WAAUA,WAAU,MAAM,EAAI,EAAE,EAAI,OACpCA,WAAUA,WAAU,MAAM,EAAI,EAAE,EAAI,OACpCA,WAAUA,WAAU,IAAI,EAAI,EAAE,EAAI,KAClCA,WAAUA,WAAU,IAAI,EAAI,EAAE,EAAI,KAClCA,WAAUA,WAAU,IAAI,EAAI,EAAE,EAAI,KAClCA,WAAUA,WAAU,cAAc,EAAI,EAAE,EAAI,eAC5CA,WAAUA,WAAU,QAAQ,EAAI,EAAE,EAAI,SACtCA,WAAUA,WAAU,QAAQ,EAAI,EAAE,EAAI,SACtCA,WAAUA,WAAU,QAAQ,EAAI,EAAE,EAAI,SACtCA,WAAUA,WAAU,QAAQ,EAAI,GAAG,EAAI,SACvCA,WAAUA,WAAU,QAAQ,EAAI,EAAE,EAAI,SACtCA,WAAUA,WAAU,QAAQ,EAAI,GAAG,EAAI,SACvCA,WAAUA,WAAU,QAAQ,EAAI,GAAG,EAAI,SACvCA,WAAUA,WAAU,sBAAsB,EAAI,EAAE,EAAI,sBACxD,GAAG,YAAc,UAAY,CAAC,EAAE,EAEhC,IAAI,OACH,SAAUC,OAAO,CACdA,OAAMA,OAAM,MAAM,EAAI,CAAC,EAAI,OAC3BA,OAAMA,OAAM,eAAe,EAAI,CAAC,EAAI,gBACpCA,OAAMA,OAAM,WAAW,EAAI,CAAC,EAAI,YAChCA,OAAMA,OAAM,kBAAkB,EAAI,CAAC,EAAI,mBACvCA,OAAMA,OAAM,sBAAsB,EAAI,CAAC,EAAI,uBAC3CA,OAAMA,OAAM,kBAAkB,EAAI,CAAC,EAAI,mBACvCA,OAAMA,OAAM,qBAAqB,EAAI,CAAC,EAAI,sBAE1CA,OAAMA,OAAM,qBAAqB,EAAI,CAAC,EAAI,sBAC1CA,OAAMA,OAAM,iBAAiB,EAAI,CAAC,EAAI,kBACtCA,OAAMA,OAAM,oBAAoB,EAAI,EAAE,EAAI,qBAC1CA,OAAMA,OAAM,sBAAsB,EAAI,EAAE,EAAI,uBAC5CA,OAAMA,OAAM,oBAAoB,EAAI,EAAE,EAAI,qBAC1CA,OAAMA,OAAM,oBAAoB,EAAI,EAAE,EAAI,qBAC1CA,OAAMA,OAAM,oBAAoB,EAAI,EAAE,EAAI,qBAE1CA,OAAMA,OAAM,mBAAmB,EAAI,EAAE,EAAI,oBACzCA,OAAMA,OAAM,eAAe,EAAI,EAAE,EAAI,gBAErCA,OAAMA,OAAM,yBAAyB,EAAI,EAAE,EAAI,0BAE/CA,OAAMA,OAAM,eAAe,EAAI,EAAE,EAAI,gBACrCA,OAAMA,OAAM,eAAe,EAAI,EAAE,EAAI,gBACrCA,OAAMA,OAAM,kBAAkB,EAAI,EAAE,EAAI,mBACxCA,OAAMA,OAAM,eAAe,EAAI,EAAE,EAAI,gBAErCA,OAAMA,OAAM,gBAAgB,EAAI,EAAE,EAAI,iBACtCA,OAAMA,OAAM,gBAAgB,EAAI,EAAE,EAAI,iBACtCA,OAAMA,OAAM,sBAAsB,EAAI,EAAE,EAAI,uBAC5CA,OAAMA,OAAM,cAAc,EAAI,EAAE,EAAI,eACpCA,OAAMA,OAAM,UAAU,EAAI,EAAE,EAAI,UACpC,GAAG,QAAU,MAAQ,CAAC,EAAE,EACxB,SAAS,aAAa,EAAG,CACrB,OAAQ,IAAM,UAAU,OACpB,IAAM,UAAU,SAChB,IAAM,UAAU,KAChB,IAAM,UAAU,UAChB,IAAM,UAAU,cACxB,CANS,oCAOT,SAAS,kBAAkB,EAAG,CAC1B,OAAO,IAAM,UAAU,OAAS,IAAM,UAAU,IAAM,aAAa,CAAC,CACxE,CAFS,8CAGT,SAAS,aAAa,EAAG,CACrB,OAAS,GAAK,UAAU,QAAU,GAAK,UAAU,QAC5C,GAAK,UAAU,QAAU,GAAK,UAAU,MACjD,CAHS,oCAIT,IAAI,WACH,SAAUC,WAAW,CAClBA,WAAUA,WAAU,SAAS,EAAI,CAAC,EAAI,UACtCA,WAAUA,WAAU,UAAU,EAAI,CAAC,EAAI,WACvCA,WAAUA,WAAU,QAAQ,EAAI,CAAC,EAAI,SACrCA,WAAUA,WAAU,QAAQ,EAAI,CAAC,EAAI,QACzC,GAAG,YAAc,QAAQ,UAAY,UAAY,CAAC,EAAE,EAOpD,IAAI,UAAY,CACZ,MAAO,IAAI,WAAW,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,EAAI,CAAC,EAC1D,SAAU,IAAI,WAAW,CAAC,GAAM,GAAM,EAAI,CAAC,EAC3C,WAAY,IAAI,WAAW,CAAC,GAAM,GAAM,EAAI,CAAC,EAC7C,UAAW,IAAI,WAAW,CAAC,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAI,CAAC,EAC1E,SAAU,IAAI,WAAW,CAAC,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAI,CAAC,EACnE,SAAU,IAAI,WAAW,CAAC,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAI,CAAC,EACnE,YAAa,IAAI,WAAW,CACxB,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,EAC1D,CAAC,CACL,EACA,IAAI,UAA2B,UAAY,CACvC,SAASC,WAAU,GAAI,IAAK,CACxB,IAAI,GAAK,GAAG,QAAS,QAAU,KAAO,OAAS,MAAQ,GAAI,GAAK,GAAG,eAAgB,eAAiB,KAAO,OAAS,KAAO,GAC3H,IAAI,MAAQ,KACZ,KAAK,IAAM,IAEX,KAAK,MAAQ,MAAM,KAEnB,KAAK,OAAS,GAEd,KAAK,aAAe,EAEpB,KAAK,MAAQ,EAEb,KAAK,YAAc,EAEnB,KAAK,UAAY,MAAM,KAEvB,KAAK,UAAY,MAEjB,KAAK,QAAU,KAEf,KAAK,OAAS,EACd,KAAK,gBAAkB,OACvB,KAAK,cAAgB,EACrB,KAAK,QAAU,QACf,KAAK,eAAiB,eACtB,KAAK,cAAgB,IAAI,YAAY,cAAc,QAAU,YAAY,cAAgB,YAAY,eAAgB,SAAU,GAAI,SAAU,CAAE,OAAO,MAAM,cAAc,GAAI,QAAQ,CAAG,CAAC,CAC9L,CA3BS,OAAAA,WAAA,aA4BTA,WAAU,UAAU,MAAQ,UAAY,CACpC,KAAK,MAAQ,MAAM,KACnB,KAAK,OAAS,GACd,KAAK,aAAe,EACpB,KAAK,MAAQ,EACb,KAAK,UAAY,MAAM,KACvB,KAAK,gBAAkB,OACvB,KAAK,QAAU,KACf,KAAK,OAAS,CAClB,EACAA,WAAU,UAAU,MAAQ,SAAU,MAAO,CACzC,KAAK,QAAU,KAAK,OAAO,OAC3B,KAAK,OAAS,MACd,KAAK,MAAM,CACf,EACAA,WAAU,UAAU,IAAM,UAAY,CAClC,GAAI,KAAK,QACL,KAAK,OAAO,CACpB,EACAA,WAAU,UAAU,MAAQ,UAAY,CACpC,KAAK,QAAU,KACnB,EACAA,WAAU,UAAU,OAAS,UAAY,CACrC,KAAK,QAAU,KACf,GAAI,KAAK,MAAQ,KAAK,OAAO,OAAS,KAAK,OAAQ,CAC/C,KAAK,MAAM,CACf,CACJ,EACAA,WAAU,UAAU,UAAY,SAAU,EAAG,CACzC,GAAI,IAAM,UAAU,IACf,CAAC,KAAK,gBAAkB,KAAK,cAAc,UAAU,EAAE,EAAI,CAC5D,GAAI,KAAK,MAAQ,KAAK,aAAc,CAChC,KAAK,IAAI,OAAO,KAAK,aAAc,KAAK,KAAK,CACjD,CACA,KAAK,MAAQ,MAAM,cACnB,KAAK,aAAe,KAAK,KAC7B,SACS,KAAK,gBAAkB,IAAM,UAAU,IAAK,CACjD,KAAK,YAAY,CACrB,CACJ,EACAA,WAAU,UAAU,0BAA4B,SAAU,EAAG,CACzD,IAAI,MAAQ,KAAK,gBAAkB,KAAK,gBAAgB,OACxD,IAAI,QAAU,MAEN,kBAAkB,CAAC,GAElB,EAAI,MAAU,KAAK,gBAAgB,KAAK,aAAa,EAC9D,GAAI,CAAC,QAAS,CACV,KAAK,UAAY,KACrB,SACS,CAAC,MAAO,CACb,KAAK,gBACL,MACJ,CACA,KAAK,cAAgB,EACrB,KAAK,MAAQ,MAAM,UACnB,KAAK,eAAe,CAAC,CACzB,EAEAA,WAAU,UAAU,kBAAoB,SAAU,EAAG,CACjD,GAAI,KAAK,gBAAkB,KAAK,gBAAgB,OAAQ,CACpD,GAAI,IAAM,UAAU,IAAM,aAAa,CAAC,EAAG,CACvC,IAAI,UAAY,KAAK,MAAQ,KAAK,gBAAgB,OAClD,GAAI,KAAK,aAAe,UAAW,CAE/B,IAAI,YAAc,KAAK,MACvB,KAAK,MAAQ,UACb,KAAK,IAAI,OAAO,KAAK,aAAc,SAAS,EAC5C,KAAK,MAAQ,WACjB,CACA,KAAK,UAAY,MACjB,KAAK,aAAe,UAAY,EAChC,KAAK,sBAAsB,CAAC,EAC5B,MACJ,CACA,KAAK,cAAgB,CACzB,CACA,IAAK,EAAI,MAAU,KAAK,gBAAgB,KAAK,aAAa,EAAG,CACzD,KAAK,eAAiB,CAC1B,SACS,KAAK,gBAAkB,EAAG,CAC/B,GAAI,KAAK,kBAAoB,UAAU,SAAU,CAE7C,GAAI,KAAK,gBAAkB,IAAM,UAAU,IAAK,CAC5C,KAAK,YAAY,CACrB,CACJ,SACS,KAAK,cAAc,UAAU,EAAE,EAAG,CAEvC,KAAK,cAAgB,CACzB,CACJ,KACK,CAED,KAAK,cAAgB,OAAO,IAAM,UAAU,EAAE,CAClD,CACJ,EACAA,WAAU,UAAU,mBAAqB,SAAU,EAAG,CAClD,GAAI,IAAM,UAAU,MAAM,KAAK,aAAa,EAAG,CAC3C,GAAI,EAAE,KAAK,gBAAkB,UAAU,MAAM,OAAQ,CACjD,KAAK,MAAQ,MAAM,cACnB,KAAK,gBAAkB,UAAU,SACjC,KAAK,cAAgB,EACrB,KAAK,aAAe,KAAK,MAAQ,CACrC,CACJ,KACK,CACD,KAAK,cAAgB,EACrB,KAAK,MAAQ,MAAM,cACnB,KAAK,mBAAmB,CAAC,CAC7B,CACJ,EAOAA,WAAU,UAAU,cAAgB,SAAU,EAAG,CAC7C,MAAO,EAAE,KAAK,MAAQ,KAAK,OAAO,OAAS,KAAK,OAAQ,CACpD,GAAI,KAAK,OAAO,WAAW,KAAK,MAAQ,KAAK,MAAM,IAAM,EAAG,CACxD,MAAO,KACX,CACJ,CAOA,KAAK,MAAQ,KAAK,OAAO,OAAS,KAAK,OAAS,EAChD,MAAO,MACX,EASAA,WAAU,UAAU,mBAAqB,SAAU,EAAG,CAClD,GAAI,IAAM,KAAK,gBAAgB,KAAK,aAAa,EAAG,CAChD,GAAI,EAAE,KAAK,gBAAkB,KAAK,gBAAgB,OAAQ,CACtD,GAAI,KAAK,kBAAoB,UAAU,SAAU,CAC7C,KAAK,IAAI,QAAQ,KAAK,aAAc,KAAK,MAAO,CAAC,CACrD,KACK,CACD,KAAK,IAAI,UAAU,KAAK,aAAc,KAAK,MAAO,CAAC,CACvD,CACA,KAAK,cAAgB,EACrB,KAAK,aAAe,KAAK,MAAQ,EACjC,KAAK,MAAQ,MAAM,IACvB,CACJ,SACS,KAAK,gBAAkB,EAAG,CAE/B,GAAI,KAAK,cAAc,KAAK,gBAAgB,CAAC,CAAC,EAAG,CAC7C,KAAK,cAAgB,CACzB,CACJ,SACS,IAAM,KAAK,gBAAgB,KAAK,cAAgB,CAAC,EAAG,CAEzD,KAAK,cAAgB,CACzB,CACJ,EAOAA,WAAU,UAAU,eAAiB,SAAU,EAAG,CAC9C,OAAO,KAAK,QAAU,CAAC,kBAAkB,CAAC,EAAI,aAAa,CAAC,CAChE,EACAA,WAAU,UAAU,aAAe,SAAU,SAAU,OAAQ,CAC3D,KAAK,UAAY,KACjB,KAAK,gBAAkB,SACvB,KAAK,cAAgB,OACrB,KAAK,MAAQ,MAAM,oBACvB,EACAA,WAAU,UAAU,mBAAqB,SAAU,EAAG,CAClD,GAAI,IAAM,UAAU,gBAAiB,CACjC,KAAK,MAAQ,MAAM,kBACnB,KAAK,aAAe,KAAK,MAAQ,CACrC,SACS,IAAM,UAAU,aAAc,CACnC,KAAK,MAAQ,MAAM,wBACnB,KAAK,aAAe,KAAK,MAAQ,CACrC,SACS,KAAK,eAAe,CAAC,EAAG,CAC7B,IAAI,MAAQ,EAAI,GAChB,KAAK,aAAe,KAAK,MACzB,GAAI,KAAK,QAAS,CACd,KAAK,MAAQ,MAAM,SACvB,SACS,QAAU,UAAU,UAAU,CAAC,EAAG,CACvC,KAAK,MAAQ,MAAM,cACvB,SACS,QAAU,UAAU,SAAS,CAAC,EAAG,CACtC,KAAK,MAAQ,MAAM,cACvB,KACK,CACD,KAAK,MAAQ,MAAM,SACvB,CACJ,SACS,IAAM,UAAU,MAAO,CAC5B,KAAK,MAAQ,MAAM,oBACvB,KACK,CACD,KAAK,MAAQ,MAAM,KACnB,KAAK,UAAU,CAAC,CACpB,CACJ,EACAA,WAAU,UAAU,eAAiB,SAAU,EAAG,CAC9C,GAAI,kBAAkB,CAAC,EAAG,CACtB,KAAK,IAAI,cAAc,KAAK,aAAc,KAAK,KAAK,EACpD,KAAK,aAAe,GACpB,KAAK,MAAQ,MAAM,oBACnB,KAAK,yBAAyB,CAAC,CACnC,CACJ,EACAA,WAAU,UAAU,0BAA4B,SAAU,EAAG,CACzD,GAAI,aAAa,CAAC,EAAG,CAErB,SACS,IAAM,UAAU,GAAI,CACzB,KAAK,MAAQ,MAAM,IACvB,KACK,CACD,KAAK,MAAQ,KAAK,eAAe,CAAC,EAC5B,MAAM,iBACN,MAAM,iBACZ,KAAK,aAAe,KAAK,KAC7B,CACJ,EACAA,WAAU,UAAU,sBAAwB,SAAU,EAAG,CACrD,GAAI,IAAM,UAAU,IAAM,aAAa,CAAC,EAAG,CACvC,KAAK,IAAI,WAAW,KAAK,aAAc,KAAK,KAAK,EACjD,KAAK,aAAe,GACpB,KAAK,MAAQ,MAAM,oBACnB,KAAK,yBAAyB,CAAC,CACnC,CACJ,EACAA,WAAU,UAAU,yBAA2B,SAAU,EAAG,CAExD,GAAI,IAAM,UAAU,IAAM,KAAK,cAAc,UAAU,EAAE,EAAG,CACxD,KAAK,MAAQ,MAAM,KACnB,KAAK,aAAe,KAAK,MAAQ,CACrC,CACJ,EACAA,WAAU,UAAU,yBAA2B,SAAU,EAAG,CACxD,GAAI,IAAM,UAAU,GAAI,CACpB,KAAK,IAAI,aAAa,KAAK,KAAK,EAChC,GAAI,KAAK,UAAW,CAChB,KAAK,MAAQ,MAAM,aACnB,KAAK,cAAgB,CACzB,KACK,CACD,KAAK,MAAQ,MAAM,IACvB,CACA,KAAK,aAAe,KAAK,MAAQ,CACrC,SACS,IAAM,UAAU,MAAO,CAC5B,KAAK,MAAQ,MAAM,gBACvB,SACS,CAAC,aAAa,CAAC,EAAG,CACvB,KAAK,MAAQ,MAAM,gBACnB,KAAK,aAAe,KAAK,KAC7B,CACJ,EACAA,WAAU,UAAU,sBAAwB,SAAU,EAAG,CACrD,GAAI,IAAM,UAAU,GAAI,CACpB,KAAK,IAAI,iBAAiB,KAAK,KAAK,EACpC,KAAK,MAAQ,MAAM,KACnB,KAAK,aAAe,KAAK,MAAQ,EACjC,KAAK,UAAY,KACrB,SACS,CAAC,aAAa,CAAC,EAAG,CACvB,KAAK,MAAQ,MAAM,oBACnB,KAAK,yBAAyB,CAAC,CACnC,CACJ,EACAA,WAAU,UAAU,qBAAuB,SAAU,EAAG,CACpD,GAAI,IAAM,UAAU,IAAM,kBAAkB,CAAC,EAAG,CAC5C,KAAK,IAAI,aAAa,KAAK,aAAc,KAAK,KAAK,EACnD,KAAK,aAAe,KAAK,MACzB,KAAK,MAAQ,MAAM,mBACnB,KAAK,wBAAwB,CAAC,CAClC,CACJ,EACAA,WAAU,UAAU,wBAA0B,SAAU,EAAG,CACvD,GAAI,IAAM,UAAU,GAAI,CACpB,KAAK,MAAQ,MAAM,oBACvB,SACS,IAAM,UAAU,OAAS,IAAM,UAAU,GAAI,CAClD,KAAK,IAAI,YAAY,UAAU,QAAS,KAAK,YAAY,EACzD,KAAK,aAAe,GACpB,KAAK,MAAQ,MAAM,oBACnB,KAAK,yBAAyB,CAAC,CACnC,SACS,CAAC,aAAa,CAAC,EAAG,CACvB,KAAK,IAAI,YAAY,UAAU,QAAS,KAAK,YAAY,EACzD,KAAK,MAAQ,MAAM,gBACnB,KAAK,aAAe,KAAK,KAC7B,CACJ,EACAA,WAAU,UAAU,0BAA4B,SAAU,EAAG,CACzD,GAAI,IAAM,UAAU,YAAa,CAC7B,KAAK,MAAQ,MAAM,mBACnB,KAAK,aAAe,KAAK,MAAQ,CACrC,SACS,IAAM,UAAU,YAAa,CAClC,KAAK,MAAQ,MAAM,mBACnB,KAAK,aAAe,KAAK,MAAQ,CACrC,SACS,CAAC,aAAa,CAAC,EAAG,CACvB,KAAK,aAAe,KAAK,MACzB,KAAK,MAAQ,MAAM,mBACnB,KAAK,8BAA8B,CAAC,CACxC,CACJ,EACAA,WAAU,UAAU,uBAAyB,SAAU,EAAG,MAAO,CAC7D,GAAI,IAAM,OACL,CAAC,KAAK,gBAAkB,KAAK,cAAc,KAAK,EAAI,CACrD,KAAK,IAAI,aAAa,KAAK,aAAc,KAAK,KAAK,EACnD,KAAK,aAAe,GACpB,KAAK,IAAI,YAAY,QAAU,UAAU,YACnC,UAAU,OACV,UAAU,OAAQ,KAAK,MAAQ,CAAC,EACtC,KAAK,MAAQ,MAAM,mBACvB,SACS,KAAK,gBAAkB,IAAM,UAAU,IAAK,CACjD,KAAK,YAAY,CACrB,CACJ,EACAA,WAAU,UAAU,kCAAoC,SAAU,EAAG,CACjE,KAAK,uBAAuB,EAAG,UAAU,WAAW,CACxD,EACAA,WAAU,UAAU,kCAAoC,SAAU,EAAG,CACjE,KAAK,uBAAuB,EAAG,UAAU,WAAW,CACxD,EACAA,WAAU,UAAU,8BAAgC,SAAU,EAAG,CAC7D,GAAI,aAAa,CAAC,GAAK,IAAM,UAAU,GAAI,CACvC,KAAK,IAAI,aAAa,KAAK,aAAc,KAAK,KAAK,EACnD,KAAK,aAAe,GACpB,KAAK,IAAI,YAAY,UAAU,SAAU,KAAK,KAAK,EACnD,KAAK,MAAQ,MAAM,oBACnB,KAAK,yBAAyB,CAAC,CACnC,SACS,KAAK,gBAAkB,IAAM,UAAU,IAAK,CACjD,KAAK,YAAY,CACrB,CACJ,EACAA,WAAU,UAAU,uBAAyB,SAAU,EAAG,CACtD,GAAI,IAAM,UAAU,qBAAsB,CACtC,KAAK,MAAQ,MAAM,cACnB,KAAK,cAAgB,CACzB,KACK,CACD,KAAK,MACD,IAAM,UAAU,KACV,MAAM,cACN,MAAM,aACpB,CACJ,EACAA,WAAU,UAAU,mBAAqB,SAAU,EAAG,CAClD,GAAI,IAAM,UAAU,IAAM,KAAK,cAAc,UAAU,EAAE,EAAG,CACxD,KAAK,IAAI,cAAc,KAAK,aAAc,KAAK,KAAK,EACpD,KAAK,MAAQ,MAAM,KACnB,KAAK,aAAe,KAAK,MAAQ,CACrC,CACJ,EACAA,WAAU,UAAU,6BAA+B,SAAU,EAAG,CAC5D,GAAI,IAAM,UAAU,IAAM,KAAK,cAAc,UAAU,EAAE,EAAG,CACxD,KAAK,IAAI,wBAAwB,KAAK,aAAc,KAAK,KAAK,EAC9D,KAAK,MAAQ,MAAM,KACnB,KAAK,aAAe,KAAK,MAAQ,CACrC,CACJ,EACAA,WAAU,UAAU,mBAAqB,SAAU,EAAG,CAClD,GAAI,IAAM,UAAU,KAAM,CACtB,KAAK,MAAQ,MAAM,cACnB,KAAK,gBAAkB,UAAU,WAEjC,KAAK,cAAgB,EACrB,KAAK,aAAe,KAAK,MAAQ,CACrC,KACK,CACD,KAAK,MAAQ,MAAM,aACvB,CACJ,EACAA,WAAU,UAAU,sBAAwB,SAAU,EAAG,CACrD,GAAI,IAAM,UAAU,IAAM,KAAK,cAAc,UAAU,EAAE,EAAG,CACxD,KAAK,IAAI,UAAU,KAAK,aAAc,KAAK,MAAO,CAAC,EACnD,KAAK,MAAQ,MAAM,KACnB,KAAK,aAAe,KAAK,MAAQ,CACrC,CACJ,EACAA,WAAU,UAAU,oBAAsB,SAAU,EAAG,CACnD,IAAI,MAAQ,EAAI,GAChB,GAAI,QAAU,UAAU,UAAU,CAAC,EAAG,CAClC,KAAK,aAAa,UAAU,UAAW,CAAC,CAC5C,SACS,QAAU,UAAU,SAAS,CAAC,EAAG,CACtC,KAAK,aAAa,UAAU,SAAU,CAAC,CAC3C,KACK,CACD,KAAK,MAAQ,MAAM,UACnB,KAAK,eAAe,CAAC,CACzB,CACJ,EACAA,WAAU,UAAU,oBAAsB,SAAU,EAAG,CACnD,IAAI,MAAQ,EAAI,GAChB,GAAI,QAAU,UAAU,SAAS,CAAC,EAAG,CACjC,KAAK,aAAa,UAAU,SAAU,CAAC,CAC3C,SACS,QAAU,UAAU,YAAY,CAAC,EAAG,CACzC,KAAK,aAAa,UAAU,YAAa,CAAC,CAC9C,KACK,CACD,KAAK,MAAQ,MAAM,UACnB,KAAK,eAAe,CAAC,CACzB,CACJ,EACAA,WAAU,UAAU,YAAc,UAAY,CAC1C,KAAK,UAAY,KAAK,MACtB,KAAK,MAAQ,MAAM,SACnB,KAAK,YAAc,KAAK,MACxB,KAAK,cAAc,YAAY,KAAK,QAC9B,YAAY,aAAa,OACzB,KAAK,YAAc,MAAM,MACvB,KAAK,YAAc,MAAM,aACvB,YAAY,aAAa,OACzB,YAAY,aAAa,SAAS,CAChD,EACAA,WAAU,UAAU,cAAgB,UAAY,CAC5C,IAAI,OAAS,KAAK,cAAc,MAAM,KAAK,OAAQ,KAAK,MAAQ,KAAK,MAAM,EAE3E,GAAI,QAAU,EAAG,CACb,KAAK,MAAQ,KAAK,UAClB,GAAI,SAAW,EAAG,CACd,KAAK,MAAQ,KAAK,WACtB,CACJ,KACK,CAED,KAAK,MAAQ,KAAK,OAAS,KAAK,OAAO,OAAS,CACpD,CACJ,EAIAA,WAAU,UAAU,QAAU,UAAY,CAEtC,GAAI,KAAK,SAAW,KAAK,eAAiB,KAAK,MAAO,CAClD,GAAI,KAAK,QAAU,MAAM,MACpB,KAAK,QAAU,MAAM,cAAgB,KAAK,gBAAkB,EAAI,CACjE,KAAK,IAAI,OAAO,KAAK,aAAc,KAAK,KAAK,EAC7C,KAAK,aAAe,KAAK,KAC7B,SACS,KAAK,QAAU,MAAM,oBAC1B,KAAK,QAAU,MAAM,oBACrB,KAAK,QAAU,MAAM,mBAAoB,CACzC,KAAK,IAAI,aAAa,KAAK,aAAc,KAAK,KAAK,EACnD,KAAK,aAAe,KAAK,KAC7B,CACJ,CACJ,EACAA,WAAU,UAAU,eAAiB,UAAY,CAC7C,OAAO,KAAK,MAAQ,KAAK,OAAO,OAAS,KAAK,QAAU,KAAK,OACjE,EAMAA,WAAU,UAAU,MAAQ,UAAY,CACpC,MAAO,KAAK,eAAe,EAAG,CAC1B,IAAI,EAAI,KAAK,OAAO,WAAW,KAAK,MAAQ,KAAK,MAAM,EACvD,OAAQ,KAAK,MAAO,CAChB,KAAK,MAAM,KAAM,CACb,KAAK,UAAU,CAAC,EAChB,KACJ,CACA,KAAK,MAAM,qBAAsB,CAC7B,KAAK,0BAA0B,CAAC,EAChC,KACJ,CACA,KAAK,MAAM,aAAc,CACrB,KAAK,kBAAkB,CAAC,EACxB,KACJ,CACA,KAAK,MAAM,cAAe,CACtB,KAAK,mBAAmB,CAAC,EACzB,KACJ,CACA,KAAK,MAAM,mBAAoB,CAC3B,KAAK,kCAAkC,CAAC,EACxC,KACJ,CACA,KAAK,MAAM,gBAAiB,CACxB,KAAK,qBAAqB,CAAC,EAC3B,KACJ,CACA,KAAK,MAAM,cAAe,CACtB,KAAK,mBAAmB,CAAC,EACzB,KACJ,CACA,KAAK,MAAM,iBAAkB,CACzB,KAAK,sBAAsB,CAAC,EAC5B,KACJ,CACA,KAAK,MAAM,oBAAqB,CAC5B,KAAK,yBAAyB,CAAC,EAC/B,KACJ,CACA,KAAK,MAAM,UAAW,CAClB,KAAK,eAAe,CAAC,EACrB,KACJ,CACA,KAAK,MAAM,iBAAkB,CACzB,KAAK,sBAAsB,CAAC,EAC5B,KACJ,CACA,KAAK,MAAM,cAAe,CACtB,KAAK,mBAAmB,CAAC,EACzB,KACJ,CACA,KAAK,MAAM,mBAAoB,CAC3B,KAAK,wBAAwB,CAAC,EAC9B,KACJ,CACA,KAAK,MAAM,mBAAoB,CAC3B,KAAK,kCAAkC,CAAC,EACxC,KACJ,CACA,KAAK,MAAM,qBAAsB,CAC7B,KAAK,0BAA0B,CAAC,EAChC,KACJ,CACA,KAAK,MAAM,qBAAsB,CAC7B,KAAK,0BAA0B,CAAC,EAChC,KACJ,CACA,KAAK,MAAM,oBAAqB,CAC5B,KAAK,yBAAyB,CAAC,EAC/B,KACJ,CACA,KAAK,MAAM,eAAgB,CACvB,KAAK,oBAAoB,CAAC,EAC1B,KACJ,CACA,KAAK,MAAM,eAAgB,CACvB,KAAK,oBAAoB,CAAC,EAC1B,KACJ,CACA,KAAK,MAAM,mBAAoB,CAC3B,KAAK,8BAA8B,CAAC,EACpC,KACJ,CACA,KAAK,MAAM,iBAAkB,CACzB,KAAK,sBAAsB,CAAC,EAC5B,KACJ,CACA,KAAK,MAAM,cAAe,CACtB,KAAK,mBAAmB,CAAC,EACzB,KACJ,CACA,KAAK,MAAM,kBAAmB,CAC1B,KAAK,uBAAuB,CAAC,EAC7B,KACJ,CACA,KAAK,MAAM,cAAe,CACtB,KAAK,mBAAmB,CAAC,EACzB,KACJ,CACA,KAAK,MAAM,wBAAyB,CAChC,KAAK,6BAA6B,CAAC,EACnC,KACJ,CACA,KAAK,MAAM,SAAU,CACjB,KAAK,cAAc,EACnB,KACJ,CACJ,CACA,KAAK,OACT,CACA,KAAK,QAAQ,CACjB,EACAA,WAAU,UAAU,OAAS,UAAY,CACrC,GAAI,KAAK,QAAU,MAAM,SAAU,CAC/B,KAAK,cAAc,IAAI,EACvB,KAAK,MAAQ,KAAK,SACtB,CACA,KAAK,mBAAmB,EACxB,KAAK,IAAI,MAAM,CACnB,EAEAA,WAAU,UAAU,mBAAqB,UAAY,CACjD,IAAI,SAAW,KAAK,OAAO,OAAS,KAAK,OAEzC,GAAI,KAAK,cAAgB,SAAU,CAC/B,MACJ,CACA,GAAI,KAAK,QAAU,MAAM,cAAe,CACpC,GAAI,KAAK,kBAAoB,UAAU,SAAU,CAC7C,KAAK,IAAI,QAAQ,KAAK,aAAc,SAAU,CAAC,CACnD,KACK,CACD,KAAK,IAAI,UAAU,KAAK,aAAc,SAAU,CAAC,CACrD,CACJ,SACS,KAAK,QAAU,MAAM,WAC1B,KAAK,QAAU,MAAM,qBACrB,KAAK,QAAU,MAAM,sBACrB,KAAK,QAAU,MAAM,oBACrB,KAAK,QAAU,MAAM,iBACrB,KAAK,QAAU,MAAM,oBACrB,KAAK,QAAU,MAAM,oBACrB,KAAK,QAAU,MAAM,oBACrB,KAAK,QAAU,MAAM,iBAAkB,CAK3C,KACK,CACD,KAAK,IAAI,OAAO,KAAK,aAAc,QAAQ,CAC/C,CACJ,EACAA,WAAU,UAAU,cAAgB,SAAU,GAAI,SAAU,CACxD,GAAI,KAAK,YAAc,MAAM,MACzB,KAAK,YAAc,MAAM,aAAc,CACvC,GAAI,KAAK,aAAe,KAAK,YAAa,CACtC,KAAK,IAAI,aAAa,KAAK,aAAc,KAAK,WAAW,CAC7D,CACA,KAAK,aAAe,KAAK,YAAc,SACvC,KAAK,MAAQ,KAAK,aAAe,EACjC,KAAK,IAAI,eAAe,EAAE,CAC9B,KACK,CACD,GAAI,KAAK,aAAe,KAAK,YAAa,CACtC,KAAK,IAAI,OAAO,KAAK,aAAc,KAAK,WAAW,CACvD,CACA,KAAK,aAAe,KAAK,YAAc,SACvC,KAAK,MAAQ,KAAK,aAAe,EACjC,KAAK,IAAI,aAAa,GAAI,KAAK,YAAY,CAC/C,CACJ,EACA,OAAOA,UACX,EAAE,EACF,QAAQ,QAAU","names":["CharCodes","State","QuoteType","Tokenizer"],"sources":["/home/creditga/CofiCarte/node_modules/.pnpm/htmlparser2@9.1.0/node_modules/htmlparser2/lib/Tokenizer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QuoteType = void 0;\nvar decode_js_1 = require(\"entities/lib/decode.js\");\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"Tab\"] = 9] = \"Tab\";\n    CharCodes[CharCodes[\"NewLine\"] = 10] = \"NewLine\";\n    CharCodes[CharCodes[\"FormFeed\"] = 12] = \"FormFeed\";\n    CharCodes[CharCodes[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n    CharCodes[CharCodes[\"Space\"] = 32] = \"Space\";\n    CharCodes[CharCodes[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n    CharCodes[CharCodes[\"Number\"] = 35] = \"Number\";\n    CharCodes[CharCodes[\"Amp\"] = 38] = \"Amp\";\n    CharCodes[CharCodes[\"SingleQuote\"] = 39] = \"SingleQuote\";\n    CharCodes[CharCodes[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n    CharCodes[CharCodes[\"Dash\"] = 45] = \"Dash\";\n    CharCodes[CharCodes[\"Slash\"] = 47] = \"Slash\";\n    CharCodes[CharCodes[\"Zero\"] = 48] = \"Zero\";\n    CharCodes[CharCodes[\"Nine\"] = 57] = \"Nine\";\n    CharCodes[CharCodes[\"Semi\"] = 59] = \"Semi\";\n    CharCodes[CharCodes[\"Lt\"] = 60] = \"Lt\";\n    CharCodes[CharCodes[\"Eq\"] = 61] = \"Eq\";\n    CharCodes[CharCodes[\"Gt\"] = 62] = \"Gt\";\n    CharCodes[CharCodes[\"Questionmark\"] = 63] = \"Questionmark\";\n    CharCodes[CharCodes[\"UpperA\"] = 65] = \"UpperA\";\n    CharCodes[CharCodes[\"LowerA\"] = 97] = \"LowerA\";\n    CharCodes[CharCodes[\"UpperF\"] = 70] = \"UpperF\";\n    CharCodes[CharCodes[\"LowerF\"] = 102] = \"LowerF\";\n    CharCodes[CharCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n    CharCodes[CharCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n    CharCodes[CharCodes[\"LowerX\"] = 120] = \"LowerX\";\n    CharCodes[CharCodes[\"OpeningSquareBracket\"] = 91] = \"OpeningSquareBracket\";\n})(CharCodes || (CharCodes = {}));\n/** All the states the tokenizer can be in. */\nvar State;\n(function (State) {\n    State[State[\"Text\"] = 1] = \"Text\";\n    State[State[\"BeforeTagName\"] = 2] = \"BeforeTagName\";\n    State[State[\"InTagName\"] = 3] = \"InTagName\";\n    State[State[\"InSelfClosingTag\"] = 4] = \"InSelfClosingTag\";\n    State[State[\"BeforeClosingTagName\"] = 5] = \"BeforeClosingTagName\";\n    State[State[\"InClosingTagName\"] = 6] = \"InClosingTagName\";\n    State[State[\"AfterClosingTagName\"] = 7] = \"AfterClosingTagName\";\n    // Attributes\n    State[State[\"BeforeAttributeName\"] = 8] = \"BeforeAttributeName\";\n    State[State[\"InAttributeName\"] = 9] = \"InAttributeName\";\n    State[State[\"AfterAttributeName\"] = 10] = \"AfterAttributeName\";\n    State[State[\"BeforeAttributeValue\"] = 11] = \"BeforeAttributeValue\";\n    State[State[\"InAttributeValueDq\"] = 12] = \"InAttributeValueDq\";\n    State[State[\"InAttributeValueSq\"] = 13] = \"InAttributeValueSq\";\n    State[State[\"InAttributeValueNq\"] = 14] = \"InAttributeValueNq\";\n    // Declarations\n    State[State[\"BeforeDeclaration\"] = 15] = \"BeforeDeclaration\";\n    State[State[\"InDeclaration\"] = 16] = \"InDeclaration\";\n    // Processing instructions\n    State[State[\"InProcessingInstruction\"] = 17] = \"InProcessingInstruction\";\n    // Comments & CDATA\n    State[State[\"BeforeComment\"] = 18] = \"BeforeComment\";\n    State[State[\"CDATASequence\"] = 19] = \"CDATASequence\";\n    State[State[\"InSpecialComment\"] = 20] = \"InSpecialComment\";\n    State[State[\"InCommentLike\"] = 21] = \"InCommentLike\";\n    // Special tags\n    State[State[\"BeforeSpecialS\"] = 22] = \"BeforeSpecialS\";\n    State[State[\"BeforeSpecialT\"] = 23] = \"BeforeSpecialT\";\n    State[State[\"SpecialStartSequence\"] = 24] = \"SpecialStartSequence\";\n    State[State[\"InSpecialTag\"] = 25] = \"InSpecialTag\";\n    State[State[\"InEntity\"] = 26] = \"InEntity\";\n})(State || (State = {}));\nfunction isWhitespace(c) {\n    return (c === CharCodes.Space ||\n        c === CharCodes.NewLine ||\n        c === CharCodes.Tab ||\n        c === CharCodes.FormFeed ||\n        c === CharCodes.CarriageReturn);\n}\nfunction isEndOfTagSection(c) {\n    return c === CharCodes.Slash || c === CharCodes.Gt || isWhitespace(c);\n}\nfunction isASCIIAlpha(c) {\n    return ((c >= CharCodes.LowerA && c <= CharCodes.LowerZ) ||\n        (c >= CharCodes.UpperA && c <= CharCodes.UpperZ));\n}\nvar QuoteType;\n(function (QuoteType) {\n    QuoteType[QuoteType[\"NoValue\"] = 0] = \"NoValue\";\n    QuoteType[QuoteType[\"Unquoted\"] = 1] = \"Unquoted\";\n    QuoteType[QuoteType[\"Single\"] = 2] = \"Single\";\n    QuoteType[QuoteType[\"Double\"] = 3] = \"Double\";\n})(QuoteType || (exports.QuoteType = QuoteType = {}));\n/**\n * Sequences used to match longer strings.\n *\n * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End\n * sequences with an increased offset.\n */\nvar Sequences = {\n    Cdata: new Uint8Array([0x43, 0x44, 0x41, 0x54, 0x41, 0x5b]), // CDATA[\n    CdataEnd: new Uint8Array([0x5d, 0x5d, 0x3e]), // ]]>\n    CommentEnd: new Uint8Array([0x2d, 0x2d, 0x3e]), // `-->`\n    ScriptEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74]), // `</script`\n    StyleEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65]), // `</style`\n    TitleEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65]), // `</title`\n    TextareaEnd: new Uint8Array([\n        0x3c, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x61, 0x72, 0x65, 0x61,\n    ]), // `</textarea`\n};\nvar Tokenizer = /** @class */ (function () {\n    function Tokenizer(_a, cbs) {\n        var _b = _a.xmlMode, xmlMode = _b === void 0 ? false : _b, _c = _a.decodeEntities, decodeEntities = _c === void 0 ? true : _c;\n        var _this = this;\n        this.cbs = cbs;\n        /** The current state the tokenizer is in. */\n        this.state = State.Text;\n        /** The read buffer. */\n        this.buffer = \"\";\n        /** The beginning of the section that is currently being read. */\n        this.sectionStart = 0;\n        /** The index within the buffer that we are currently looking at. */\n        this.index = 0;\n        /** The start of the last entity. */\n        this.entityStart = 0;\n        /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n        this.baseState = State.Text;\n        /** For special parsing behavior inside of script and style tags. */\n        this.isSpecial = false;\n        /** Indicates whether the tokenizer has been paused. */\n        this.running = true;\n        /** The offset of the current buffer. */\n        this.offset = 0;\n        this.currentSequence = undefined;\n        this.sequenceIndex = 0;\n        this.xmlMode = xmlMode;\n        this.decodeEntities = decodeEntities;\n        this.entityDecoder = new decode_js_1.EntityDecoder(xmlMode ? decode_js_1.xmlDecodeTree : decode_js_1.htmlDecodeTree, function (cp, consumed) { return _this.emitCodePoint(cp, consumed); });\n    }\n    Tokenizer.prototype.reset = function () {\n        this.state = State.Text;\n        this.buffer = \"\";\n        this.sectionStart = 0;\n        this.index = 0;\n        this.baseState = State.Text;\n        this.currentSequence = undefined;\n        this.running = true;\n        this.offset = 0;\n    };\n    Tokenizer.prototype.write = function (chunk) {\n        this.offset += this.buffer.length;\n        this.buffer = chunk;\n        this.parse();\n    };\n    Tokenizer.prototype.end = function () {\n        if (this.running)\n            this.finish();\n    };\n    Tokenizer.prototype.pause = function () {\n        this.running = false;\n    };\n    Tokenizer.prototype.resume = function () {\n        this.running = true;\n        if (this.index < this.buffer.length + this.offset) {\n            this.parse();\n        }\n    };\n    Tokenizer.prototype.stateText = function (c) {\n        if (c === CharCodes.Lt ||\n            (!this.decodeEntities && this.fastForwardTo(CharCodes.Lt))) {\n            if (this.index > this.sectionStart) {\n                this.cbs.ontext(this.sectionStart, this.index);\n            }\n            this.state = State.BeforeTagName;\n            this.sectionStart = this.index;\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.startEntity();\n        }\n    };\n    Tokenizer.prototype.stateSpecialStartSequence = function (c) {\n        var isEnd = this.sequenceIndex === this.currentSequence.length;\n        var isMatch = isEnd\n            ? // If we are at the end of the sequence, make sure the tag name has ended\n                isEndOfTagSection(c)\n            : // Otherwise, do a case-insensitive comparison\n                (c | 0x20) === this.currentSequence[this.sequenceIndex];\n        if (!isMatch) {\n            this.isSpecial = false;\n        }\n        else if (!isEnd) {\n            this.sequenceIndex++;\n            return;\n        }\n        this.sequenceIndex = 0;\n        this.state = State.InTagName;\n        this.stateInTagName(c);\n    };\n    /** Look for an end tag. For <title> tags, also decode entities. */\n    Tokenizer.prototype.stateInSpecialTag = function (c) {\n        if (this.sequenceIndex === this.currentSequence.length) {\n            if (c === CharCodes.Gt || isWhitespace(c)) {\n                var endOfText = this.index - this.currentSequence.length;\n                if (this.sectionStart < endOfText) {\n                    // Spoof the index so that reported locations match up.\n                    var actualIndex = this.index;\n                    this.index = endOfText;\n                    this.cbs.ontext(this.sectionStart, endOfText);\n                    this.index = actualIndex;\n                }\n                this.isSpecial = false;\n                this.sectionStart = endOfText + 2; // Skip over the `</`\n                this.stateInClosingTagName(c);\n                return; // We are done; skip the rest of the function.\n            }\n            this.sequenceIndex = 0;\n        }\n        if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) {\n            this.sequenceIndex += 1;\n        }\n        else if (this.sequenceIndex === 0) {\n            if (this.currentSequence === Sequences.TitleEnd) {\n                // We have to parse entities in <title> tags.\n                if (this.decodeEntities && c === CharCodes.Amp) {\n                    this.startEntity();\n                }\n            }\n            else if (this.fastForwardTo(CharCodes.Lt)) {\n                // Outside of <title> tags, we can fast-forward.\n                this.sequenceIndex = 1;\n            }\n        }\n        else {\n            // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.\n            this.sequenceIndex = Number(c === CharCodes.Lt);\n        }\n    };\n    Tokenizer.prototype.stateCDATASequence = function (c) {\n        if (c === Sequences.Cdata[this.sequenceIndex]) {\n            if (++this.sequenceIndex === Sequences.Cdata.length) {\n                this.state = State.InCommentLike;\n                this.currentSequence = Sequences.CdataEnd;\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n            }\n        }\n        else {\n            this.sequenceIndex = 0;\n            this.state = State.InDeclaration;\n            this.stateInDeclaration(c); // Reconsume the character\n        }\n    };\n    /**\n     * When we wait for one specific character, we can speed things up\n     * by skipping through the buffer until we find it.\n     *\n     * @returns Whether the character was found.\n     */\n    Tokenizer.prototype.fastForwardTo = function (c) {\n        while (++this.index < this.buffer.length + this.offset) {\n            if (this.buffer.charCodeAt(this.index - this.offset) === c) {\n                return true;\n            }\n        }\n        /*\n         * We increment the index at the end of the `parse` loop,\n         * so set it to `buffer.length - 1` here.\n         *\n         * TODO: Refactor `parse` to increment index before calling states.\n         */\n        this.index = this.buffer.length + this.offset - 1;\n        return false;\n    };\n    /**\n     * Comments and CDATA end with `-->` and `]]>`.\n     *\n     * Their common qualities are:\n     * - Their end sequences have a distinct character they start with.\n     * - That character is then repeated, so we have to check multiple repeats.\n     * - All characters but the start character of the sequence can be skipped.\n     */\n    Tokenizer.prototype.stateInCommentLike = function (c) {\n        if (c === this.currentSequence[this.sequenceIndex]) {\n            if (++this.sequenceIndex === this.currentSequence.length) {\n                if (this.currentSequence === Sequences.CdataEnd) {\n                    this.cbs.oncdata(this.sectionStart, this.index, 2);\n                }\n                else {\n                    this.cbs.oncomment(this.sectionStart, this.index, 2);\n                }\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n                this.state = State.Text;\n            }\n        }\n        else if (this.sequenceIndex === 0) {\n            // Fast-forward to the first character of the sequence\n            if (this.fastForwardTo(this.currentSequence[0])) {\n                this.sequenceIndex = 1;\n            }\n        }\n        else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n            // Allow long sequences, eg. --->, ]]]>\n            this.sequenceIndex = 0;\n        }\n    };\n    /**\n     * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.\n     *\n     * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).\n     * We allow anything that wouldn't end the tag.\n     */\n    Tokenizer.prototype.isTagStartChar = function (c) {\n        return this.xmlMode ? !isEndOfTagSection(c) : isASCIIAlpha(c);\n    };\n    Tokenizer.prototype.startSpecial = function (sequence, offset) {\n        this.isSpecial = true;\n        this.currentSequence = sequence;\n        this.sequenceIndex = offset;\n        this.state = State.SpecialStartSequence;\n    };\n    Tokenizer.prototype.stateBeforeTagName = function (c) {\n        if (c === CharCodes.ExclamationMark) {\n            this.state = State.BeforeDeclaration;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.Questionmark) {\n            this.state = State.InProcessingInstruction;\n            this.sectionStart = this.index + 1;\n        }\n        else if (this.isTagStartChar(c)) {\n            var lower = c | 0x20;\n            this.sectionStart = this.index;\n            if (this.xmlMode) {\n                this.state = State.InTagName;\n            }\n            else if (lower === Sequences.ScriptEnd[2]) {\n                this.state = State.BeforeSpecialS;\n            }\n            else if (lower === Sequences.TitleEnd[2]) {\n                this.state = State.BeforeSpecialT;\n            }\n            else {\n                this.state = State.InTagName;\n            }\n        }\n        else if (c === CharCodes.Slash) {\n            this.state = State.BeforeClosingTagName;\n        }\n        else {\n            this.state = State.Text;\n            this.stateText(c);\n        }\n    };\n    Tokenizer.prototype.stateInTagName = function (c) {\n        if (isEndOfTagSection(c)) {\n            this.cbs.onopentagname(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    };\n    Tokenizer.prototype.stateBeforeClosingTagName = function (c) {\n        if (isWhitespace(c)) {\n            // Ignore\n        }\n        else if (c === CharCodes.Gt) {\n            this.state = State.Text;\n        }\n        else {\n            this.state = this.isTagStartChar(c)\n                ? State.InClosingTagName\n                : State.InSpecialComment;\n            this.sectionStart = this.index;\n        }\n    };\n    Tokenizer.prototype.stateInClosingTagName = function (c) {\n        if (c === CharCodes.Gt || isWhitespace(c)) {\n            this.cbs.onclosetag(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.AfterClosingTagName;\n            this.stateAfterClosingTagName(c);\n        }\n    };\n    Tokenizer.prototype.stateAfterClosingTagName = function (c) {\n        // Skip everything until \">\"\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    };\n    Tokenizer.prototype.stateBeforeAttributeName = function (c) {\n        if (c === CharCodes.Gt) {\n            this.cbs.onopentagend(this.index);\n            if (this.isSpecial) {\n                this.state = State.InSpecialTag;\n                this.sequenceIndex = 0;\n            }\n            else {\n                this.state = State.Text;\n            }\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.Slash) {\n            this.state = State.InSelfClosingTag;\n        }\n        else if (!isWhitespace(c)) {\n            this.state = State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    };\n    Tokenizer.prototype.stateInSelfClosingTag = function (c) {\n        if (c === CharCodes.Gt) {\n            this.cbs.onselfclosingtag(this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n            this.isSpecial = false; // Reset special state, in case of self-closing special tags\n        }\n        else if (!isWhitespace(c)) {\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    };\n    Tokenizer.prototype.stateInAttributeName = function (c) {\n        if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n            this.cbs.onattribname(this.sectionStart, this.index);\n            this.sectionStart = this.index;\n            this.state = State.AfterAttributeName;\n            this.stateAfterAttributeName(c);\n        }\n    };\n    Tokenizer.prototype.stateAfterAttributeName = function (c) {\n        if (c === CharCodes.Eq) {\n            this.state = State.BeforeAttributeValue;\n        }\n        else if (c === CharCodes.Slash || c === CharCodes.Gt) {\n            this.cbs.onattribend(QuoteType.NoValue, this.sectionStart);\n            this.sectionStart = -1;\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n        else if (!isWhitespace(c)) {\n            this.cbs.onattribend(QuoteType.NoValue, this.sectionStart);\n            this.state = State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    };\n    Tokenizer.prototype.stateBeforeAttributeValue = function (c) {\n        if (c === CharCodes.DoubleQuote) {\n            this.state = State.InAttributeValueDq;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.SingleQuote) {\n            this.state = State.InAttributeValueSq;\n            this.sectionStart = this.index + 1;\n        }\n        else if (!isWhitespace(c)) {\n            this.sectionStart = this.index;\n            this.state = State.InAttributeValueNq;\n            this.stateInAttributeValueNoQuotes(c); // Reconsume token\n        }\n    };\n    Tokenizer.prototype.handleInAttributeValue = function (c, quote) {\n        if (c === quote ||\n            (!this.decodeEntities && this.fastForwardTo(quote))) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(quote === CharCodes.DoubleQuote\n                ? QuoteType.Double\n                : QuoteType.Single, this.index + 1);\n            this.state = State.BeforeAttributeName;\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.startEntity();\n        }\n    };\n    Tokenizer.prototype.stateInAttributeValueDoubleQuotes = function (c) {\n        this.handleInAttributeValue(c, CharCodes.DoubleQuote);\n    };\n    Tokenizer.prototype.stateInAttributeValueSingleQuotes = function (c) {\n        this.handleInAttributeValue(c, CharCodes.SingleQuote);\n    };\n    Tokenizer.prototype.stateInAttributeValueNoQuotes = function (c) {\n        if (isWhitespace(c) || c === CharCodes.Gt) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(QuoteType.Unquoted, this.index);\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.startEntity();\n        }\n    };\n    Tokenizer.prototype.stateBeforeDeclaration = function (c) {\n        if (c === CharCodes.OpeningSquareBracket) {\n            this.state = State.CDATASequence;\n            this.sequenceIndex = 0;\n        }\n        else {\n            this.state =\n                c === CharCodes.Dash\n                    ? State.BeforeComment\n                    : State.InDeclaration;\n        }\n    };\n    Tokenizer.prototype.stateInDeclaration = function (c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.ondeclaration(this.sectionStart, this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    };\n    Tokenizer.prototype.stateInProcessingInstruction = function (c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    };\n    Tokenizer.prototype.stateBeforeComment = function (c) {\n        if (c === CharCodes.Dash) {\n            this.state = State.InCommentLike;\n            this.currentSequence = Sequences.CommentEnd;\n            // Allow short comments (eg. <!-->)\n            this.sequenceIndex = 2;\n            this.sectionStart = this.index + 1;\n        }\n        else {\n            this.state = State.InDeclaration;\n        }\n    };\n    Tokenizer.prototype.stateInSpecialComment = function (c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.oncomment(this.sectionStart, this.index, 0);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    };\n    Tokenizer.prototype.stateBeforeSpecialS = function (c) {\n        var lower = c | 0x20;\n        if (lower === Sequences.ScriptEnd[3]) {\n            this.startSpecial(Sequences.ScriptEnd, 4);\n        }\n        else if (lower === Sequences.StyleEnd[3]) {\n            this.startSpecial(Sequences.StyleEnd, 4);\n        }\n        else {\n            this.state = State.InTagName;\n            this.stateInTagName(c); // Consume the token again\n        }\n    };\n    Tokenizer.prototype.stateBeforeSpecialT = function (c) {\n        var lower = c | 0x20;\n        if (lower === Sequences.TitleEnd[3]) {\n            this.startSpecial(Sequences.TitleEnd, 4);\n        }\n        else if (lower === Sequences.TextareaEnd[3]) {\n            this.startSpecial(Sequences.TextareaEnd, 4);\n        }\n        else {\n            this.state = State.InTagName;\n            this.stateInTagName(c); // Consume the token again\n        }\n    };\n    Tokenizer.prototype.startEntity = function () {\n        this.baseState = this.state;\n        this.state = State.InEntity;\n        this.entityStart = this.index;\n        this.entityDecoder.startEntity(this.xmlMode\n            ? decode_js_1.DecodingMode.Strict\n            : this.baseState === State.Text ||\n                this.baseState === State.InSpecialTag\n                ? decode_js_1.DecodingMode.Legacy\n                : decode_js_1.DecodingMode.Attribute);\n    };\n    Tokenizer.prototype.stateInEntity = function () {\n        var length = this.entityDecoder.write(this.buffer, this.index - this.offset);\n        // If `length` is positive, we are done with the entity.\n        if (length >= 0) {\n            this.state = this.baseState;\n            if (length === 0) {\n                this.index = this.entityStart;\n            }\n        }\n        else {\n            // Mark buffer as consumed.\n            this.index = this.offset + this.buffer.length - 1;\n        }\n    };\n    /**\n     * Remove data that has already been consumed from the buffer.\n     */\n    Tokenizer.prototype.cleanup = function () {\n        // If we are inside of text or attributes, emit what we already have.\n        if (this.running && this.sectionStart !== this.index) {\n            if (this.state === State.Text ||\n                (this.state === State.InSpecialTag && this.sequenceIndex === 0)) {\n                this.cbs.ontext(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n            else if (this.state === State.InAttributeValueDq ||\n                this.state === State.InAttributeValueSq ||\n                this.state === State.InAttributeValueNq) {\n                this.cbs.onattribdata(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n        }\n    };\n    Tokenizer.prototype.shouldContinue = function () {\n        return this.index < this.buffer.length + this.offset && this.running;\n    };\n    /**\n     * Iterates through the buffer, calling the function corresponding to the current state.\n     *\n     * States that are more likely to be hit are higher up, as a performance improvement.\n     */\n    Tokenizer.prototype.parse = function () {\n        while (this.shouldContinue()) {\n            var c = this.buffer.charCodeAt(this.index - this.offset);\n            switch (this.state) {\n                case State.Text: {\n                    this.stateText(c);\n                    break;\n                }\n                case State.SpecialStartSequence: {\n                    this.stateSpecialStartSequence(c);\n                    break;\n                }\n                case State.InSpecialTag: {\n                    this.stateInSpecialTag(c);\n                    break;\n                }\n                case State.CDATASequence: {\n                    this.stateCDATASequence(c);\n                    break;\n                }\n                case State.InAttributeValueDq: {\n                    this.stateInAttributeValueDoubleQuotes(c);\n                    break;\n                }\n                case State.InAttributeName: {\n                    this.stateInAttributeName(c);\n                    break;\n                }\n                case State.InCommentLike: {\n                    this.stateInCommentLike(c);\n                    break;\n                }\n                case State.InSpecialComment: {\n                    this.stateInSpecialComment(c);\n                    break;\n                }\n                case State.BeforeAttributeName: {\n                    this.stateBeforeAttributeName(c);\n                    break;\n                }\n                case State.InTagName: {\n                    this.stateInTagName(c);\n                    break;\n                }\n                case State.InClosingTagName: {\n                    this.stateInClosingTagName(c);\n                    break;\n                }\n                case State.BeforeTagName: {\n                    this.stateBeforeTagName(c);\n                    break;\n                }\n                case State.AfterAttributeName: {\n                    this.stateAfterAttributeName(c);\n                    break;\n                }\n                case State.InAttributeValueSq: {\n                    this.stateInAttributeValueSingleQuotes(c);\n                    break;\n                }\n                case State.BeforeAttributeValue: {\n                    this.stateBeforeAttributeValue(c);\n                    break;\n                }\n                case State.BeforeClosingTagName: {\n                    this.stateBeforeClosingTagName(c);\n                    break;\n                }\n                case State.AfterClosingTagName: {\n                    this.stateAfterClosingTagName(c);\n                    break;\n                }\n                case State.BeforeSpecialS: {\n                    this.stateBeforeSpecialS(c);\n                    break;\n                }\n                case State.BeforeSpecialT: {\n                    this.stateBeforeSpecialT(c);\n                    break;\n                }\n                case State.InAttributeValueNq: {\n                    this.stateInAttributeValueNoQuotes(c);\n                    break;\n                }\n                case State.InSelfClosingTag: {\n                    this.stateInSelfClosingTag(c);\n                    break;\n                }\n                case State.InDeclaration: {\n                    this.stateInDeclaration(c);\n                    break;\n                }\n                case State.BeforeDeclaration: {\n                    this.stateBeforeDeclaration(c);\n                    break;\n                }\n                case State.BeforeComment: {\n                    this.stateBeforeComment(c);\n                    break;\n                }\n                case State.InProcessingInstruction: {\n                    this.stateInProcessingInstruction(c);\n                    break;\n                }\n                case State.InEntity: {\n                    this.stateInEntity();\n                    break;\n                }\n            }\n            this.index++;\n        }\n        this.cleanup();\n    };\n    Tokenizer.prototype.finish = function () {\n        if (this.state === State.InEntity) {\n            this.entityDecoder.end();\n            this.state = this.baseState;\n        }\n        this.handleTrailingData();\n        this.cbs.onend();\n    };\n    /** Handle any trailing data. */\n    Tokenizer.prototype.handleTrailingData = function () {\n        var endIndex = this.buffer.length + this.offset;\n        // If there is no remaining data, we are done.\n        if (this.sectionStart >= endIndex) {\n            return;\n        }\n        if (this.state === State.InCommentLike) {\n            if (this.currentSequence === Sequences.CdataEnd) {\n                this.cbs.oncdata(this.sectionStart, endIndex, 0);\n            }\n            else {\n                this.cbs.oncomment(this.sectionStart, endIndex, 0);\n            }\n        }\n        else if (this.state === State.InTagName ||\n            this.state === State.BeforeAttributeName ||\n            this.state === State.BeforeAttributeValue ||\n            this.state === State.AfterAttributeName ||\n            this.state === State.InAttributeName ||\n            this.state === State.InAttributeValueSq ||\n            this.state === State.InAttributeValueDq ||\n            this.state === State.InAttributeValueNq ||\n            this.state === State.InClosingTagName) {\n            /*\n             * If we are currently in an opening or closing tag, us not calling the\n             * respective callback signals that the tag should be ignored.\n             */\n        }\n        else {\n            this.cbs.ontext(this.sectionStart, endIndex);\n        }\n    };\n    Tokenizer.prototype.emitCodePoint = function (cp, consumed) {\n        if (this.baseState !== State.Text &&\n            this.baseState !== State.InSpecialTag) {\n            if (this.sectionStart < this.entityStart) {\n                this.cbs.onattribdata(this.sectionStart, this.entityStart);\n            }\n            this.sectionStart = this.entityStart + consumed;\n            this.index = this.sectionStart - 1;\n            this.cbs.onattribentity(cp);\n        }\n        else {\n            if (this.sectionStart < this.entityStart) {\n                this.cbs.ontext(this.sectionStart, this.entityStart);\n            }\n            this.sectionStart = this.entityStart + consumed;\n            this.index = this.sectionStart - 1;\n            this.cbs.ontextentity(cp, this.sectionStart);\n        }\n    };\n    return Tokenizer;\n}());\nexports.default = Tokenizer;\n//# sourceMappingURL=Tokenizer.js.map"]}}