{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});const{PoolBase,kClients,kNeedDrain,kAddClient,kGetDispatcher}=require(\"./pool-base\");const Client=require(\"./client\");const{InvalidArgumentError}=require(\"../core/errors\");const util=require(\"../core/util\");const{kUrl,kInterceptors}=require(\"../core/symbols\");const buildConnector=require(\"../core/connect\");const kOptions=Symbol(\"options\");const kConnections=Symbol(\"connections\");const kFactory=Symbol(\"factory\");function defaultFactory(origin,opts){return new Client(origin,opts)}__name(defaultFactory,\"defaultFactory\");class Pool extends PoolBase{static{__name(this,\"Pool\")}constructor(origin,{connections,factory=defaultFactory,connect,connectTimeout,tls,maxCachedSessions,socketPath,autoSelectFamily,autoSelectFamilyAttemptTimeout,allowH2,...options}={}){super();if(connections!=null&&(!Number.isFinite(connections)||connections<0)){throw new InvalidArgumentError(\"invalid connections\")}if(typeof factory!==\"function\"){throw new InvalidArgumentError(\"factory must be a function.\")}if(connect!=null&&typeof connect!==\"function\"&&typeof connect!==\"object\"){throw new InvalidArgumentError(\"connect must be a function or an object\")}if(typeof connect!==\"function\"){connect=buildConnector({...tls,maxCachedSessions,allowH2,socketPath,timeout:connectTimeout,...autoSelectFamily?{autoSelectFamily,autoSelectFamilyAttemptTimeout}:void 0,...connect})}this[kInterceptors]=options.interceptors?.Pool&&Array.isArray(options.interceptors.Pool)?options.interceptors.Pool:[];this[kConnections]=connections||null;this[kUrl]=util.parseOrigin(origin);this[kOptions]={...util.deepClone(options),connect,allowH2};this[kOptions].interceptors=options.interceptors?{...options.interceptors}:void 0;this[kFactory]=factory}[kGetDispatcher](){for(const client of this[kClients]){if(!client[kNeedDrain]){return client}}if(!this[kConnections]||this[kClients].length<this[kConnections]){const dispatcher=this[kFactory](this[kUrl],this[kOptions]);this[kAddClient](dispatcher);return dispatcher}}}module.exports=Pool;\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HAEA,KAAM,CACJ,SACA,SACA,WACA,WACA,cACF,EAAI,QAAQ,aAAa,EACzB,MAAM,OAAS,QAAQ,UAAU,EACjC,KAAM,CACJ,oBACF,EAAI,QAAQ,gBAAgB,EAC5B,MAAM,KAAO,QAAQ,cAAc,EACnC,KAAM,CAAE,KAAM,aAAc,EAAI,QAAQ,iBAAiB,EACzD,MAAM,eAAiB,QAAQ,iBAAiB,EAEhD,MAAM,SAAW,OAAO,SAAS,EACjC,MAAM,aAAe,OAAO,aAAa,EACzC,MAAM,SAAW,OAAO,SAAS,EAEjC,SAAS,eAAgB,OAAQ,KAAM,CACrC,OAAO,IAAI,OAAO,OAAQ,IAAI,CAChC,CAFS,wCAIT,MAAM,aAAa,QAAS,CAzB5B,MAyB4B,qBAC1B,YAAa,OAAQ,CACnB,YACA,QAAU,eACV,QACA,eACA,IACA,kBACA,WACA,iBACA,+BACA,QACA,GAAG,OACL,EAAI,CAAC,EAAG,CACN,MAAM,EAEN,GAAI,aAAe,OAAS,CAAC,OAAO,SAAS,WAAW,GAAK,YAAc,GAAI,CAC7E,MAAM,IAAI,qBAAqB,qBAAqB,CACtD,CAEA,GAAI,OAAO,UAAY,WAAY,CACjC,MAAM,IAAI,qBAAqB,6BAA6B,CAC9D,CAEA,GAAI,SAAW,MAAQ,OAAO,UAAY,YAAc,OAAO,UAAY,SAAU,CACnF,MAAM,IAAI,qBAAqB,yCAAyC,CAC1E,CAEA,GAAI,OAAO,UAAY,WAAY,CACjC,QAAU,eAAe,CACvB,GAAG,IACH,kBACA,QACA,WACA,QAAS,eACT,GAAI,iBAAmB,CAAE,iBAAkB,8BAA+B,EAAI,OAC9E,GAAG,OACL,CAAC,CACH,CAEA,KAAK,aAAa,EAAI,QAAQ,cAAc,MAAQ,MAAM,QAAQ,QAAQ,aAAa,IAAI,EACvF,QAAQ,aAAa,KACrB,CAAC,EACL,KAAK,YAAY,EAAI,aAAe,KACpC,KAAK,IAAI,EAAI,KAAK,YAAY,MAAM,EACpC,KAAK,QAAQ,EAAI,CAAE,GAAG,KAAK,UAAU,OAAO,EAAG,QAAS,OAAQ,EAChE,KAAK,QAAQ,EAAE,aAAe,QAAQ,aAClC,CAAE,GAAG,QAAQ,YAAa,EAC1B,OACJ,KAAK,QAAQ,EAAI,OACnB,CAEA,CAAC,cAAc,GAAK,CAClB,UAAW,UAAU,KAAK,QAAQ,EAAG,CACnC,GAAI,CAAC,OAAO,UAAU,EAAG,CACvB,OAAO,MACT,CACF,CAEA,GAAI,CAAC,KAAK,YAAY,GAAK,KAAK,QAAQ,EAAE,OAAS,KAAK,YAAY,EAAG,CACrE,MAAM,WAAa,KAAK,QAAQ,EAAE,KAAK,IAAI,EAAG,KAAK,QAAQ,CAAC,EAC5D,KAAK,UAAU,EAAE,UAAU,EAC3B,OAAO,UACT,CACF,CACF,CAEA,OAAO,QAAU","names":[],"sources":["/home/creditga/CofiCarte/node_modules/.pnpm/undici@6.21.0/node_modules/undici/lib/dispatcher/pool.js"],"sourcesContent":["'use strict'\n\nconst {\n  PoolBase,\n  kClients,\n  kNeedDrain,\n  kAddClient,\n  kGetDispatcher\n} = require('./pool-base')\nconst Client = require('./client')\nconst {\n  InvalidArgumentError\n} = require('../core/errors')\nconst util = require('../core/util')\nconst { kUrl, kInterceptors } = require('../core/symbols')\nconst buildConnector = require('../core/connect')\n\nconst kOptions = Symbol('options')\nconst kConnections = Symbol('connections')\nconst kFactory = Symbol('factory')\n\nfunction defaultFactory (origin, opts) {\n  return new Client(origin, opts)\n}\n\nclass Pool extends PoolBase {\n  constructor (origin, {\n    connections,\n    factory = defaultFactory,\n    connect,\n    connectTimeout,\n    tls,\n    maxCachedSessions,\n    socketPath,\n    autoSelectFamily,\n    autoSelectFamilyAttemptTimeout,\n    allowH2,\n    ...options\n  } = {}) {\n    super()\n\n    if (connections != null && (!Number.isFinite(connections) || connections < 0)) {\n      throw new InvalidArgumentError('invalid connections')\n    }\n\n    if (typeof factory !== 'function') {\n      throw new InvalidArgumentError('factory must be a function.')\n    }\n\n    if (connect != null && typeof connect !== 'function' && typeof connect !== 'object') {\n      throw new InvalidArgumentError('connect must be a function or an object')\n    }\n\n    if (typeof connect !== 'function') {\n      connect = buildConnector({\n        ...tls,\n        maxCachedSessions,\n        allowH2,\n        socketPath,\n        timeout: connectTimeout,\n        ...(autoSelectFamily ? { autoSelectFamily, autoSelectFamilyAttemptTimeout } : undefined),\n        ...connect\n      })\n    }\n\n    this[kInterceptors] = options.interceptors?.Pool && Array.isArray(options.interceptors.Pool)\n      ? options.interceptors.Pool\n      : []\n    this[kConnections] = connections || null\n    this[kUrl] = util.parseOrigin(origin)\n    this[kOptions] = { ...util.deepClone(options), connect, allowH2 }\n    this[kOptions].interceptors = options.interceptors\n      ? { ...options.interceptors }\n      : undefined\n    this[kFactory] = factory\n  }\n\n  [kGetDispatcher] () {\n    for (const client of this[kClients]) {\n      if (!client[kNeedDrain]) {\n        return client\n      }\n    }\n\n    if (!this[kConnections] || this[kClients].length < this[kConnections]) {\n      const dispatcher = this[kFactory](this[kUrl], this[kOptions])\n      this[kAddClient](dispatcher)\n      return dispatcher\n    }\n  }\n}\n\nmodule.exports = Pool\n"]}}