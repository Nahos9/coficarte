{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});exports.getEncoding=exports.Sniffer=exports.STRINGS=exports.ResultType=void 0;var whatwg_encoding_1=require(\"whatwg-encoding\");var State;(function(State2){State2[State2[\"Begin\"]=0]=\"Begin\";State2[State2[\"BOM16BE\"]=1]=\"BOM16BE\";State2[State2[\"BOM16LE\"]=2]=\"BOM16LE\";State2[State2[\"BOM8\"]=3]=\"BOM8\";State2[State2[\"UTF16LE_XML_PREFIX\"]=4]=\"UTF16LE_XML_PREFIX\";State2[State2[\"BeginLT\"]=5]=\"BeginLT\";State2[State2[\"UTF16BE_XML_PREFIX\"]=6]=\"UTF16BE_XML_PREFIX\";State2[State2[\"BeforeTag\"]=7]=\"BeforeTag\";State2[State2[\"BeforeTagName\"]=8]=\"BeforeTagName\";State2[State2[\"BeforeCloseTagName\"]=9]=\"BeforeCloseTagName\";State2[State2[\"CommentStart\"]=10]=\"CommentStart\";State2[State2[\"CommentEnd\"]=11]=\"CommentEnd\";State2[State2[\"TagNameMeta\"]=12]=\"TagNameMeta\";State2[State2[\"TagNameOther\"]=13]=\"TagNameOther\";State2[State2[\"XMLDeclaration\"]=14]=\"XMLDeclaration\";State2[State2[\"XMLDeclarationBeforeEncoding\"]=15]=\"XMLDeclarationBeforeEncoding\";State2[State2[\"XMLDeclarationAfterEncoding\"]=16]=\"XMLDeclarationAfterEncoding\";State2[State2[\"XMLDeclarationBeforeValue\"]=17]=\"XMLDeclarationBeforeValue\";State2[State2[\"XMLDeclarationValue\"]=18]=\"XMLDeclarationValue\";State2[State2[\"WeirdTag\"]=19]=\"WeirdTag\";State2[State2[\"BeforeAttribute\"]=20]=\"BeforeAttribute\";State2[State2[\"MetaAttribHttpEquiv\"]=21]=\"MetaAttribHttpEquiv\";State2[State2[\"MetaAttribHttpEquivValue\"]=22]=\"MetaAttribHttpEquivValue\";State2[State2[\"MetaAttribC\"]=23]=\"MetaAttribC\";State2[State2[\"MetaAttribContent\"]=24]=\"MetaAttribContent\";State2[State2[\"MetaAttribCharset\"]=25]=\"MetaAttribCharset\";State2[State2[\"MetaAttribAfterName\"]=26]=\"MetaAttribAfterName\";State2[State2[\"MetaContentValueQuotedBeforeEncoding\"]=27]=\"MetaContentValueQuotedBeforeEncoding\";State2[State2[\"MetaContentValueQuotedAfterEncoding\"]=28]=\"MetaContentValueQuotedAfterEncoding\";State2[State2[\"MetaContentValueQuotedBeforeValue\"]=29]=\"MetaContentValueQuotedBeforeValue\";State2[State2[\"MetaContentValueQuotedValueQuoted\"]=30]=\"MetaContentValueQuotedValueQuoted\";State2[State2[\"MetaContentValueQuotedValueUnquoted\"]=31]=\"MetaContentValueQuotedValueUnquoted\";State2[State2[\"MetaContentValueUnquotedBeforeEncoding\"]=32]=\"MetaContentValueUnquotedBeforeEncoding\";State2[State2[\"MetaContentValueUnquotedBeforeValue\"]=33]=\"MetaContentValueUnquotedBeforeValue\";State2[State2[\"MetaContentValueUnquotedValueQuoted\"]=34]=\"MetaContentValueUnquotedValueQuoted\";State2[State2[\"MetaContentValueUnquotedValueUnquoted\"]=35]=\"MetaContentValueUnquotedValueUnquoted\";State2[State2[\"AnyAttribName\"]=36]=\"AnyAttribName\";State2[State2[\"AfterAttributeName\"]=37]=\"AfterAttributeName\";State2[State2[\"BeforeAttributeValue\"]=38]=\"BeforeAttributeValue\";State2[State2[\"AttributeValueQuoted\"]=39]=\"AttributeValueQuoted\";State2[State2[\"AttributeValueUnquoted\"]=40]=\"AttributeValueUnquoted\"})(State||(State={}));var ResultType;(function(ResultType2){ResultType2[ResultType2[\"BOM\"]=0]=\"BOM\";ResultType2[ResultType2[\"PASSED\"]=1]=\"PASSED\";ResultType2[ResultType2[\"XML_PREFIX\"]=2]=\"XML_PREFIX\";ResultType2[ResultType2[\"META_TAG\"]=3]=\"META_TAG\";ResultType2[ResultType2[\"XML_ENCODING\"]=4]=\"XML_ENCODING\";ResultType2[ResultType2[\"DEFAULT\"]=5]=\"DEFAULT\"})(ResultType||(exports.ResultType=ResultType={}));var AttribType;(function(AttribType2){AttribType2[AttribType2[\"None\"]=0]=\"None\";AttribType2[AttribType2[\"HttpEquiv\"]=1]=\"HttpEquiv\";AttribType2[AttribType2[\"Content\"]=2]=\"Content\";AttribType2[AttribType2[\"Charset\"]=3]=\"Charset\"})(AttribType||(AttribType={}));var Chars;(function(Chars2){Chars2[Chars2[\"NIL\"]=0]=\"NIL\";Chars2[Chars2[\"TAB\"]=9]=\"TAB\";Chars2[Chars2[\"LF\"]=10]=\"LF\";Chars2[Chars2[\"CR\"]=13]=\"CR\";Chars2[Chars2[\"SPACE\"]=32]=\"SPACE\";Chars2[Chars2[\"EXCLAMATION\"]=33]=\"EXCLAMATION\";Chars2[Chars2[\"DQUOTE\"]=34]=\"DQUOTE\";Chars2[Chars2[\"SQUOTE\"]=39]=\"SQUOTE\";Chars2[Chars2[\"DASH\"]=45]=\"DASH\";Chars2[Chars2[\"SLASH\"]=47]=\"SLASH\";Chars2[Chars2[\"SEMICOLON\"]=59]=\"SEMICOLON\";Chars2[Chars2[\"LT\"]=60]=\"LT\";Chars2[Chars2[\"EQUALS\"]=61]=\"EQUALS\";Chars2[Chars2[\"GT\"]=62]=\"GT\";Chars2[Chars2[\"QUESTION\"]=63]=\"QUESTION\";Chars2[Chars2[\"UpperA\"]=65]=\"UpperA\";Chars2[Chars2[\"UpperZ\"]=90]=\"UpperZ\";Chars2[Chars2[\"LowerA\"]=97]=\"LowerA\";Chars2[Chars2[\"LowerZ\"]=122]=\"LowerZ\"})(Chars||(Chars={}));var SPACE_CHARACTERS=new Set([Chars.SPACE,Chars.LF,Chars.CR,Chars.TAB]);var END_OF_UNQUOTED_ATTRIBUTE_VALUE=new Set([Chars.SPACE,Chars.LF,Chars.CR,Chars.TAB,Chars.GT]);function toUint8Array(str){var arr=new Uint8Array(str.length);for(var i=0;i<str.length;i++){arr[i]=str.charCodeAt(i)}return arr}__name(toUint8Array,\"toUint8Array\");exports.STRINGS={UTF8_BOM:new Uint8Array([239,187,191]),UTF16LE_BOM:new Uint8Array([255,254]),UTF16BE_BOM:new Uint8Array([254,255]),UTF16LE_XML_PREFIX:new Uint8Array([60,0,63,0,120,0]),UTF16BE_XML_PREFIX:new Uint8Array([0,60,0,63,0,120]),XML_DECLARATION:toUint8Array(\"<?xml\"),ENCODING:toUint8Array(\"encoding\"),META:toUint8Array(\"meta\"),HTTP_EQUIV:toUint8Array(\"http-equiv\"),CONTENT:toUint8Array(\"content\"),CONTENT_TYPE:toUint8Array(\"content-type\"),CHARSET:toUint8Array(\"charset\"),COMMENT_START:toUint8Array(\"<!--\"),COMMENT_END:toUint8Array(\"-->\")};function isAsciiAlpha(c){return c>=Chars.UpperA&&c<=Chars.UpperZ||c>=Chars.LowerA&&c<=Chars.LowerZ}__name(isAsciiAlpha,\"isAsciiAlpha\");function isQuote(c){return c===Chars.DQUOTE||c===Chars.SQUOTE}__name(isQuote,\"isQuote\");var Sniffer=function(){function Sniffer2(_a){var _b=_a===void 0?{}:_a,_c=_b.maxBytes,maxBytes=_c===void 0?1024:_c,userEncoding=_b.userEncoding,transportLayerEncodingLabel=_b.transportLayerEncodingLabel,defaultEncoding=_b.defaultEncoding;this.offset=0;this.state=State.Begin;this.sectionIndex=0;this.attribType=AttribType.None;this.gotPragma=null;this.needsPragma=null;this.inMetaTag=false;this.encoding=\"windows-1252\";this.resultType=ResultType.DEFAULT;this.quoteCharacter=0;this.attributeValue=[];this.maxBytes=maxBytes;if(userEncoding){this.setResult(userEncoding,ResultType.PASSED)}if(transportLayerEncodingLabel){this.setResult(transportLayerEncodingLabel,ResultType.PASSED)}if(defaultEncoding){this.setResult(defaultEncoding,ResultType.DEFAULT)}}__name(Sniffer2,\"Sniffer\");Sniffer2.prototype.setResult=function(label,type){if(this.resultType===ResultType.DEFAULT||this.resultType>type){var encoding=(0,whatwg_encoding_1.labelToName)(label);if(encoding){this.encoding=type===ResultType.META_TAG&&encoding===\"x-user-defined\"?\"windows-1252\":(type===ResultType.META_TAG||type===ResultType.XML_ENCODING)&&(encoding===\"UTF-16LE\"||encoding===\"UTF-16BE\")?\"UTF-8\":encoding;this.resultType=type}}};Sniffer2.prototype.stateBegin=function(c){switch(c){case exports.STRINGS.UTF16BE_BOM[0]:{this.state=State.BOM16BE;break}case exports.STRINGS.UTF16LE_BOM[0]:{this.state=State.BOM16LE;break}case exports.STRINGS.UTF8_BOM[0]:{this.sectionIndex=1;this.state=State.BOM8;break}case Chars.NIL:{this.state=State.UTF16BE_XML_PREFIX;this.sectionIndex=1;break}case Chars.LT:{this.state=State.BeginLT;break}default:{this.state=State.BeforeTag}}};Sniffer2.prototype.stateBeginLT=function(c){if(c===Chars.NIL){this.state=State.UTF16LE_XML_PREFIX;this.sectionIndex=2}else if(c===Chars.QUESTION){this.state=State.XMLDeclaration;this.sectionIndex=2}else{this.state=State.BeforeTagName;this.stateBeforeTagName(c)}};Sniffer2.prototype.stateUTF16BE_XML_PREFIX=function(c){if(this.advanceSection(exports.STRINGS.UTF16BE_XML_PREFIX,c)){if(this.sectionIndex===exports.STRINGS.UTF16BE_XML_PREFIX.length){this.setResult(\"utf-16be\",ResultType.XML_PREFIX)}}else{this.state=State.BeforeTag;this.stateBeforeTag(c)}};Sniffer2.prototype.stateUTF16LE_XML_PREFIX=function(c){if(this.advanceSection(exports.STRINGS.UTF16LE_XML_PREFIX,c)){if(this.sectionIndex===exports.STRINGS.UTF16LE_XML_PREFIX.length){this.setResult(\"utf-16le\",ResultType.XML_PREFIX)}}else{this.state=State.BeforeTag;this.stateBeforeTag(c)}};Sniffer2.prototype.stateBOM16LE=function(c){if(c===exports.STRINGS.UTF16LE_BOM[1]){this.setResult(\"utf-16le\",ResultType.BOM)}else{this.state=State.BeforeTag;this.stateBeforeTag(c)}};Sniffer2.prototype.stateBOM16BE=function(c){if(c===exports.STRINGS.UTF16BE_BOM[1]){this.setResult(\"utf-16be\",ResultType.BOM)}else{this.state=State.BeforeTag;this.stateBeforeTag(c)}};Sniffer2.prototype.stateBOM8=function(c){if(this.advanceSection(exports.STRINGS.UTF8_BOM,c)&&this.sectionIndex===exports.STRINGS.UTF8_BOM.length){this.setResult(\"utf-8\",ResultType.BOM)}};Sniffer2.prototype.stateBeforeTag=function(c){if(c===Chars.LT){this.state=State.BeforeTagName;this.inMetaTag=false}};Sniffer2.prototype.stateBeforeTagName=function(c){if(isAsciiAlpha(c)){if((c|32)===exports.STRINGS.META[0]){this.sectionIndex=1;this.state=State.TagNameMeta}else{this.state=State.TagNameOther}}else switch(c){case Chars.SLASH:{this.state=State.BeforeCloseTagName;break}case Chars.EXCLAMATION:{this.state=State.CommentStart;this.sectionIndex=2;break}case Chars.QUESTION:{this.state=State.WeirdTag;break}default:{this.state=State.BeforeTag;this.stateBeforeTag(c)}}};Sniffer2.prototype.stateBeforeCloseTagName=function(c){this.state=isAsciiAlpha(c)?State.TagNameOther:State.WeirdTag};Sniffer2.prototype.stateCommentStart=function(c){if(this.advanceSection(exports.STRINGS.COMMENT_START,c)){if(this.sectionIndex===exports.STRINGS.COMMENT_START.length){this.state=State.CommentEnd;this.sectionIndex=2}}else{this.state=State.WeirdTag;this.stateWeirdTag(c)}};Sniffer2.prototype.stateCommentEnd=function(c){if(this.advanceSection(exports.STRINGS.COMMENT_END,c)){if(this.sectionIndex===exports.STRINGS.COMMENT_END.length){this.state=State.BeforeTag}}else if(c===Chars.DASH){this.sectionIndex=2}};Sniffer2.prototype.stateWeirdTag=function(c){if(c===Chars.GT){this.state=State.BeforeTag}};Sniffer2.prototype.advanceSectionIC=function(section,c){return this.advanceSection(section,c|32)};Sniffer2.prototype.advanceSection=function(section,c){if(section[this.sectionIndex]===c){this.sectionIndex++;return true}this.sectionIndex=0;return false};Sniffer2.prototype.stateTagNameMeta=function(c){if(this.sectionIndex<exports.STRINGS.META.length){if(this.advanceSectionIC(exports.STRINGS.META,c)){return}}else if(SPACE_CHARACTERS.has(c)){this.inMetaTag=true;this.gotPragma=null;this.needsPragma=null;this.state=State.BeforeAttribute;return}this.state=State.TagNameOther;this.stateTagNameOther(c)};Sniffer2.prototype.stateTagNameOther=function(c){if(SPACE_CHARACTERS.has(c)){this.state=State.BeforeAttribute}else if(c===Chars.GT){this.state=State.BeforeTag}};Sniffer2.prototype.stateBeforeAttribute=function(c){if(SPACE_CHARACTERS.has(c))return;if(this.inMetaTag){var lower=c|32;if(lower===exports.STRINGS.HTTP_EQUIV[0]){this.sectionIndex=1;this.state=State.MetaAttribHttpEquiv;return}else if(lower===exports.STRINGS.CHARSET[0]){this.sectionIndex=1;this.state=State.MetaAttribC;return}}this.state=c===Chars.SLASH||c===Chars.GT?State.BeforeTag:State.AnyAttribName};Sniffer2.prototype.handleMetaAttrib=function(c,section,type){if(this.advanceSectionIC(section,c)){if(this.sectionIndex===section.length){this.attribType=type;this.state=State.MetaAttribAfterName}}else{this.state=State.AnyAttribName;this.stateAnyAttribName(c)}};Sniffer2.prototype.stateMetaAttribHttpEquiv=function(c){this.handleMetaAttrib(c,exports.STRINGS.HTTP_EQUIV,AttribType.HttpEquiv)};Sniffer2.prototype.stateMetaAttribC=function(c){var lower=c|32;if(lower===exports.STRINGS.CHARSET[1]){this.sectionIndex=2;this.state=State.MetaAttribCharset}else if(lower===exports.STRINGS.CONTENT[1]){this.sectionIndex=2;this.state=State.MetaAttribContent}else{this.state=State.AnyAttribName;this.stateAnyAttribName(c)}};Sniffer2.prototype.stateMetaAttribCharset=function(c){this.handleMetaAttrib(c,exports.STRINGS.CHARSET,AttribType.Charset)};Sniffer2.prototype.stateMetaAttribContent=function(c){this.handleMetaAttrib(c,exports.STRINGS.CONTENT,AttribType.Content)};Sniffer2.prototype.stateMetaAttribAfterName=function(c){if(SPACE_CHARACTERS.has(c)||c===Chars.EQUALS){this.state=State.AfterAttributeName;this.stateAfterAttributeName(c)}else{this.state=State.AnyAttribName;this.stateAnyAttribName(c)}};Sniffer2.prototype.stateAnyAttribName=function(c){if(SPACE_CHARACTERS.has(c)){this.attribType=AttribType.None;this.state=State.AfterAttributeName}else if(c===Chars.SLASH||c===Chars.GT){this.state=State.BeforeTag}else if(c===Chars.EQUALS){this.state=State.BeforeAttributeValue}};Sniffer2.prototype.stateAfterAttributeName=function(c){if(SPACE_CHARACTERS.has(c))return;if(c===Chars.EQUALS){this.state=State.BeforeAttributeValue}else{this.state=State.BeforeAttribute;this.stateBeforeAttribute(c)}};Sniffer2.prototype.stateBeforeAttributeValue=function(c){if(SPACE_CHARACTERS.has(c))return;this.attributeValue.length=0;this.sectionIndex=0;if(isQuote(c)){this.quoteCharacter=c;this.state=this.attribType===AttribType.Content?State.MetaContentValueQuotedBeforeEncoding:this.attribType===AttribType.HttpEquiv?State.MetaAttribHttpEquivValue:State.AttributeValueQuoted}else if(this.attribType===AttribType.Content){this.state=State.MetaContentValueUnquotedBeforeEncoding;this.stateMetaContentValueUnquotedBeforeEncoding(c)}else if(this.attribType===AttribType.HttpEquiv){this.quoteCharacter=0;this.sectionIndex=0;this.state=State.MetaAttribHttpEquivValue;this.stateMetaAttribHttpEquivValue(c)}else{this.state=State.AttributeValueUnquoted;this.stateAttributeValueUnquoted(c)}};Sniffer2.prototype.stateMetaAttribHttpEquivValue=function(c){if(this.sectionIndex===exports.STRINGS.CONTENT_TYPE.length){if(this.quoteCharacter===0?END_OF_UNQUOTED_ATTRIBUTE_VALUE.has(c):c===this.quoteCharacter){if(this.needsPragma!==null){this.setResult(this.needsPragma,ResultType.META_TAG)}else if(this.gotPragma===null){this.gotPragma=true}this.state=State.BeforeAttribute;return}}else if(this.advanceSectionIC(exports.STRINGS.CONTENT_TYPE,c)){return}this.gotPragma=false;if(this.quoteCharacter===0){this.state=State.AttributeValueUnquoted;this.stateAttributeValueUnquoted(c)}else{this.state=State.AttributeValueQuoted;this.stateAttributeValueQuoted(c)}};Sniffer2.prototype.handleMetaContentValue=function(){if(this.attributeValue.length===0)return;var encoding=String.fromCharCode.apply(String,this.attributeValue);if(this.gotPragma){this.setResult(encoding,ResultType.META_TAG)}else if(this.needsPragma===null){this.needsPragma=encoding}this.attributeValue.length=0};Sniffer2.prototype.handleAttributeValue=function(){if(this.attribType===AttribType.Charset){this.setResult(String.fromCharCode.apply(String,this.attributeValue),ResultType.META_TAG)}};Sniffer2.prototype.stateAttributeValueUnquoted=function(c){if(SPACE_CHARACTERS.has(c)){this.handleAttributeValue();this.state=State.BeforeAttribute}else if(c===Chars.SLASH||c===Chars.GT){this.handleAttributeValue();this.state=State.BeforeTag}else if(this.attribType===AttribType.Charset){this.attributeValue.push(c|32)}};Sniffer2.prototype.findMetaContentEncoding=function(c){if(this.advanceSectionIC(exports.STRINGS.CHARSET,c)){if(this.sectionIndex===exports.STRINGS.CHARSET.length){return true}}else{this.sectionIndex=Number(c===exports.STRINGS.CHARSET[0])}return false};Sniffer2.prototype.stateMetaContentValueUnquotedBeforeEncoding=function(c){if(END_OF_UNQUOTED_ATTRIBUTE_VALUE.has(c)){this.stateAttributeValueUnquoted(c)}else if(this.sectionIndex===exports.STRINGS.CHARSET.length){if(c===Chars.EQUALS){this.state=State.MetaContentValueUnquotedBeforeValue}}else{this.findMetaContentEncoding(c)}};Sniffer2.prototype.stateMetaContentValueUnquotedBeforeValue=function(c){if(isQuote(c)){this.quoteCharacter=c;this.state=State.MetaContentValueUnquotedValueQuoted}else if(END_OF_UNQUOTED_ATTRIBUTE_VALUE.has(c)){this.stateAttributeValueUnquoted(c)}else{this.state=State.MetaContentValueUnquotedValueUnquoted;this.stateMetaContentValueUnquotedValueUnquoted(c)}};Sniffer2.prototype.stateMetaContentValueUnquotedValueQuoted=function(c){if(END_OF_UNQUOTED_ATTRIBUTE_VALUE.has(c)){this.stateAttributeValueUnquoted(c)}else if(c===this.quoteCharacter){this.handleMetaContentValue();this.state=State.AttributeValueUnquoted}else{this.attributeValue.push(c|32)}};Sniffer2.prototype.stateMetaContentValueUnquotedValueUnquoted=function(c){if(END_OF_UNQUOTED_ATTRIBUTE_VALUE.has(c)||c===Chars.SEMICOLON){this.handleMetaContentValue();this.state=State.AttributeValueUnquoted;this.stateAttributeValueUnquoted(c)}else{this.attributeValue.push(c|32)}};Sniffer2.prototype.stateMetaContentValueQuotedValueUnquoted=function(c){if(isQuote(c)||SPACE_CHARACTERS.has(c)||c===Chars.SEMICOLON){this.handleMetaContentValue();this.state=State.AttributeValueQuoted;this.stateAttributeValueQuoted(c)}else{this.attributeValue.push(c|32)}};Sniffer2.prototype.stateMetaContentValueQuotedValueQuoted=function(c){if(isQuote(c)){if(c!==this.quoteCharacter){this.handleMetaContentValue()}this.state=State.AttributeValueQuoted;this.stateAttributeValueQuoted(c)}else{this.attributeValue.push(c|32)}};Sniffer2.prototype.stateMetaContentValueQuotedBeforeEncoding=function(c){if(c===this.quoteCharacter){this.stateAttributeValueQuoted(c)}else if(this.findMetaContentEncoding(c)){this.state=State.MetaContentValueQuotedAfterEncoding}};Sniffer2.prototype.stateMetaContentValueQuotedAfterEncoding=function(c){if(c===Chars.EQUALS){this.state=State.MetaContentValueQuotedBeforeValue}else if(!SPACE_CHARACTERS.has(c)){this.state=State.MetaContentValueQuotedBeforeEncoding;this.stateMetaContentValueQuotedBeforeEncoding(c)}};Sniffer2.prototype.stateMetaContentValueQuotedBeforeValue=function(c){if(c===this.quoteCharacter){this.stateAttributeValueQuoted(c)}else if(isQuote(c)){this.state=State.MetaContentValueQuotedValueQuoted}else if(!SPACE_CHARACTERS.has(c)){this.state=State.MetaContentValueQuotedValueUnquoted;this.stateMetaContentValueQuotedValueUnquoted(c)}};Sniffer2.prototype.stateAttributeValueQuoted=function(c){if(c===this.quoteCharacter){this.handleAttributeValue();this.state=State.BeforeAttribute}else if(this.attribType===AttribType.Charset){this.attributeValue.push(c|32)}};Sniffer2.prototype.stateXMLDeclaration=function(c){if(this.advanceSection(exports.STRINGS.XML_DECLARATION,c)){if(this.sectionIndex===exports.STRINGS.XML_DECLARATION.length){this.sectionIndex=0;this.state=State.XMLDeclarationBeforeEncoding}}else{this.state=State.WeirdTag}};Sniffer2.prototype.stateXMLDeclarationBeforeEncoding=function(c){if(this.advanceSection(exports.STRINGS.ENCODING,c)){if(this.sectionIndex===exports.STRINGS.ENCODING.length){this.state=State.XMLDeclarationAfterEncoding}}else if(c===Chars.GT){this.state=State.BeforeTag}else{this.sectionIndex=Number(c===exports.STRINGS.ENCODING[0])}};Sniffer2.prototype.stateXMLDeclarationAfterEncoding=function(c){if(c===Chars.EQUALS){this.state=State.XMLDeclarationBeforeValue}else if(c>Chars.SPACE){this.state=State.WeirdTag;this.stateWeirdTag(c)}};Sniffer2.prototype.stateXMLDeclarationBeforeValue=function(c){if(isQuote(c)){this.attributeValue.length=0;this.state=State.XMLDeclarationValue}else if(c>Chars.SPACE){this.state=State.WeirdTag;this.stateWeirdTag(c)}};Sniffer2.prototype.stateXMLDeclarationValue=function(c){if(isQuote(c)){this.setResult(String.fromCharCode.apply(String,this.attributeValue),ResultType.XML_ENCODING);this.state=State.WeirdTag}else if(c===Chars.GT){this.state=State.BeforeTag}else if(c<=Chars.SPACE){this.state=State.WeirdTag}else{this.attributeValue.push(c|32)}};Sniffer2.prototype.write=function(buffer){var index=0;for(;index<buffer.length&&this.offset+index<this.maxBytes;index++){var c=buffer[index];switch(this.state){case State.Begin:{this.stateBegin(c);break}case State.BOM16BE:{this.stateBOM16BE(c);break}case State.BOM16LE:{this.stateBOM16LE(c);break}case State.BOM8:{this.stateBOM8(c);break}case State.UTF16LE_XML_PREFIX:{this.stateUTF16LE_XML_PREFIX(c);break}case State.BeginLT:{this.stateBeginLT(c);break}case State.UTF16BE_XML_PREFIX:{this.stateUTF16BE_XML_PREFIX(c);break}case State.BeforeTag:{var idx=buffer.indexOf(Chars.LT,index);if(idx<0){index=buffer.length}else{index=idx;this.stateBeforeTag(Chars.LT)}break}case State.BeforeTagName:{this.stateBeforeTagName(c);break}case State.BeforeCloseTagName:{this.stateBeforeCloseTagName(c);break}case State.CommentStart:{this.stateCommentStart(c);break}case State.CommentEnd:{this.stateCommentEnd(c);break}case State.TagNameMeta:{this.stateTagNameMeta(c);break}case State.TagNameOther:{this.stateTagNameOther(c);break}case State.XMLDeclaration:{this.stateXMLDeclaration(c);break}case State.XMLDeclarationBeforeEncoding:{this.stateXMLDeclarationBeforeEncoding(c);break}case State.XMLDeclarationAfterEncoding:{this.stateXMLDeclarationAfterEncoding(c);break}case State.XMLDeclarationBeforeValue:{this.stateXMLDeclarationBeforeValue(c);break}case State.XMLDeclarationValue:{this.stateXMLDeclarationValue(c);break}case State.WeirdTag:{this.stateWeirdTag(c);break}case State.BeforeAttribute:{this.stateBeforeAttribute(c);break}case State.MetaAttribHttpEquiv:{this.stateMetaAttribHttpEquiv(c);break}case State.MetaAttribHttpEquivValue:{this.stateMetaAttribHttpEquivValue(c);break}case State.MetaAttribC:{this.stateMetaAttribC(c);break}case State.MetaAttribContent:{this.stateMetaAttribContent(c);break}case State.MetaAttribCharset:{this.stateMetaAttribCharset(c);break}case State.MetaAttribAfterName:{this.stateMetaAttribAfterName(c);break}case State.MetaContentValueQuotedBeforeEncoding:{this.stateMetaContentValueQuotedBeforeEncoding(c);break}case State.MetaContentValueQuotedAfterEncoding:{this.stateMetaContentValueQuotedAfterEncoding(c);break}case State.MetaContentValueQuotedBeforeValue:{this.stateMetaContentValueQuotedBeforeValue(c);break}case State.MetaContentValueQuotedValueQuoted:{this.stateMetaContentValueQuotedValueQuoted(c);break}case State.MetaContentValueQuotedValueUnquoted:{this.stateMetaContentValueQuotedValueUnquoted(c);break}case State.MetaContentValueUnquotedBeforeEncoding:{this.stateMetaContentValueUnquotedBeforeEncoding(c);break}case State.MetaContentValueUnquotedBeforeValue:{this.stateMetaContentValueUnquotedBeforeValue(c);break}case State.MetaContentValueUnquotedValueQuoted:{this.stateMetaContentValueUnquotedValueQuoted(c);break}case State.MetaContentValueUnquotedValueUnquoted:{this.stateMetaContentValueUnquotedValueUnquoted(c);break}case State.AnyAttribName:{this.stateAnyAttribName(c);break}case State.AfterAttributeName:{this.stateAfterAttributeName(c);break}case State.BeforeAttributeValue:{this.stateBeforeAttributeValue(c);break}case State.AttributeValueQuoted:{this.stateAttributeValueQuoted(c);break}default:{this.stateAttributeValueUnquoted(c)}}}this.offset+=index};return Sniffer2}();exports.Sniffer=Sniffer;function getEncoding(buffer,options){var sniffer=new Sniffer(options);sniffer.write(buffer);return sniffer.encoding}__name(getEncoding,\"getEncoding\");exports.getEncoding=getEncoding;\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HACA,OAAO,eAAe,QAAS,aAAc,CAAE,MAAO,IAAK,CAAC,EAC5D,QAAQ,YAAc,QAAQ,QAAU,QAAQ,QAAU,QAAQ,WAAa,OAC/E,IAAI,kBAAoB,QAAQ,iBAAiB,EAEjD,IAAI,OACH,SAAUA,OAAO,CAEdA,OAAMA,OAAM,OAAO,EAAI,CAAC,EAAI,QAE5BA,OAAMA,OAAM,SAAS,EAAI,CAAC,EAAI,UAC9BA,OAAMA,OAAM,SAAS,EAAI,CAAC,EAAI,UAC9BA,OAAMA,OAAM,MAAM,EAAI,CAAC,EAAI,OAE3BA,OAAMA,OAAM,oBAAoB,EAAI,CAAC,EAAI,qBACzCA,OAAMA,OAAM,SAAS,EAAI,CAAC,EAAI,UAC9BA,OAAMA,OAAM,oBAAoB,EAAI,CAAC,EAAI,qBAEzCA,OAAMA,OAAM,WAAW,EAAI,CAAC,EAAI,YAEhCA,OAAMA,OAAM,eAAe,EAAI,CAAC,EAAI,gBAEpCA,OAAMA,OAAM,oBAAoB,EAAI,CAAC,EAAI,qBAEzCA,OAAMA,OAAM,cAAc,EAAI,EAAE,EAAI,eAEpCA,OAAMA,OAAM,YAAY,EAAI,EAAE,EAAI,aAElCA,OAAMA,OAAM,aAAa,EAAI,EAAE,EAAI,cAEnCA,OAAMA,OAAM,cAAc,EAAI,EAAE,EAAI,eAEpCA,OAAMA,OAAM,gBAAgB,EAAI,EAAE,EAAI,iBACtCA,OAAMA,OAAM,8BAA8B,EAAI,EAAE,EAAI,+BACpDA,OAAMA,OAAM,6BAA6B,EAAI,EAAE,EAAI,8BACnDA,OAAMA,OAAM,2BAA2B,EAAI,EAAE,EAAI,4BACjDA,OAAMA,OAAM,qBAAqB,EAAI,EAAE,EAAI,sBAE3CA,OAAMA,OAAM,UAAU,EAAI,EAAE,EAAI,WAChCA,OAAMA,OAAM,iBAAiB,EAAI,EAAE,EAAI,kBAKvCA,OAAMA,OAAM,qBAAqB,EAAI,EAAE,EAAI,sBAE3CA,OAAMA,OAAM,0BAA0B,EAAI,EAAE,EAAI,2BAChDA,OAAMA,OAAM,aAAa,EAAI,EAAE,EAAI,cACnCA,OAAMA,OAAM,mBAAmB,EAAI,EAAE,EAAI,oBACzCA,OAAMA,OAAM,mBAAmB,EAAI,EAAE,EAAI,oBAEzCA,OAAMA,OAAM,qBAAqB,EAAI,EAAE,EAAI,sBAC3CA,OAAMA,OAAM,sCAAsC,EAAI,EAAE,EAAI,uCAC5DA,OAAMA,OAAM,qCAAqC,EAAI,EAAE,EAAI,sCAC3DA,OAAMA,OAAM,mCAAmC,EAAI,EAAE,EAAI,oCACzDA,OAAMA,OAAM,mCAAmC,EAAI,EAAE,EAAI,oCACzDA,OAAMA,OAAM,qCAAqC,EAAI,EAAE,EAAI,sCAC3DA,OAAMA,OAAM,wCAAwC,EAAI,EAAE,EAAI,yCAC9DA,OAAMA,OAAM,qCAAqC,EAAI,EAAE,EAAI,sCAC3DA,OAAMA,OAAM,qCAAqC,EAAI,EAAE,EAAI,sCAC3DA,OAAMA,OAAM,uCAAuC,EAAI,EAAE,EAAI,wCAC7DA,OAAMA,OAAM,eAAe,EAAI,EAAE,EAAI,gBAErCA,OAAMA,OAAM,oBAAoB,EAAI,EAAE,EAAI,qBAE1CA,OAAMA,OAAM,sBAAsB,EAAI,EAAE,EAAI,uBAC5CA,OAAMA,OAAM,sBAAsB,EAAI,EAAE,EAAI,uBAC5CA,OAAMA,OAAM,wBAAwB,EAAI,EAAE,EAAI,wBAClD,GAAG,QAAU,MAAQ,CAAC,EAAE,EACxB,IAAI,YACH,SAAUC,YAAY,CAEnBA,YAAWA,YAAW,KAAK,EAAI,CAAC,EAAI,MAEpCA,YAAWA,YAAW,QAAQ,EAAI,CAAC,EAAI,SAEvCA,YAAWA,YAAW,YAAY,EAAI,CAAC,EAAI,aAE3CA,YAAWA,YAAW,UAAU,EAAI,CAAC,EAAI,WAEzCA,YAAWA,YAAW,cAAc,EAAI,CAAC,EAAI,eAE7CA,YAAWA,YAAW,SAAS,EAAI,CAAC,EAAI,SAC5C,GAAG,aAAe,QAAQ,WAAa,WAAa,CAAC,EAAE,EACvD,IAAI,YACH,SAAUC,YAAY,CACnBA,YAAWA,YAAW,MAAM,EAAI,CAAC,EAAI,OACrCA,YAAWA,YAAW,WAAW,EAAI,CAAC,EAAI,YAC1CA,YAAWA,YAAW,SAAS,EAAI,CAAC,EAAI,UACxCA,YAAWA,YAAW,SAAS,EAAI,CAAC,EAAI,SAC5C,GAAG,aAAe,WAAa,CAAC,EAAE,EAClC,IAAI,OACH,SAAUC,OAAO,CACdA,OAAMA,OAAM,KAAK,EAAI,CAAC,EAAI,MAC1BA,OAAMA,OAAM,KAAK,EAAI,CAAC,EAAI,MAC1BA,OAAMA,OAAM,IAAI,EAAI,EAAE,EAAI,KAC1BA,OAAMA,OAAM,IAAI,EAAI,EAAE,EAAI,KAC1BA,OAAMA,OAAM,OAAO,EAAI,EAAE,EAAI,QAC7BA,OAAMA,OAAM,aAAa,EAAI,EAAE,EAAI,cACnCA,OAAMA,OAAM,QAAQ,EAAI,EAAE,EAAI,SAC9BA,OAAMA,OAAM,QAAQ,EAAI,EAAE,EAAI,SAC9BA,OAAMA,OAAM,MAAM,EAAI,EAAE,EAAI,OAC5BA,OAAMA,OAAM,OAAO,EAAI,EAAE,EAAI,QAC7BA,OAAMA,OAAM,WAAW,EAAI,EAAE,EAAI,YACjCA,OAAMA,OAAM,IAAI,EAAI,EAAE,EAAI,KAC1BA,OAAMA,OAAM,QAAQ,EAAI,EAAE,EAAI,SAC9BA,OAAMA,OAAM,IAAI,EAAI,EAAE,EAAI,KAC1BA,OAAMA,OAAM,UAAU,EAAI,EAAE,EAAI,WAChCA,OAAMA,OAAM,QAAQ,EAAI,EAAE,EAAI,SAC9BA,OAAMA,OAAM,QAAQ,EAAI,EAAE,EAAI,SAC9BA,OAAMA,OAAM,QAAQ,EAAI,EAAE,EAAI,SAC9BA,OAAMA,OAAM,QAAQ,EAAI,GAAG,EAAI,QACnC,GAAG,QAAU,MAAQ,CAAC,EAAE,EACxB,IAAI,iBAAmB,IAAI,IAAI,CAAC,MAAM,MAAO,MAAM,GAAI,MAAM,GAAI,MAAM,GAAG,CAAC,EAC3E,IAAI,gCAAkC,IAAI,IAAI,CAC1C,MAAM,MACN,MAAM,GACN,MAAM,GACN,MAAM,IACN,MAAM,EACV,CAAC,EACD,SAAS,aAAa,IAAK,CACvB,IAAI,IAAM,IAAI,WAAW,IAAI,MAAM,EACnC,QAAS,EAAI,EAAG,EAAI,IAAI,OAAQ,IAAK,CACjC,IAAI,CAAC,EAAI,IAAI,WAAW,CAAC,CAC7B,CACA,OAAO,GACX,CANS,oCAOT,QAAQ,QAAU,CACd,SAAU,IAAI,WAAW,CAAC,IAAM,IAAM,GAAI,CAAC,EAC3C,YAAa,IAAI,WAAW,CAAC,IAAM,GAAI,CAAC,EACxC,YAAa,IAAI,WAAW,CAAC,IAAM,GAAI,CAAC,EACxC,mBAAoB,IAAI,WAAW,CAAC,GAAM,EAAK,GAAM,EAAK,IAAM,CAAG,CAAC,EACpE,mBAAoB,IAAI,WAAW,CAAC,EAAK,GAAM,EAAK,GAAM,EAAK,GAAI,CAAC,EACpE,gBAAiB,aAAa,OAAO,EACrC,SAAU,aAAa,UAAU,EACjC,KAAM,aAAa,MAAM,EACzB,WAAY,aAAa,YAAY,EACrC,QAAS,aAAa,SAAS,EAC/B,aAAc,aAAa,cAAc,EACzC,QAAS,aAAa,SAAS,EAC/B,cAAe,aAAa,MAAM,EAClC,YAAa,aAAa,KAAK,CACnC,EACA,SAAS,aAAa,EAAG,CACrB,OAAS,GAAK,MAAM,QAAU,GAAK,MAAM,QACpC,GAAK,MAAM,QAAU,GAAK,MAAM,MACzC,CAHS,oCAIT,SAAS,QAAQ,EAAG,CAChB,OAAO,IAAM,MAAM,QAAU,IAAM,MAAM,MAC7C,CAFS,0BAGT,IAAI,QAAyB,UAAY,CACrC,SAASC,SAAQ,GAAI,CACjB,IAAI,GAAK,KAAO,OAAS,CAAC,EAAI,GAAI,GAAK,GAAG,SAAU,SAAW,KAAO,OAAS,KAAO,GAAI,aAAe,GAAG,aAAc,4BAA8B,GAAG,4BAA6B,gBAAkB,GAAG,gBAE7M,KAAK,OAAS,EACd,KAAK,MAAQ,MAAM,MACnB,KAAK,aAAe,EACpB,KAAK,WAAa,WAAW,KAM7B,KAAK,UAAY,KACjB,KAAK,YAAc,KACnB,KAAK,UAAY,MACjB,KAAK,SAAW,eAChB,KAAK,WAAa,WAAW,QAC7B,KAAK,eAAiB,EACtB,KAAK,eAAiB,CAAC,EACvB,KAAK,SAAW,SAChB,GAAI,aAAc,CACd,KAAK,UAAU,aAAc,WAAW,MAAM,CAClD,CACA,GAAI,4BAA6B,CAC7B,KAAK,UAAU,4BAA6B,WAAW,MAAM,CACjE,CACA,GAAI,gBAAiB,CACjB,KAAK,UAAU,gBAAiB,WAAW,OAAO,CACtD,CACJ,CA7BS,OAAAA,SAAA,WA8BTA,SAAQ,UAAU,UAAY,SAAU,MAAO,KAAM,CACjD,GAAI,KAAK,aAAe,WAAW,SAAW,KAAK,WAAa,KAAM,CAClE,IAAI,UAAY,EAAG,kBAAkB,aAAa,KAAK,EACvD,GAAI,SAAU,CACV,KAAK,SAED,OAAS,WAAW,UAChB,WAAa,iBACX,gBAEG,OAAS,WAAW,UACjB,OAAS,WAAW,gBACnB,WAAa,YAAc,WAAa,YACvC,QACA,SAClB,KAAK,WAAa,IACtB,CACJ,CACJ,EACAA,SAAQ,UAAU,WAAa,SAAU,EAAG,CACxC,OAAQ,EAAG,CACP,KAAK,QAAQ,QAAQ,YAAY,CAAC,EAAG,CACjC,KAAK,MAAQ,MAAM,QACnB,KACJ,CACA,KAAK,QAAQ,QAAQ,YAAY,CAAC,EAAG,CACjC,KAAK,MAAQ,MAAM,QACnB,KACJ,CACA,KAAK,QAAQ,QAAQ,SAAS,CAAC,EAAG,CAC9B,KAAK,aAAe,EACpB,KAAK,MAAQ,MAAM,KACnB,KACJ,CACA,KAAK,MAAM,IAAK,CACZ,KAAK,MAAQ,MAAM,mBACnB,KAAK,aAAe,EACpB,KACJ,CACA,KAAK,MAAM,GAAI,CACX,KAAK,MAAQ,MAAM,QACnB,KACJ,CACA,QAAS,CACL,KAAK,MAAQ,MAAM,SACvB,CACJ,CACJ,EACAA,SAAQ,UAAU,aAAe,SAAU,EAAG,CAC1C,GAAI,IAAM,MAAM,IAAK,CACjB,KAAK,MAAQ,MAAM,mBACnB,KAAK,aAAe,CACxB,SACS,IAAM,MAAM,SAAU,CAC3B,KAAK,MAAQ,MAAM,eACnB,KAAK,aAAe,CACxB,KACK,CACD,KAAK,MAAQ,MAAM,cACnB,KAAK,mBAAmB,CAAC,CAC7B,CACJ,EACAA,SAAQ,UAAU,wBAA0B,SAAU,EAAG,CAErD,GAAI,KAAK,eAAe,QAAQ,QAAQ,mBAAoB,CAAC,EAAG,CAC5D,GAAI,KAAK,eAAiB,QAAQ,QAAQ,mBAAmB,OAAQ,CAEjE,KAAK,UAAU,WAAY,WAAW,UAAU,CACpD,CACJ,KACK,CACD,KAAK,MAAQ,MAAM,UACnB,KAAK,eAAe,CAAC,CACzB,CACJ,EACAA,SAAQ,UAAU,wBAA0B,SAAU,EAAG,CAErD,GAAI,KAAK,eAAe,QAAQ,QAAQ,mBAAoB,CAAC,EAAG,CAC5D,GAAI,KAAK,eAAiB,QAAQ,QAAQ,mBAAmB,OAAQ,CAEjE,KAAK,UAAU,WAAY,WAAW,UAAU,CACpD,CACJ,KACK,CACD,KAAK,MAAQ,MAAM,UACnB,KAAK,eAAe,CAAC,CACzB,CACJ,EACAA,SAAQ,UAAU,aAAe,SAAU,EAAG,CAC1C,GAAI,IAAM,QAAQ,QAAQ,YAAY,CAAC,EAAG,CACtC,KAAK,UAAU,WAAY,WAAW,GAAG,CAC7C,KACK,CACD,KAAK,MAAQ,MAAM,UACnB,KAAK,eAAe,CAAC,CACzB,CACJ,EACAA,SAAQ,UAAU,aAAe,SAAU,EAAG,CAC1C,GAAI,IAAM,QAAQ,QAAQ,YAAY,CAAC,EAAG,CACtC,KAAK,UAAU,WAAY,WAAW,GAAG,CAC7C,KACK,CACD,KAAK,MAAQ,MAAM,UACnB,KAAK,eAAe,CAAC,CACzB,CACJ,EACAA,SAAQ,UAAU,UAAY,SAAU,EAAG,CACvC,GAAI,KAAK,eAAe,QAAQ,QAAQ,SAAU,CAAC,GAC/C,KAAK,eAAiB,QAAQ,QAAQ,SAAS,OAAQ,CACvD,KAAK,UAAU,QAAS,WAAW,GAAG,CAC1C,CACJ,EACAA,SAAQ,UAAU,eAAiB,SAAU,EAAG,CAC5C,GAAI,IAAM,MAAM,GAAI,CAChB,KAAK,MAAQ,MAAM,cACnB,KAAK,UAAY,KACrB,CACJ,EAYAA,SAAQ,UAAU,mBAAqB,SAAU,EAAG,CAChD,GAAI,aAAa,CAAC,EAAG,CACjB,IAAK,EAAI,MAAU,QAAQ,QAAQ,KAAK,CAAC,EAAG,CACxC,KAAK,aAAe,EACpB,KAAK,MAAQ,MAAM,WACvB,KACK,CACD,KAAK,MAAQ,MAAM,YACvB,CACJ,KAEI,QAAQ,EAAG,CACP,KAAK,MAAM,MAAO,CACd,KAAK,MAAQ,MAAM,mBACnB,KACJ,CACA,KAAK,MAAM,YAAa,CACpB,KAAK,MAAQ,MAAM,aACnB,KAAK,aAAe,EACpB,KACJ,CACA,KAAK,MAAM,SAAU,CACjB,KAAK,MAAQ,MAAM,SACnB,KACJ,CACA,QAAS,CACL,KAAK,MAAQ,MAAM,UACnB,KAAK,eAAe,CAAC,CACzB,CACJ,CACR,EACAA,SAAQ,UAAU,wBAA0B,SAAU,EAAG,CACrD,KAAK,MAAQ,aAAa,CAAC,EAEnB,MAAM,aACR,MAAM,QAChB,EACAA,SAAQ,UAAU,kBAAoB,SAAU,EAAG,CAC/C,GAAI,KAAK,eAAe,QAAQ,QAAQ,cAAe,CAAC,EAAG,CACvD,GAAI,KAAK,eAAiB,QAAQ,QAAQ,cAAc,OAAQ,CAC5D,KAAK,MAAQ,MAAM,WAEnB,KAAK,aAAe,CACxB,CACJ,KACK,CACD,KAAK,MAAQ,MAAM,SACnB,KAAK,cAAc,CAAC,CACxB,CACJ,EACAA,SAAQ,UAAU,gBAAkB,SAAU,EAAG,CAC7C,GAAI,KAAK,eAAe,QAAQ,QAAQ,YAAa,CAAC,EAAG,CACrD,GAAI,KAAK,eAAiB,QAAQ,QAAQ,YAAY,OAAQ,CAC1D,KAAK,MAAQ,MAAM,SACvB,CACJ,SACS,IAAM,MAAM,KAAM,CAKvB,KAAK,aAAe,CACxB,CACJ,EAIAA,SAAQ,UAAU,cAAgB,SAAU,EAAG,CAC3C,GAAI,IAAM,MAAM,GAAI,CAChB,KAAK,MAAQ,MAAM,SACvB,CACJ,EAQAA,SAAQ,UAAU,iBAAmB,SAAU,QAAS,EAAG,CACvD,OAAO,KAAK,eAAe,QAAS,EAAI,EAAI,CAChD,EAQAA,SAAQ,UAAU,eAAiB,SAAU,QAAS,EAAG,CACrD,GAAI,QAAQ,KAAK,YAAY,IAAM,EAAG,CAClC,KAAK,eACL,MAAO,KACX,CACA,KAAK,aAAe,EACpB,MAAO,MACX,EACAA,SAAQ,UAAU,iBAAmB,SAAU,EAAG,CAC9C,GAAI,KAAK,aAAe,QAAQ,QAAQ,KAAK,OAAQ,CACjD,GAAI,KAAK,iBAAiB,QAAQ,QAAQ,KAAM,CAAC,EAAG,CAChD,MACJ,CACJ,SACS,iBAAiB,IAAI,CAAC,EAAG,CAC9B,KAAK,UAAY,KACjB,KAAK,UAAY,KACjB,KAAK,YAAc,KACnB,KAAK,MAAQ,MAAM,gBACnB,MACJ,CACA,KAAK,MAAQ,MAAM,aAEnB,KAAK,kBAAkB,CAAC,CAC5B,EACAA,SAAQ,UAAU,kBAAoB,SAAU,EAAG,CAC/C,GAAI,iBAAiB,IAAI,CAAC,EAAG,CACzB,KAAK,MAAQ,MAAM,eACvB,SACS,IAAM,MAAM,GAAI,CACrB,KAAK,MAAQ,MAAM,SACvB,CACJ,EACAA,SAAQ,UAAU,qBAAuB,SAAU,EAAG,CAClD,GAAI,iBAAiB,IAAI,CAAC,EACtB,OACJ,GAAI,KAAK,UAAW,CAChB,IAAI,MAAQ,EAAI,GAChB,GAAI,QAAU,QAAQ,QAAQ,WAAW,CAAC,EAAG,CACzC,KAAK,aAAe,EACpB,KAAK,MAAQ,MAAM,oBACnB,MACJ,SACS,QAAU,QAAQ,QAAQ,QAAQ,CAAC,EAAG,CAC3C,KAAK,aAAe,EACpB,KAAK,MAAQ,MAAM,YACnB,MACJ,CACJ,CACA,KAAK,MACD,IAAM,MAAM,OAAS,IAAM,MAAM,GAC3B,MAAM,UACN,MAAM,aACpB,EACAA,SAAQ,UAAU,iBAAmB,SAAU,EAAG,QAAS,KAAM,CAC7D,GAAI,KAAK,iBAAiB,QAAS,CAAC,EAAG,CACnC,GAAI,KAAK,eAAiB,QAAQ,OAAQ,CACtC,KAAK,WAAa,KAClB,KAAK,MAAQ,MAAM,mBACvB,CACJ,KACK,CACD,KAAK,MAAQ,MAAM,cACnB,KAAK,mBAAmB,CAAC,CAC7B,CACJ,EACAA,SAAQ,UAAU,yBAA2B,SAAU,EAAG,CACtD,KAAK,iBAAiB,EAAG,QAAQ,QAAQ,WAAY,WAAW,SAAS,CAC7E,EACAA,SAAQ,UAAU,iBAAmB,SAAU,EAAG,CAC9C,IAAI,MAAQ,EAAI,GAChB,GAAI,QAAU,QAAQ,QAAQ,QAAQ,CAAC,EAAG,CACtC,KAAK,aAAe,EACpB,KAAK,MAAQ,MAAM,iBACvB,SACS,QAAU,QAAQ,QAAQ,QAAQ,CAAC,EAAG,CAC3C,KAAK,aAAe,EACpB,KAAK,MAAQ,MAAM,iBACvB,KACK,CACD,KAAK,MAAQ,MAAM,cACnB,KAAK,mBAAmB,CAAC,CAC7B,CACJ,EACAA,SAAQ,UAAU,uBAAyB,SAAU,EAAG,CACpD,KAAK,iBAAiB,EAAG,QAAQ,QAAQ,QAAS,WAAW,OAAO,CACxE,EACAA,SAAQ,UAAU,uBAAyB,SAAU,EAAG,CACpD,KAAK,iBAAiB,EAAG,QAAQ,QAAQ,QAAS,WAAW,OAAO,CACxE,EACAA,SAAQ,UAAU,yBAA2B,SAAU,EAAG,CACtD,GAAI,iBAAiB,IAAI,CAAC,GAAK,IAAM,MAAM,OAAQ,CAC/C,KAAK,MAAQ,MAAM,mBACnB,KAAK,wBAAwB,CAAC,CAClC,KACK,CACD,KAAK,MAAQ,MAAM,cACnB,KAAK,mBAAmB,CAAC,CAC7B,CACJ,EACAA,SAAQ,UAAU,mBAAqB,SAAU,EAAG,CAChD,GAAI,iBAAiB,IAAI,CAAC,EAAG,CACzB,KAAK,WAAa,WAAW,KAC7B,KAAK,MAAQ,MAAM,kBACvB,SACS,IAAM,MAAM,OAAS,IAAM,MAAM,GAAI,CAC1C,KAAK,MAAQ,MAAM,SACvB,SACS,IAAM,MAAM,OAAQ,CACzB,KAAK,MAAQ,MAAM,oBACvB,CACJ,EACAA,SAAQ,UAAU,wBAA0B,SAAU,EAAG,CACrD,GAAI,iBAAiB,IAAI,CAAC,EACtB,OACJ,GAAI,IAAM,MAAM,OAAQ,CACpB,KAAK,MAAQ,MAAM,oBACvB,KACK,CACD,KAAK,MAAQ,MAAM,gBACnB,KAAK,qBAAqB,CAAC,CAC/B,CACJ,EACAA,SAAQ,UAAU,0BAA4B,SAAU,EAAG,CACvD,GAAI,iBAAiB,IAAI,CAAC,EACtB,OACJ,KAAK,eAAe,OAAS,EAC7B,KAAK,aAAe,EACpB,GAAI,QAAQ,CAAC,EAAG,CACZ,KAAK,eAAiB,EACtB,KAAK,MACD,KAAK,aAAe,WAAW,QACzB,MAAM,qCACN,KAAK,aAAe,WAAW,UAC3B,MAAM,yBACN,MAAM,oBACxB,SACS,KAAK,aAAe,WAAW,QAAS,CAC7C,KAAK,MAAQ,MAAM,uCACnB,KAAK,4CAA4C,CAAC,CACtD,SACS,KAAK,aAAe,WAAW,UAAW,CAE/C,KAAK,eAAiB,EACtB,KAAK,aAAe,EACpB,KAAK,MAAQ,MAAM,yBACnB,KAAK,8BAA8B,CAAC,CACxC,KACK,CACD,KAAK,MAAQ,MAAM,uBACnB,KAAK,4BAA4B,CAAC,CACtC,CACJ,EAEAA,SAAQ,UAAU,8BAAgC,SAAU,EAAG,CAC3D,GAAI,KAAK,eAAiB,QAAQ,QAAQ,aAAa,OAAQ,CAC3D,GAAI,KAAK,iBAAmB,EACtB,gCAAgC,IAAI,CAAC,EACrC,IAAM,KAAK,eAAgB,CAC7B,GAAI,KAAK,cAAgB,KAAM,CAC3B,KAAK,UAAU,KAAK,YAAa,WAAW,QAAQ,CACxD,SACS,KAAK,YAAc,KAAM,CAC9B,KAAK,UAAY,IACrB,CACA,KAAK,MAAQ,MAAM,gBACnB,MACJ,CACJ,SACS,KAAK,iBAAiB,QAAQ,QAAQ,aAAc,CAAC,EAAG,CAC7D,MACJ,CACA,KAAK,UAAY,MACjB,GAAI,KAAK,iBAAmB,EAAG,CAC3B,KAAK,MAAQ,MAAM,uBACnB,KAAK,4BAA4B,CAAC,CACtC,KACK,CACD,KAAK,MAAQ,MAAM,qBACnB,KAAK,0BAA0B,CAAC,CACpC,CACJ,EACAA,SAAQ,UAAU,uBAAyB,UAAY,CACnD,GAAI,KAAK,eAAe,SAAW,EAC/B,OACJ,IAAI,SAAW,OAAO,aAAa,MAAM,OAAQ,KAAK,cAAc,EACpE,GAAI,KAAK,UAAW,CAChB,KAAK,UAAU,SAAU,WAAW,QAAQ,CAChD,SACS,KAAK,cAAgB,KAAM,CAEhC,KAAK,YAAc,QACvB,CACA,KAAK,eAAe,OAAS,CACjC,EACAA,SAAQ,UAAU,qBAAuB,UAAY,CACjD,GAAI,KAAK,aAAe,WAAW,QAAS,CACxC,KAAK,UAAU,OAAO,aAAa,MAAM,OAAQ,KAAK,cAAc,EAAG,WAAW,QAAQ,CAC9F,CACJ,EACAA,SAAQ,UAAU,4BAA8B,SAAU,EAAG,CACzD,GAAI,iBAAiB,IAAI,CAAC,EAAG,CACzB,KAAK,qBAAqB,EAC1B,KAAK,MAAQ,MAAM,eACvB,SACS,IAAM,MAAM,OAAS,IAAM,MAAM,GAAI,CAC1C,KAAK,qBAAqB,EAC1B,KAAK,MAAQ,MAAM,SACvB,SACS,KAAK,aAAe,WAAW,QAAS,CAC7C,KAAK,eAAe,KAAK,EAAI,EAAI,CACrC,CACJ,EACAA,SAAQ,UAAU,wBAA0B,SAAU,EAAG,CACrD,GAAI,KAAK,iBAAiB,QAAQ,QAAQ,QAAS,CAAC,EAAG,CACnD,GAAI,KAAK,eAAiB,QAAQ,QAAQ,QAAQ,OAAQ,CACtD,MAAO,KACX,CACJ,KACK,CAED,KAAK,aAAe,OAAO,IAAM,QAAQ,QAAQ,QAAQ,CAAC,CAAC,CAC/D,CACA,MAAO,MACX,EACAA,SAAQ,UAAU,4CAA8C,SAAU,EAAG,CACzE,GAAI,gCAAgC,IAAI,CAAC,EAAG,CACxC,KAAK,4BAA4B,CAAC,CACtC,SACS,KAAK,eAAiB,QAAQ,QAAQ,QAAQ,OAAQ,CAC3D,GAAI,IAAM,MAAM,OAAQ,CACpB,KAAK,MAAQ,MAAM,mCACvB,CACJ,KACK,CACD,KAAK,wBAAwB,CAAC,CAClC,CACJ,EACAA,SAAQ,UAAU,yCAA2C,SAAU,EAAG,CACtE,GAAI,QAAQ,CAAC,EAAG,CACZ,KAAK,eAAiB,EACtB,KAAK,MAAQ,MAAM,mCACvB,SACS,gCAAgC,IAAI,CAAC,EAAG,CAE7C,KAAK,4BAA4B,CAAC,CACtC,KACK,CACD,KAAK,MAAQ,MAAM,sCACnB,KAAK,2CAA2C,CAAC,CACrD,CACJ,EACAA,SAAQ,UAAU,yCAA2C,SAAU,EAAG,CACtE,GAAI,gCAAgC,IAAI,CAAC,EAAG,CAExC,KAAK,4BAA4B,CAAC,CACtC,SACS,IAAM,KAAK,eAAgB,CAChC,KAAK,uBAAuB,EAC5B,KAAK,MAAQ,MAAM,sBACvB,KACK,CACD,KAAK,eAAe,KAAK,EAAI,EAAI,CACrC,CACJ,EACAA,SAAQ,UAAU,2CAA6C,SAAU,EAAG,CACxE,GAAI,gCAAgC,IAAI,CAAC,GAAK,IAAM,MAAM,UAAW,CACjE,KAAK,uBAAuB,EAC5B,KAAK,MAAQ,MAAM,uBACnB,KAAK,4BAA4B,CAAC,CACtC,KACK,CACD,KAAK,eAAe,KAAK,EAAI,EAAI,CACrC,CACJ,EACAA,SAAQ,UAAU,yCAA2C,SAAU,EAAG,CACtE,GAAI,QAAQ,CAAC,GAAK,iBAAiB,IAAI,CAAC,GAAK,IAAM,MAAM,UAAW,CAChE,KAAK,uBAAuB,EAE5B,KAAK,MAAQ,MAAM,qBACnB,KAAK,0BAA0B,CAAC,CACpC,KACK,CACD,KAAK,eAAe,KAAK,EAAI,EAAI,CACrC,CACJ,EACAA,SAAQ,UAAU,uCAAyC,SAAU,EAAG,CACpE,GAAI,QAAQ,CAAC,EAAG,CAEZ,GAAI,IAAM,KAAK,eAAgB,CAE3B,KAAK,uBAAuB,CAChC,CACA,KAAK,MAAQ,MAAM,qBACnB,KAAK,0BAA0B,CAAC,CACpC,KACK,CACD,KAAK,eAAe,KAAK,EAAI,EAAI,CACrC,CACJ,EACAA,SAAQ,UAAU,0CAA4C,SAAU,EAAG,CACvE,GAAI,IAAM,KAAK,eAAgB,CAC3B,KAAK,0BAA0B,CAAC,CACpC,SACS,KAAK,wBAAwB,CAAC,EAAG,CACtC,KAAK,MAAQ,MAAM,mCACvB,CACJ,EACAA,SAAQ,UAAU,yCAA2C,SAAU,EAAG,CACtE,GAAI,IAAM,MAAM,OAAQ,CACpB,KAAK,MAAQ,MAAM,iCACvB,SACS,CAAC,iBAAiB,IAAI,CAAC,EAAG,CAE/B,KAAK,MAAQ,MAAM,qCACnB,KAAK,0CAA0C,CAAC,CACpD,CACJ,EACAA,SAAQ,UAAU,uCAAyC,SAAU,EAAG,CACpE,GAAI,IAAM,KAAK,eAAgB,CAC3B,KAAK,0BAA0B,CAAC,CACpC,SACS,QAAQ,CAAC,EAAG,CACjB,KAAK,MAAQ,MAAM,iCACvB,SACS,CAAC,iBAAiB,IAAI,CAAC,EAAG,CAC/B,KAAK,MAAQ,MAAM,oCACnB,KAAK,yCAAyC,CAAC,CACnD,CACJ,EACAA,SAAQ,UAAU,0BAA4B,SAAU,EAAG,CACvD,GAAI,IAAM,KAAK,eAAgB,CAC3B,KAAK,qBAAqB,EAC1B,KAAK,MAAQ,MAAM,eACvB,SACS,KAAK,aAAe,WAAW,QAAS,CAC7C,KAAK,eAAe,KAAK,EAAI,EAAI,CACrC,CACJ,EAEAA,SAAQ,UAAU,oBAAsB,SAAU,EAAG,CACjD,GAAI,KAAK,eAAe,QAAQ,QAAQ,gBAAiB,CAAC,EAAG,CACzD,GAAI,KAAK,eAAiB,QAAQ,QAAQ,gBAAgB,OAAQ,CAC9D,KAAK,aAAe,EACpB,KAAK,MAAQ,MAAM,4BACvB,CACJ,KACK,CACD,KAAK,MAAQ,MAAM,QACvB,CACJ,EACAA,SAAQ,UAAU,kCAAoC,SAAU,EAAG,CAC/D,GAAI,KAAK,eAAe,QAAQ,QAAQ,SAAU,CAAC,EAAG,CAClD,GAAI,KAAK,eAAiB,QAAQ,QAAQ,SAAS,OAAQ,CACvD,KAAK,MAAQ,MAAM,2BACvB,CACJ,SACS,IAAM,MAAM,GAAI,CACrB,KAAK,MAAQ,MAAM,SACvB,KACK,CAED,KAAK,aAAe,OAAO,IAAM,QAAQ,QAAQ,SAAS,CAAC,CAAC,CAChE,CACJ,EACAA,SAAQ,UAAU,iCAAmC,SAAU,EAAG,CAC9D,GAAI,IAAM,MAAM,OAAQ,CACpB,KAAK,MAAQ,MAAM,yBACvB,SACS,EAAI,MAAM,MAAO,CACtB,KAAK,MAAQ,MAAM,SACnB,KAAK,cAAc,CAAC,CACxB,CACJ,EACAA,SAAQ,UAAU,+BAAiC,SAAU,EAAG,CAC5D,GAAI,QAAQ,CAAC,EAAG,CACZ,KAAK,eAAe,OAAS,EAC7B,KAAK,MAAQ,MAAM,mBACvB,SACS,EAAI,MAAM,MAAO,CACtB,KAAK,MAAQ,MAAM,SACnB,KAAK,cAAc,CAAC,CACxB,CACJ,EACAA,SAAQ,UAAU,yBAA2B,SAAU,EAAG,CACtD,GAAI,QAAQ,CAAC,EAAG,CACZ,KAAK,UAAU,OAAO,aAAa,MAAM,OAAQ,KAAK,cAAc,EAAG,WAAW,YAAY,EAC9F,KAAK,MAAQ,MAAM,QACvB,SACS,IAAM,MAAM,GAAI,CACrB,KAAK,MAAQ,MAAM,SACvB,SACS,GAAK,MAAM,MAAO,CACvB,KAAK,MAAQ,MAAM,QACvB,KACK,CACD,KAAK,eAAe,KAAK,EAAI,EAAI,CACrC,CACJ,EACAA,SAAQ,UAAU,MAAQ,SAAU,OAAQ,CACxC,IAAI,MAAQ,EACZ,KAAO,MAAQ,OAAO,QAAU,KAAK,OAAS,MAAQ,KAAK,SAAU,QAAS,CAC1E,IAAI,EAAI,OAAO,KAAK,EACpB,OAAQ,KAAK,MAAO,CAChB,KAAK,MAAM,MAAO,CACd,KAAK,WAAW,CAAC,EACjB,KACJ,CACA,KAAK,MAAM,QAAS,CAChB,KAAK,aAAa,CAAC,EACnB,KACJ,CACA,KAAK,MAAM,QAAS,CAChB,KAAK,aAAa,CAAC,EACnB,KACJ,CACA,KAAK,MAAM,KAAM,CACb,KAAK,UAAU,CAAC,EAChB,KACJ,CACA,KAAK,MAAM,mBAAoB,CAC3B,KAAK,wBAAwB,CAAC,EAC9B,KACJ,CACA,KAAK,MAAM,QAAS,CAChB,KAAK,aAAa,CAAC,EACnB,KACJ,CACA,KAAK,MAAM,mBAAoB,CAC3B,KAAK,wBAAwB,CAAC,EAC9B,KACJ,CACA,KAAK,MAAM,UAAW,CAElB,IAAI,IAAM,OAAO,QAAQ,MAAM,GAAI,KAAK,EACxC,GAAI,IAAM,EAAG,CAET,MAAQ,OAAO,MACnB,KACK,CACD,MAAQ,IACR,KAAK,eAAe,MAAM,EAAE,CAChC,CACA,KACJ,CACA,KAAK,MAAM,cAAe,CACtB,KAAK,mBAAmB,CAAC,EACzB,KACJ,CACA,KAAK,MAAM,mBAAoB,CAC3B,KAAK,wBAAwB,CAAC,EAC9B,KACJ,CACA,KAAK,MAAM,aAAc,CACrB,KAAK,kBAAkB,CAAC,EACxB,KACJ,CACA,KAAK,MAAM,WAAY,CACnB,KAAK,gBAAgB,CAAC,EACtB,KACJ,CACA,KAAK,MAAM,YAAa,CACpB,KAAK,iBAAiB,CAAC,EACvB,KACJ,CACA,KAAK,MAAM,aAAc,CACrB,KAAK,kBAAkB,CAAC,EACxB,KACJ,CACA,KAAK,MAAM,eAAgB,CACvB,KAAK,oBAAoB,CAAC,EAC1B,KACJ,CACA,KAAK,MAAM,6BAA8B,CACrC,KAAK,kCAAkC,CAAC,EACxC,KACJ,CACA,KAAK,MAAM,4BAA6B,CACpC,KAAK,iCAAiC,CAAC,EACvC,KACJ,CACA,KAAK,MAAM,0BAA2B,CAClC,KAAK,+BAA+B,CAAC,EACrC,KACJ,CACA,KAAK,MAAM,oBAAqB,CAC5B,KAAK,yBAAyB,CAAC,EAC/B,KACJ,CACA,KAAK,MAAM,SAAU,CACjB,KAAK,cAAc,CAAC,EACpB,KACJ,CACA,KAAK,MAAM,gBAAiB,CACxB,KAAK,qBAAqB,CAAC,EAC3B,KACJ,CACA,KAAK,MAAM,oBAAqB,CAC5B,KAAK,yBAAyB,CAAC,EAC/B,KACJ,CACA,KAAK,MAAM,yBAA0B,CACjC,KAAK,8BAA8B,CAAC,EACpC,KACJ,CACA,KAAK,MAAM,YAAa,CACpB,KAAK,iBAAiB,CAAC,EACvB,KACJ,CACA,KAAK,MAAM,kBAAmB,CAC1B,KAAK,uBAAuB,CAAC,EAC7B,KACJ,CACA,KAAK,MAAM,kBAAmB,CAC1B,KAAK,uBAAuB,CAAC,EAC7B,KACJ,CACA,KAAK,MAAM,oBAAqB,CAC5B,KAAK,yBAAyB,CAAC,EAC/B,KACJ,CACA,KAAK,MAAM,qCAAsC,CAC7C,KAAK,0CAA0C,CAAC,EAChD,KACJ,CACA,KAAK,MAAM,oCAAqC,CAC5C,KAAK,yCAAyC,CAAC,EAC/C,KACJ,CACA,KAAK,MAAM,kCAAmC,CAC1C,KAAK,uCAAuC,CAAC,EAC7C,KACJ,CACA,KAAK,MAAM,kCAAmC,CAC1C,KAAK,uCAAuC,CAAC,EAC7C,KACJ,CACA,KAAK,MAAM,oCAAqC,CAC5C,KAAK,yCAAyC,CAAC,EAC/C,KACJ,CACA,KAAK,MAAM,uCAAwC,CAC/C,KAAK,4CAA4C,CAAC,EAClD,KACJ,CACA,KAAK,MAAM,oCAAqC,CAC5C,KAAK,yCAAyC,CAAC,EAC/C,KACJ,CACA,KAAK,MAAM,oCAAqC,CAC5C,KAAK,yCAAyC,CAAC,EAC/C,KACJ,CACA,KAAK,MAAM,sCAAuC,CAC9C,KAAK,2CAA2C,CAAC,EACjD,KACJ,CACA,KAAK,MAAM,cAAe,CACtB,KAAK,mBAAmB,CAAC,EACzB,KACJ,CACA,KAAK,MAAM,mBAAoB,CAC3B,KAAK,wBAAwB,CAAC,EAC9B,KACJ,CACA,KAAK,MAAM,qBAAsB,CAC7B,KAAK,0BAA0B,CAAC,EAChC,KACJ,CACA,KAAK,MAAM,qBAAsB,CAC7B,KAAK,0BAA0B,CAAC,EAChC,KACJ,CACA,QAAS,CAEL,KAAK,4BAA4B,CAAC,CACtC,CACJ,CACJ,CACA,KAAK,QAAU,KACnB,EACA,OAAOA,QACX,EAAE,EACF,QAAQ,QAAU,QAElB,SAAS,YAAY,OAAQ,QAAS,CAClC,IAAI,QAAU,IAAI,QAAQ,OAAO,EACjC,QAAQ,MAAM,MAAM,EACpB,OAAO,QAAQ,QACnB,CAJS,kCAKT,QAAQ,YAAc","names":["State","ResultType","AttribType","Chars","Sniffer"],"sources":["/home/creditga/CofiCarte/node_modules/.pnpm/encoding-sniffer@0.2.0/node_modules/encoding-sniffer/dist/commonjs/sniffer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEncoding = exports.Sniffer = exports.STRINGS = exports.ResultType = void 0;\nvar whatwg_encoding_1 = require(\"whatwg-encoding\");\n// https://html.spec.whatwg.org/multipage/syntax.html#prescan-a-byte-stream-to-determine-its-encoding\nvar State;\n(function (State) {\n    // Before anything starts; can be any of BOM, UTF-16 XML declarations or meta tags\n    State[State[\"Begin\"] = 0] = \"Begin\";\n    // Inside of a BOM\n    State[State[\"BOM16BE\"] = 1] = \"BOM16BE\";\n    State[State[\"BOM16LE\"] = 2] = \"BOM16LE\";\n    State[State[\"BOM8\"] = 3] = \"BOM8\";\n    // XML prefix\n    State[State[\"UTF16LE_XML_PREFIX\"] = 4] = \"UTF16LE_XML_PREFIX\";\n    State[State[\"BeginLT\"] = 5] = \"BeginLT\";\n    State[State[\"UTF16BE_XML_PREFIX\"] = 6] = \"UTF16BE_XML_PREFIX\";\n    // Waiting for opening `<`\n    State[State[\"BeforeTag\"] = 7] = \"BeforeTag\";\n    // After the opening `<`\n    State[State[\"BeforeTagName\"] = 8] = \"BeforeTagName\";\n    // After `</`\n    State[State[\"BeforeCloseTagName\"] = 9] = \"BeforeCloseTagName\";\n    // Beginning of a comment\n    State[State[\"CommentStart\"] = 10] = \"CommentStart\";\n    // End of a comment\n    State[State[\"CommentEnd\"] = 11] = \"CommentEnd\";\n    // A tag name that could be `meta`\n    State[State[\"TagNameMeta\"] = 12] = \"TagNameMeta\";\n    // A tag name that is not `meta`\n    State[State[\"TagNameOther\"] = 13] = \"TagNameOther\";\n    // XML declaration\n    State[State[\"XMLDeclaration\"] = 14] = \"XMLDeclaration\";\n    State[State[\"XMLDeclarationBeforeEncoding\"] = 15] = \"XMLDeclarationBeforeEncoding\";\n    State[State[\"XMLDeclarationAfterEncoding\"] = 16] = \"XMLDeclarationAfterEncoding\";\n    State[State[\"XMLDeclarationBeforeValue\"] = 17] = \"XMLDeclarationBeforeValue\";\n    State[State[\"XMLDeclarationValue\"] = 18] = \"XMLDeclarationValue\";\n    // Anything that looks like a tag, but doesn't fit in the above categories\n    State[State[\"WeirdTag\"] = 19] = \"WeirdTag\";\n    State[State[\"BeforeAttribute\"] = 20] = \"BeforeAttribute\";\n    /*\n     * Attributes in meta tag — we compare them to our set here, and back out\n     * We care about four attributes: http-equiv, content-type, content, charset\n     */\n    State[State[\"MetaAttribHttpEquiv\"] = 21] = \"MetaAttribHttpEquiv\";\n    // The value has to be `content-type`\n    State[State[\"MetaAttribHttpEquivValue\"] = 22] = \"MetaAttribHttpEquivValue\";\n    State[State[\"MetaAttribC\"] = 23] = \"MetaAttribC\";\n    State[State[\"MetaAttribContent\"] = 24] = \"MetaAttribContent\";\n    State[State[\"MetaAttribCharset\"] = 25] = \"MetaAttribCharset\";\n    // Waiting for whitespace\n    State[State[\"MetaAttribAfterName\"] = 26] = \"MetaAttribAfterName\";\n    State[State[\"MetaContentValueQuotedBeforeEncoding\"] = 27] = \"MetaContentValueQuotedBeforeEncoding\";\n    State[State[\"MetaContentValueQuotedAfterEncoding\"] = 28] = \"MetaContentValueQuotedAfterEncoding\";\n    State[State[\"MetaContentValueQuotedBeforeValue\"] = 29] = \"MetaContentValueQuotedBeforeValue\";\n    State[State[\"MetaContentValueQuotedValueQuoted\"] = 30] = \"MetaContentValueQuotedValueQuoted\";\n    State[State[\"MetaContentValueQuotedValueUnquoted\"] = 31] = \"MetaContentValueQuotedValueUnquoted\";\n    State[State[\"MetaContentValueUnquotedBeforeEncoding\"] = 32] = \"MetaContentValueUnquotedBeforeEncoding\";\n    State[State[\"MetaContentValueUnquotedBeforeValue\"] = 33] = \"MetaContentValueUnquotedBeforeValue\";\n    State[State[\"MetaContentValueUnquotedValueQuoted\"] = 34] = \"MetaContentValueUnquotedValueQuoted\";\n    State[State[\"MetaContentValueUnquotedValueUnquoted\"] = 35] = \"MetaContentValueUnquotedValueUnquoted\";\n    State[State[\"AnyAttribName\"] = 36] = \"AnyAttribName\";\n    // After the name of an attribute, before the equals sign\n    State[State[\"AfterAttributeName\"] = 37] = \"AfterAttributeName\";\n    // After `=`\n    State[State[\"BeforeAttributeValue\"] = 38] = \"BeforeAttributeValue\";\n    State[State[\"AttributeValueQuoted\"] = 39] = \"AttributeValueQuoted\";\n    State[State[\"AttributeValueUnquoted\"] = 40] = \"AttributeValueUnquoted\";\n})(State || (State = {}));\nvar ResultType;\n(function (ResultType) {\n    // Byte order mark\n    ResultType[ResultType[\"BOM\"] = 0] = \"BOM\";\n    // User- or transport layer-defined\n    ResultType[ResultType[\"PASSED\"] = 1] = \"PASSED\";\n    // XML prefixes\n    ResultType[ResultType[\"XML_PREFIX\"] = 2] = \"XML_PREFIX\";\n    // Meta tag\n    ResultType[ResultType[\"META_TAG\"] = 3] = \"META_TAG\";\n    // XML encoding\n    ResultType[ResultType[\"XML_ENCODING\"] = 4] = \"XML_ENCODING\";\n    // Default\n    ResultType[ResultType[\"DEFAULT\"] = 5] = \"DEFAULT\";\n})(ResultType || (exports.ResultType = ResultType = {}));\nvar AttribType;\n(function (AttribType) {\n    AttribType[AttribType[\"None\"] = 0] = \"None\";\n    AttribType[AttribType[\"HttpEquiv\"] = 1] = \"HttpEquiv\";\n    AttribType[AttribType[\"Content\"] = 2] = \"Content\";\n    AttribType[AttribType[\"Charset\"] = 3] = \"Charset\";\n})(AttribType || (AttribType = {}));\nvar Chars;\n(function (Chars) {\n    Chars[Chars[\"NIL\"] = 0] = \"NIL\";\n    Chars[Chars[\"TAB\"] = 9] = \"TAB\";\n    Chars[Chars[\"LF\"] = 10] = \"LF\";\n    Chars[Chars[\"CR\"] = 13] = \"CR\";\n    Chars[Chars[\"SPACE\"] = 32] = \"SPACE\";\n    Chars[Chars[\"EXCLAMATION\"] = 33] = \"EXCLAMATION\";\n    Chars[Chars[\"DQUOTE\"] = 34] = \"DQUOTE\";\n    Chars[Chars[\"SQUOTE\"] = 39] = \"SQUOTE\";\n    Chars[Chars[\"DASH\"] = 45] = \"DASH\";\n    Chars[Chars[\"SLASH\"] = 47] = \"SLASH\";\n    Chars[Chars[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    Chars[Chars[\"LT\"] = 60] = \"LT\";\n    Chars[Chars[\"EQUALS\"] = 61] = \"EQUALS\";\n    Chars[Chars[\"GT\"] = 62] = \"GT\";\n    Chars[Chars[\"QUESTION\"] = 63] = \"QUESTION\";\n    Chars[Chars[\"UpperA\"] = 65] = \"UpperA\";\n    Chars[Chars[\"UpperZ\"] = 90] = \"UpperZ\";\n    Chars[Chars[\"LowerA\"] = 97] = \"LowerA\";\n    Chars[Chars[\"LowerZ\"] = 122] = \"LowerZ\";\n})(Chars || (Chars = {}));\nvar SPACE_CHARACTERS = new Set([Chars.SPACE, Chars.LF, Chars.CR, Chars.TAB]);\nvar END_OF_UNQUOTED_ATTRIBUTE_VALUE = new Set([\n    Chars.SPACE,\n    Chars.LF,\n    Chars.CR,\n    Chars.TAB,\n    Chars.GT,\n]);\nfunction toUint8Array(str) {\n    var arr = new Uint8Array(str.length);\n    for (var i = 0; i < str.length; i++) {\n        arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n}\nexports.STRINGS = {\n    UTF8_BOM: new Uint8Array([0xef, 0xbb, 0xbf]),\n    UTF16LE_BOM: new Uint8Array([0xff, 0xfe]),\n    UTF16BE_BOM: new Uint8Array([0xfe, 0xff]),\n    UTF16LE_XML_PREFIX: new Uint8Array([0x3c, 0x0, 0x3f, 0x0, 0x78, 0x0]),\n    UTF16BE_XML_PREFIX: new Uint8Array([0x0, 0x3c, 0x0, 0x3f, 0x0, 0x78]),\n    XML_DECLARATION: toUint8Array(\"<?xml\"),\n    ENCODING: toUint8Array(\"encoding\"),\n    META: toUint8Array(\"meta\"),\n    HTTP_EQUIV: toUint8Array(\"http-equiv\"),\n    CONTENT: toUint8Array(\"content\"),\n    CONTENT_TYPE: toUint8Array(\"content-type\"),\n    CHARSET: toUint8Array(\"charset\"),\n    COMMENT_START: toUint8Array(\"<!--\"),\n    COMMENT_END: toUint8Array(\"-->\"),\n};\nfunction isAsciiAlpha(c) {\n    return ((c >= Chars.UpperA && c <= Chars.UpperZ) ||\n        (c >= Chars.LowerA && c <= Chars.LowerZ));\n}\nfunction isQuote(c) {\n    return c === Chars.DQUOTE || c === Chars.SQUOTE;\n}\nvar Sniffer = /** @class */ (function () {\n    function Sniffer(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.maxBytes, maxBytes = _c === void 0 ? 1024 : _c, userEncoding = _b.userEncoding, transportLayerEncodingLabel = _b.transportLayerEncodingLabel, defaultEncoding = _b.defaultEncoding;\n        /** The offset of the previous buffers. */\n        this.offset = 0;\n        this.state = State.Begin;\n        this.sectionIndex = 0;\n        this.attribType = AttribType.None;\n        /**\n         * Indicates if the `http-equiv` is `content-type`.\n         *\n         * Initially `null`, a boolean when a value is found.\n         */\n        this.gotPragma = null;\n        this.needsPragma = null;\n        this.inMetaTag = false;\n        this.encoding = \"windows-1252\";\n        this.resultType = ResultType.DEFAULT;\n        this.quoteCharacter = 0;\n        this.attributeValue = [];\n        this.maxBytes = maxBytes;\n        if (userEncoding) {\n            this.setResult(userEncoding, ResultType.PASSED);\n        }\n        if (transportLayerEncodingLabel) {\n            this.setResult(transportLayerEncodingLabel, ResultType.PASSED);\n        }\n        if (defaultEncoding) {\n            this.setResult(defaultEncoding, ResultType.DEFAULT);\n        }\n    }\n    Sniffer.prototype.setResult = function (label, type) {\n        if (this.resultType === ResultType.DEFAULT || this.resultType > type) {\n            var encoding = (0, whatwg_encoding_1.labelToName)(label);\n            if (encoding) {\n                this.encoding =\n                    // Check if we are in a meta tag and the encoding is `x-user-defined`\n                    type === ResultType.META_TAG &&\n                        encoding === \"x-user-defined\"\n                        ? \"windows-1252\"\n                        : // Check if we are in a meta tag or xml declaration, and the encoding is UTF-16\n                            (type === ResultType.META_TAG ||\n                                type === ResultType.XML_ENCODING) &&\n                                (encoding === \"UTF-16LE\" || encoding === \"UTF-16BE\")\n                                ? \"UTF-8\"\n                                : encoding;\n                this.resultType = type;\n            }\n        }\n    };\n    Sniffer.prototype.stateBegin = function (c) {\n        switch (c) {\n            case exports.STRINGS.UTF16BE_BOM[0]: {\n                this.state = State.BOM16BE;\n                break;\n            }\n            case exports.STRINGS.UTF16LE_BOM[0]: {\n                this.state = State.BOM16LE;\n                break;\n            }\n            case exports.STRINGS.UTF8_BOM[0]: {\n                this.sectionIndex = 1;\n                this.state = State.BOM8;\n                break;\n            }\n            case Chars.NIL: {\n                this.state = State.UTF16BE_XML_PREFIX;\n                this.sectionIndex = 1;\n                break;\n            }\n            case Chars.LT: {\n                this.state = State.BeginLT;\n                break;\n            }\n            default: {\n                this.state = State.BeforeTag;\n            }\n        }\n    };\n    Sniffer.prototype.stateBeginLT = function (c) {\n        if (c === Chars.NIL) {\n            this.state = State.UTF16LE_XML_PREFIX;\n            this.sectionIndex = 2;\n        }\n        else if (c === Chars.QUESTION) {\n            this.state = State.XMLDeclaration;\n            this.sectionIndex = 2;\n        }\n        else {\n            this.state = State.BeforeTagName;\n            this.stateBeforeTagName(c);\n        }\n    };\n    Sniffer.prototype.stateUTF16BE_XML_PREFIX = function (c) {\n        // Advance position in the section\n        if (this.advanceSection(exports.STRINGS.UTF16BE_XML_PREFIX, c)) {\n            if (this.sectionIndex === exports.STRINGS.UTF16BE_XML_PREFIX.length) {\n                // We have the whole prefix\n                this.setResult(\"utf-16be\", ResultType.XML_PREFIX);\n            }\n        }\n        else {\n            this.state = State.BeforeTag;\n            this.stateBeforeTag(c);\n        }\n    };\n    Sniffer.prototype.stateUTF16LE_XML_PREFIX = function (c) {\n        // Advance position in the section\n        if (this.advanceSection(exports.STRINGS.UTF16LE_XML_PREFIX, c)) {\n            if (this.sectionIndex === exports.STRINGS.UTF16LE_XML_PREFIX.length) {\n                // We have the whole prefix\n                this.setResult(\"utf-16le\", ResultType.XML_PREFIX);\n            }\n        }\n        else {\n            this.state = State.BeforeTag;\n            this.stateBeforeTag(c);\n        }\n    };\n    Sniffer.prototype.stateBOM16LE = function (c) {\n        if (c === exports.STRINGS.UTF16LE_BOM[1]) {\n            this.setResult(\"utf-16le\", ResultType.BOM);\n        }\n        else {\n            this.state = State.BeforeTag;\n            this.stateBeforeTag(c);\n        }\n    };\n    Sniffer.prototype.stateBOM16BE = function (c) {\n        if (c === exports.STRINGS.UTF16BE_BOM[1]) {\n            this.setResult(\"utf-16be\", ResultType.BOM);\n        }\n        else {\n            this.state = State.BeforeTag;\n            this.stateBeforeTag(c);\n        }\n    };\n    Sniffer.prototype.stateBOM8 = function (c) {\n        if (this.advanceSection(exports.STRINGS.UTF8_BOM, c) &&\n            this.sectionIndex === exports.STRINGS.UTF8_BOM.length) {\n            this.setResult(\"utf-8\", ResultType.BOM);\n        }\n    };\n    Sniffer.prototype.stateBeforeTag = function (c) {\n        if (c === Chars.LT) {\n            this.state = State.BeforeTagName;\n            this.inMetaTag = false;\n        }\n    };\n    /**\n     * We have seen a `<`, and now have to figure out what to do.\n     *\n     * Options:\n     *  - `<meta`\n     *  - Any other tag\n     *  - A closing tag\n     *  - `<!--`\n     *  - An XML declaration\n     *\n     */\n    Sniffer.prototype.stateBeforeTagName = function (c) {\n        if (isAsciiAlpha(c)) {\n            if ((c | 0x20) === exports.STRINGS.META[0]) {\n                this.sectionIndex = 1;\n                this.state = State.TagNameMeta;\n            }\n            else {\n                this.state = State.TagNameOther;\n            }\n        }\n        else\n            switch (c) {\n                case Chars.SLASH: {\n                    this.state = State.BeforeCloseTagName;\n                    break;\n                }\n                case Chars.EXCLAMATION: {\n                    this.state = State.CommentStart;\n                    this.sectionIndex = 2;\n                    break;\n                }\n                case Chars.QUESTION: {\n                    this.state = State.WeirdTag;\n                    break;\n                }\n                default: {\n                    this.state = State.BeforeTag;\n                    this.stateBeforeTag(c);\n                }\n            }\n    };\n    Sniffer.prototype.stateBeforeCloseTagName = function (c) {\n        this.state = isAsciiAlpha(c)\n            ? // Switch to `TagNameOther`; the HTML spec allows attributes here as well.\n                State.TagNameOther\n            : State.WeirdTag;\n    };\n    Sniffer.prototype.stateCommentStart = function (c) {\n        if (this.advanceSection(exports.STRINGS.COMMENT_START, c)) {\n            if (this.sectionIndex === exports.STRINGS.COMMENT_START.length) {\n                this.state = State.CommentEnd;\n                // The -- of the comment start can be part of the end.\n                this.sectionIndex = 2;\n            }\n        }\n        else {\n            this.state = State.WeirdTag;\n            this.stateWeirdTag(c);\n        }\n    };\n    Sniffer.prototype.stateCommentEnd = function (c) {\n        if (this.advanceSection(exports.STRINGS.COMMENT_END, c)) {\n            if (this.sectionIndex === exports.STRINGS.COMMENT_END.length) {\n                this.state = State.BeforeTag;\n            }\n        }\n        else if (c === Chars.DASH) {\n            /*\n             * If we are here, we know we expected a `>` above.\n             * Set this to 2, to support many dashes before the closing `>`.\n             */\n            this.sectionIndex = 2;\n        }\n    };\n    /**\n     * Any section starting with `<!`, `<?`, `</`, without being a closing tag or comment.\n     */\n    Sniffer.prototype.stateWeirdTag = function (c) {\n        if (c === Chars.GT) {\n            this.state = State.BeforeTag;\n        }\n    };\n    /**\n     * Advances the section, ignoring upper/lower case.\n     *\n     * Make sure the section has left-over characters before calling.\n     *\n     * @returns `false` if we did not match the section.\n     */\n    Sniffer.prototype.advanceSectionIC = function (section, c) {\n        return this.advanceSection(section, c | 0x20);\n    };\n    /**\n     * Advances the section.\n     *\n     * Make sure the section has left-over characters before calling.\n     *\n     * @returns `false` if we did not match the section.\n     */\n    Sniffer.prototype.advanceSection = function (section, c) {\n        if (section[this.sectionIndex] === c) {\n            this.sectionIndex++;\n            return true;\n        }\n        this.sectionIndex = 0;\n        return false;\n    };\n    Sniffer.prototype.stateTagNameMeta = function (c) {\n        if (this.sectionIndex < exports.STRINGS.META.length) {\n            if (this.advanceSectionIC(exports.STRINGS.META, c)) {\n                return;\n            }\n        }\n        else if (SPACE_CHARACTERS.has(c)) {\n            this.inMetaTag = true;\n            this.gotPragma = null;\n            this.needsPragma = null;\n            this.state = State.BeforeAttribute;\n            return;\n        }\n        this.state = State.TagNameOther;\n        // Reconsume in case there is a `>`.\n        this.stateTagNameOther(c);\n    };\n    Sniffer.prototype.stateTagNameOther = function (c) {\n        if (SPACE_CHARACTERS.has(c)) {\n            this.state = State.BeforeAttribute;\n        }\n        else if (c === Chars.GT) {\n            this.state = State.BeforeTag;\n        }\n    };\n    Sniffer.prototype.stateBeforeAttribute = function (c) {\n        if (SPACE_CHARACTERS.has(c))\n            return;\n        if (this.inMetaTag) {\n            var lower = c | 0x20;\n            if (lower === exports.STRINGS.HTTP_EQUIV[0]) {\n                this.sectionIndex = 1;\n                this.state = State.MetaAttribHttpEquiv;\n                return;\n            }\n            else if (lower === exports.STRINGS.CHARSET[0]) {\n                this.sectionIndex = 1;\n                this.state = State.MetaAttribC;\n                return;\n            }\n        }\n        this.state =\n            c === Chars.SLASH || c === Chars.GT\n                ? State.BeforeTag\n                : State.AnyAttribName;\n    };\n    Sniffer.prototype.handleMetaAttrib = function (c, section, type) {\n        if (this.advanceSectionIC(section, c)) {\n            if (this.sectionIndex === section.length) {\n                this.attribType = type;\n                this.state = State.MetaAttribAfterName;\n            }\n        }\n        else {\n            this.state = State.AnyAttribName;\n            this.stateAnyAttribName(c);\n        }\n    };\n    Sniffer.prototype.stateMetaAttribHttpEquiv = function (c) {\n        this.handleMetaAttrib(c, exports.STRINGS.HTTP_EQUIV, AttribType.HttpEquiv);\n    };\n    Sniffer.prototype.stateMetaAttribC = function (c) {\n        var lower = c | 0x20;\n        if (lower === exports.STRINGS.CHARSET[1]) {\n            this.sectionIndex = 2;\n            this.state = State.MetaAttribCharset;\n        }\n        else if (lower === exports.STRINGS.CONTENT[1]) {\n            this.sectionIndex = 2;\n            this.state = State.MetaAttribContent;\n        }\n        else {\n            this.state = State.AnyAttribName;\n            this.stateAnyAttribName(c);\n        }\n    };\n    Sniffer.prototype.stateMetaAttribCharset = function (c) {\n        this.handleMetaAttrib(c, exports.STRINGS.CHARSET, AttribType.Charset);\n    };\n    Sniffer.prototype.stateMetaAttribContent = function (c) {\n        this.handleMetaAttrib(c, exports.STRINGS.CONTENT, AttribType.Content);\n    };\n    Sniffer.prototype.stateMetaAttribAfterName = function (c) {\n        if (SPACE_CHARACTERS.has(c) || c === Chars.EQUALS) {\n            this.state = State.AfterAttributeName;\n            this.stateAfterAttributeName(c);\n        }\n        else {\n            this.state = State.AnyAttribName;\n            this.stateAnyAttribName(c);\n        }\n    };\n    Sniffer.prototype.stateAnyAttribName = function (c) {\n        if (SPACE_CHARACTERS.has(c)) {\n            this.attribType = AttribType.None;\n            this.state = State.AfterAttributeName;\n        }\n        else if (c === Chars.SLASH || c === Chars.GT) {\n            this.state = State.BeforeTag;\n        }\n        else if (c === Chars.EQUALS) {\n            this.state = State.BeforeAttributeValue;\n        }\n    };\n    Sniffer.prototype.stateAfterAttributeName = function (c) {\n        if (SPACE_CHARACTERS.has(c))\n            return;\n        if (c === Chars.EQUALS) {\n            this.state = State.BeforeAttributeValue;\n        }\n        else {\n            this.state = State.BeforeAttribute;\n            this.stateBeforeAttribute(c);\n        }\n    };\n    Sniffer.prototype.stateBeforeAttributeValue = function (c) {\n        if (SPACE_CHARACTERS.has(c))\n            return;\n        this.attributeValue.length = 0;\n        this.sectionIndex = 0;\n        if (isQuote(c)) {\n            this.quoteCharacter = c;\n            this.state =\n                this.attribType === AttribType.Content\n                    ? State.MetaContentValueQuotedBeforeEncoding\n                    : this.attribType === AttribType.HttpEquiv\n                        ? State.MetaAttribHttpEquivValue\n                        : State.AttributeValueQuoted;\n        }\n        else if (this.attribType === AttribType.Content) {\n            this.state = State.MetaContentValueUnquotedBeforeEncoding;\n            this.stateMetaContentValueUnquotedBeforeEncoding(c);\n        }\n        else if (this.attribType === AttribType.HttpEquiv) {\n            // We use `quoteCharacter = 0` to signify that the value is unquoted.\n            this.quoteCharacter = 0;\n            this.sectionIndex = 0;\n            this.state = State.MetaAttribHttpEquivValue;\n            this.stateMetaAttribHttpEquivValue(c);\n        }\n        else {\n            this.state = State.AttributeValueUnquoted;\n            this.stateAttributeValueUnquoted(c);\n        }\n    };\n    // The value has to be `content-type`\n    Sniffer.prototype.stateMetaAttribHttpEquivValue = function (c) {\n        if (this.sectionIndex === exports.STRINGS.CONTENT_TYPE.length) {\n            if (this.quoteCharacter === 0\n                ? END_OF_UNQUOTED_ATTRIBUTE_VALUE.has(c)\n                : c === this.quoteCharacter) {\n                if (this.needsPragma !== null) {\n                    this.setResult(this.needsPragma, ResultType.META_TAG);\n                }\n                else if (this.gotPragma === null) {\n                    this.gotPragma = true;\n                }\n                this.state = State.BeforeAttribute;\n                return;\n            }\n        }\n        else if (this.advanceSectionIC(exports.STRINGS.CONTENT_TYPE, c)) {\n            return;\n        }\n        this.gotPragma = false;\n        if (this.quoteCharacter === 0) {\n            this.state = State.AttributeValueUnquoted;\n            this.stateAttributeValueUnquoted(c);\n        }\n        else {\n            this.state = State.AttributeValueQuoted;\n            this.stateAttributeValueQuoted(c);\n        }\n    };\n    Sniffer.prototype.handleMetaContentValue = function () {\n        if (this.attributeValue.length === 0)\n            return;\n        var encoding = String.fromCharCode.apply(String, this.attributeValue);\n        if (this.gotPragma) {\n            this.setResult(encoding, ResultType.META_TAG);\n        }\n        else if (this.needsPragma === null) {\n            // Don't override a previous result.\n            this.needsPragma = encoding;\n        }\n        this.attributeValue.length = 0;\n    };\n    Sniffer.prototype.handleAttributeValue = function () {\n        if (this.attribType === AttribType.Charset) {\n            this.setResult(String.fromCharCode.apply(String, this.attributeValue), ResultType.META_TAG);\n        }\n    };\n    Sniffer.prototype.stateAttributeValueUnquoted = function (c) {\n        if (SPACE_CHARACTERS.has(c)) {\n            this.handleAttributeValue();\n            this.state = State.BeforeAttribute;\n        }\n        else if (c === Chars.SLASH || c === Chars.GT) {\n            this.handleAttributeValue();\n            this.state = State.BeforeTag;\n        }\n        else if (this.attribType === AttribType.Charset) {\n            this.attributeValue.push(c | 0x20);\n        }\n    };\n    Sniffer.prototype.findMetaContentEncoding = function (c) {\n        if (this.advanceSectionIC(exports.STRINGS.CHARSET, c)) {\n            if (this.sectionIndex === exports.STRINGS.CHARSET.length) {\n                return true;\n            }\n        }\n        else {\n            // If we encountered another `c`, assume we started over.\n            this.sectionIndex = Number(c === exports.STRINGS.CHARSET[0]);\n        }\n        return false;\n    };\n    Sniffer.prototype.stateMetaContentValueUnquotedBeforeEncoding = function (c) {\n        if (END_OF_UNQUOTED_ATTRIBUTE_VALUE.has(c)) {\n            this.stateAttributeValueUnquoted(c);\n        }\n        else if (this.sectionIndex === exports.STRINGS.CHARSET.length) {\n            if (c === Chars.EQUALS) {\n                this.state = State.MetaContentValueUnquotedBeforeValue;\n            }\n        }\n        else {\n            this.findMetaContentEncoding(c);\n        }\n    };\n    Sniffer.prototype.stateMetaContentValueUnquotedBeforeValue = function (c) {\n        if (isQuote(c)) {\n            this.quoteCharacter = c;\n            this.state = State.MetaContentValueUnquotedValueQuoted;\n        }\n        else if (END_OF_UNQUOTED_ATTRIBUTE_VALUE.has(c)) {\n            // Can't have spaces here, as it would no longer be part of the attribute value.\n            this.stateAttributeValueUnquoted(c);\n        }\n        else {\n            this.state = State.MetaContentValueUnquotedValueUnquoted;\n            this.stateMetaContentValueUnquotedValueUnquoted(c);\n        }\n    };\n    Sniffer.prototype.stateMetaContentValueUnquotedValueQuoted = function (c) {\n        if (END_OF_UNQUOTED_ATTRIBUTE_VALUE.has(c)) {\n            // Quotes weren't matched, so we're done.\n            this.stateAttributeValueUnquoted(c);\n        }\n        else if (c === this.quoteCharacter) {\n            this.handleMetaContentValue();\n            this.state = State.AttributeValueUnquoted;\n        }\n        else {\n            this.attributeValue.push(c | 0x20);\n        }\n    };\n    Sniffer.prototype.stateMetaContentValueUnquotedValueUnquoted = function (c) {\n        if (END_OF_UNQUOTED_ATTRIBUTE_VALUE.has(c) || c === Chars.SEMICOLON) {\n            this.handleMetaContentValue();\n            this.state = State.AttributeValueUnquoted;\n            this.stateAttributeValueUnquoted(c);\n        }\n        else {\n            this.attributeValue.push(c | 0x20);\n        }\n    };\n    Sniffer.prototype.stateMetaContentValueQuotedValueUnquoted = function (c) {\n        if (isQuote(c) || SPACE_CHARACTERS.has(c) || c === Chars.SEMICOLON) {\n            this.handleMetaContentValue();\n            // We are done with the value, but might not be at the end of the attribute\n            this.state = State.AttributeValueQuoted;\n            this.stateAttributeValueQuoted(c);\n        }\n        else {\n            this.attributeValue.push(c | 0x20);\n        }\n    };\n    Sniffer.prototype.stateMetaContentValueQuotedValueQuoted = function (c) {\n        if (isQuote(c)) {\n            // We have reached the end of our value.\n            if (c !== this.quoteCharacter) {\n                // Only handle the value if inner quotes were matched.\n                this.handleMetaContentValue();\n            }\n            this.state = State.AttributeValueQuoted;\n            this.stateAttributeValueQuoted(c);\n        }\n        else {\n            this.attributeValue.push(c | 0x20);\n        }\n    };\n    Sniffer.prototype.stateMetaContentValueQuotedBeforeEncoding = function (c) {\n        if (c === this.quoteCharacter) {\n            this.stateAttributeValueQuoted(c);\n        }\n        else if (this.findMetaContentEncoding(c)) {\n            this.state = State.MetaContentValueQuotedAfterEncoding;\n        }\n    };\n    Sniffer.prototype.stateMetaContentValueQuotedAfterEncoding = function (c) {\n        if (c === Chars.EQUALS) {\n            this.state = State.MetaContentValueQuotedBeforeValue;\n        }\n        else if (!SPACE_CHARACTERS.has(c)) {\n            // Look for the next encoding\n            this.state = State.MetaContentValueQuotedBeforeEncoding;\n            this.stateMetaContentValueQuotedBeforeEncoding(c);\n        }\n    };\n    Sniffer.prototype.stateMetaContentValueQuotedBeforeValue = function (c) {\n        if (c === this.quoteCharacter) {\n            this.stateAttributeValueQuoted(c);\n        }\n        else if (isQuote(c)) {\n            this.state = State.MetaContentValueQuotedValueQuoted;\n        }\n        else if (!SPACE_CHARACTERS.has(c)) {\n            this.state = State.MetaContentValueQuotedValueUnquoted;\n            this.stateMetaContentValueQuotedValueUnquoted(c);\n        }\n    };\n    Sniffer.prototype.stateAttributeValueQuoted = function (c) {\n        if (c === this.quoteCharacter) {\n            this.handleAttributeValue();\n            this.state = State.BeforeAttribute;\n        }\n        else if (this.attribType === AttribType.Charset) {\n            this.attributeValue.push(c | 0x20);\n        }\n    };\n    // Read STRINGS.XML_DECLARATION\n    Sniffer.prototype.stateXMLDeclaration = function (c) {\n        if (this.advanceSection(exports.STRINGS.XML_DECLARATION, c)) {\n            if (this.sectionIndex === exports.STRINGS.XML_DECLARATION.length) {\n                this.sectionIndex = 0;\n                this.state = State.XMLDeclarationBeforeEncoding;\n            }\n        }\n        else {\n            this.state = State.WeirdTag;\n        }\n    };\n    Sniffer.prototype.stateXMLDeclarationBeforeEncoding = function (c) {\n        if (this.advanceSection(exports.STRINGS.ENCODING, c)) {\n            if (this.sectionIndex === exports.STRINGS.ENCODING.length) {\n                this.state = State.XMLDeclarationAfterEncoding;\n            }\n        }\n        else if (c === Chars.GT) {\n            this.state = State.BeforeTag;\n        }\n        else {\n            // If we encountered another `c`, assume we started over.\n            this.sectionIndex = Number(c === exports.STRINGS.ENCODING[0]);\n        }\n    };\n    Sniffer.prototype.stateXMLDeclarationAfterEncoding = function (c) {\n        if (c === Chars.EQUALS) {\n            this.state = State.XMLDeclarationBeforeValue;\n        }\n        else if (c > Chars.SPACE) {\n            this.state = State.WeirdTag;\n            this.stateWeirdTag(c);\n        }\n    };\n    Sniffer.prototype.stateXMLDeclarationBeforeValue = function (c) {\n        if (isQuote(c)) {\n            this.attributeValue.length = 0;\n            this.state = State.XMLDeclarationValue;\n        }\n        else if (c > Chars.SPACE) {\n            this.state = State.WeirdTag;\n            this.stateWeirdTag(c);\n        }\n    };\n    Sniffer.prototype.stateXMLDeclarationValue = function (c) {\n        if (isQuote(c)) {\n            this.setResult(String.fromCharCode.apply(String, this.attributeValue), ResultType.XML_ENCODING);\n            this.state = State.WeirdTag;\n        }\n        else if (c === Chars.GT) {\n            this.state = State.BeforeTag;\n        }\n        else if (c <= Chars.SPACE) {\n            this.state = State.WeirdTag;\n        }\n        else {\n            this.attributeValue.push(c | 0x20);\n        }\n    };\n    Sniffer.prototype.write = function (buffer) {\n        var index = 0;\n        for (; index < buffer.length && this.offset + index < this.maxBytes; index++) {\n            var c = buffer[index];\n            switch (this.state) {\n                case State.Begin: {\n                    this.stateBegin(c);\n                    break;\n                }\n                case State.BOM16BE: {\n                    this.stateBOM16BE(c);\n                    break;\n                }\n                case State.BOM16LE: {\n                    this.stateBOM16LE(c);\n                    break;\n                }\n                case State.BOM8: {\n                    this.stateBOM8(c);\n                    break;\n                }\n                case State.UTF16LE_XML_PREFIX: {\n                    this.stateUTF16LE_XML_PREFIX(c);\n                    break;\n                }\n                case State.BeginLT: {\n                    this.stateBeginLT(c);\n                    break;\n                }\n                case State.UTF16BE_XML_PREFIX: {\n                    this.stateUTF16BE_XML_PREFIX(c);\n                    break;\n                }\n                case State.BeforeTag: {\n                    // Optimization: Skip all characters until we find a `<`\n                    var idx = buffer.indexOf(Chars.LT, index);\n                    if (idx < 0) {\n                        // We are done with this buffer. Stay in the state and try on the next one.\n                        index = buffer.length;\n                    }\n                    else {\n                        index = idx;\n                        this.stateBeforeTag(Chars.LT);\n                    }\n                    break;\n                }\n                case State.BeforeTagName: {\n                    this.stateBeforeTagName(c);\n                    break;\n                }\n                case State.BeforeCloseTagName: {\n                    this.stateBeforeCloseTagName(c);\n                    break;\n                }\n                case State.CommentStart: {\n                    this.stateCommentStart(c);\n                    break;\n                }\n                case State.CommentEnd: {\n                    this.stateCommentEnd(c);\n                    break;\n                }\n                case State.TagNameMeta: {\n                    this.stateTagNameMeta(c);\n                    break;\n                }\n                case State.TagNameOther: {\n                    this.stateTagNameOther(c);\n                    break;\n                }\n                case State.XMLDeclaration: {\n                    this.stateXMLDeclaration(c);\n                    break;\n                }\n                case State.XMLDeclarationBeforeEncoding: {\n                    this.stateXMLDeclarationBeforeEncoding(c);\n                    break;\n                }\n                case State.XMLDeclarationAfterEncoding: {\n                    this.stateXMLDeclarationAfterEncoding(c);\n                    break;\n                }\n                case State.XMLDeclarationBeforeValue: {\n                    this.stateXMLDeclarationBeforeValue(c);\n                    break;\n                }\n                case State.XMLDeclarationValue: {\n                    this.stateXMLDeclarationValue(c);\n                    break;\n                }\n                case State.WeirdTag: {\n                    this.stateWeirdTag(c);\n                    break;\n                }\n                case State.BeforeAttribute: {\n                    this.stateBeforeAttribute(c);\n                    break;\n                }\n                case State.MetaAttribHttpEquiv: {\n                    this.stateMetaAttribHttpEquiv(c);\n                    break;\n                }\n                case State.MetaAttribHttpEquivValue: {\n                    this.stateMetaAttribHttpEquivValue(c);\n                    break;\n                }\n                case State.MetaAttribC: {\n                    this.stateMetaAttribC(c);\n                    break;\n                }\n                case State.MetaAttribContent: {\n                    this.stateMetaAttribContent(c);\n                    break;\n                }\n                case State.MetaAttribCharset: {\n                    this.stateMetaAttribCharset(c);\n                    break;\n                }\n                case State.MetaAttribAfterName: {\n                    this.stateMetaAttribAfterName(c);\n                    break;\n                }\n                case State.MetaContentValueQuotedBeforeEncoding: {\n                    this.stateMetaContentValueQuotedBeforeEncoding(c);\n                    break;\n                }\n                case State.MetaContentValueQuotedAfterEncoding: {\n                    this.stateMetaContentValueQuotedAfterEncoding(c);\n                    break;\n                }\n                case State.MetaContentValueQuotedBeforeValue: {\n                    this.stateMetaContentValueQuotedBeforeValue(c);\n                    break;\n                }\n                case State.MetaContentValueQuotedValueQuoted: {\n                    this.stateMetaContentValueQuotedValueQuoted(c);\n                    break;\n                }\n                case State.MetaContentValueQuotedValueUnquoted: {\n                    this.stateMetaContentValueQuotedValueUnquoted(c);\n                    break;\n                }\n                case State.MetaContentValueUnquotedBeforeEncoding: {\n                    this.stateMetaContentValueUnquotedBeforeEncoding(c);\n                    break;\n                }\n                case State.MetaContentValueUnquotedBeforeValue: {\n                    this.stateMetaContentValueUnquotedBeforeValue(c);\n                    break;\n                }\n                case State.MetaContentValueUnquotedValueQuoted: {\n                    this.stateMetaContentValueUnquotedValueQuoted(c);\n                    break;\n                }\n                case State.MetaContentValueUnquotedValueUnquoted: {\n                    this.stateMetaContentValueUnquotedValueUnquoted(c);\n                    break;\n                }\n                case State.AnyAttribName: {\n                    this.stateAnyAttribName(c);\n                    break;\n                }\n                case State.AfterAttributeName: {\n                    this.stateAfterAttributeName(c);\n                    break;\n                }\n                case State.BeforeAttributeValue: {\n                    this.stateBeforeAttributeValue(c);\n                    break;\n                }\n                case State.AttributeValueQuoted: {\n                    this.stateAttributeValueQuoted(c);\n                    break;\n                }\n                default: {\n                    // (State.AttributeValueUnquoted)\n                    this.stateAttributeValueUnquoted(c);\n                }\n            }\n        }\n        this.offset += index;\n    };\n    return Sniffer;\n}());\nexports.Sniffer = Sniffer;\n/** Get the encoding for the passed buffer. */\nfunction getEncoding(buffer, options) {\n    var sniffer = new Sniffer(options);\n    sniffer.write(buffer);\n    return sniffer.encoding;\n}\nexports.getEncoding = getEncoding;\n//# sourceMappingURL=sniffer.js.map"]}}