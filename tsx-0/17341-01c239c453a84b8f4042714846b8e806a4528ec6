{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var BOMChar=\"\\uFEFF\";exports.PrependBOM=PrependBOMWrapper;function PrependBOMWrapper(encoder,options){this.encoder=encoder;this.addBOM=true}__name(PrependBOMWrapper,\"PrependBOMWrapper\");PrependBOMWrapper.prototype.write=function(str){if(this.addBOM){str=BOMChar+str;this.addBOM=false}return this.encoder.write(str)};PrependBOMWrapper.prototype.end=function(){return this.encoder.end()};exports.StripBOM=StripBOMWrapper;function StripBOMWrapper(decoder,options){this.decoder=decoder;this.pass=false;this.options=options||{}}__name(StripBOMWrapper,\"StripBOMWrapper\");StripBOMWrapper.prototype.write=function(buf){var res=this.decoder.write(buf);if(this.pass||!res)return res;if(res[0]===BOMChar){res=res.slice(1);if(typeof this.options.stripBOM===\"function\")this.options.stripBOM()}this.pass=true;return res};StripBOMWrapper.prototype.end=function(){return this.decoder.end()};\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HAEA,IAAI,QAAU,SAEd,QAAQ,WAAa,kBACrB,SAAS,kBAAkB,QAAS,QAAS,CACzC,KAAK,QAAU,QACf,KAAK,OAAS,IAClB,CAHS,8CAKT,kBAAkB,UAAU,MAAQ,SAAS,IAAK,CAC9C,GAAI,KAAK,OAAQ,CACb,IAAM,QAAU,IAChB,KAAK,OAAS,KAClB,CAEA,OAAO,KAAK,QAAQ,MAAM,GAAG,CACjC,EAEA,kBAAkB,UAAU,IAAM,UAAW,CACzC,OAAO,KAAK,QAAQ,IAAI,CAC5B,EAKA,QAAQ,SAAW,gBACnB,SAAS,gBAAgB,QAAS,QAAS,CACvC,KAAK,QAAU,QACf,KAAK,KAAO,MACZ,KAAK,QAAU,SAAW,CAAC,CAC/B,CAJS,0CAMT,gBAAgB,UAAU,MAAQ,SAAS,IAAK,CAC5C,IAAI,IAAM,KAAK,QAAQ,MAAM,GAAG,EAChC,GAAI,KAAK,MAAQ,CAAC,IACd,OAAO,IAEX,GAAI,IAAI,CAAC,IAAM,QAAS,CACpB,IAAM,IAAI,MAAM,CAAC,EACjB,GAAI,OAAO,KAAK,QAAQ,WAAa,WACjC,KAAK,QAAQ,SAAS,CAC9B,CAEA,KAAK,KAAO,KACZ,OAAO,GACX,EAEA,gBAAgB,UAAU,IAAM,UAAW,CACvC,OAAO,KAAK,QAAQ,IAAI,CAC5B","names":[],"sources":["/home/creditga/CofiCarte/node_modules/.pnpm/iconv-lite@0.6.3/node_modules/iconv-lite/lib/bom-handling.js"],"sourcesContent":["\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n"]}}