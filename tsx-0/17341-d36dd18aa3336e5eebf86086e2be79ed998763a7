{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});exports.attr=attr;exports.prop=prop;exports.data=data;exports.val=val;exports.removeAttr=removeAttr;exports.hasClass=hasClass;exports.addClass=addClass;exports.removeClass=removeClass;exports.toggleClass=toggleClass;const static_js_1=require(\"../static.js\");const utils_js_1=require(\"../utils.js\");const domhandler_1=require(\"domhandler\");const domutils_1=require(\"domutils\");const hasOwn=Object.prototype.hasOwnProperty;const rspace=/\\s+/;const dataAttrPrefix=\"data-\";const rboolean=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;const rbrace=/^{[^]*}$|^\\[[^]*]$/;function getAttr(elem,name,xmlMode){var _a;if(!elem||!(0,domhandler_1.isTag)(elem))return void 0;(_a=elem.attribs)!==null&&_a!==void 0?_a:elem.attribs={};if(!name){return elem.attribs}if(hasOwn.call(elem.attribs,name)){return!xmlMode&&rboolean.test(name)?name:elem.attribs[name]}if(elem.name===\"option\"&&name===\"value\"){return(0,static_js_1.text)(elem.children)}if(elem.name===\"input\"&&(elem.attribs[\"type\"]===\"radio\"||elem.attribs[\"type\"]===\"checkbox\")&&name===\"value\"){return\"on\"}return void 0}__name(getAttr,\"getAttr\");function setAttr(el,name,value){if(value===null){removeAttribute(el,name)}else{el.attribs[name]=`${value}`}}__name(setAttr,\"setAttr\");function attr(name,value){if(typeof name===\"object\"||value!==void 0){if(typeof value===\"function\"){if(typeof name!==\"string\"){{throw new Error(\"Bad combination of arguments.\")}}return(0,utils_js_1.domEach)(this,(el,i)=>{if((0,domhandler_1.isTag)(el))setAttr(el,name,value.call(el,i,el.attribs[name]))})}return(0,utils_js_1.domEach)(this,el=>{if(!(0,domhandler_1.isTag)(el))return;if(typeof name===\"object\"){for(const objName of Object.keys(name)){const objValue=name[objName];setAttr(el,objName,objValue)}}else{setAttr(el,name,value)}})}return arguments.length>1?this:getAttr(this[0],name,this.options.xmlMode)}__name(attr,\"attr\");function getProp(el,name,xmlMode){return name in el?el[name]:!xmlMode&&rboolean.test(name)?getAttr(el,name,false)!==void 0:getAttr(el,name,xmlMode)}__name(getProp,\"getProp\");function setProp(el,name,value,xmlMode){if(name in el){el[name]=value}else{setAttr(el,name,!xmlMode&&rboolean.test(name)?value?\"\":null:`${value}`)}}__name(setProp,\"setProp\");function prop(name,value){var _a;if(typeof name===\"string\"&&value===void 0){const el=this[0];if(!el||!(0,domhandler_1.isTag)(el))return void 0;switch(name){case\"style\":{const property=this.css();const keys=Object.keys(property);for(let i=0;i<keys.length;i++){property[i]=keys[i]}property.length=keys.length;return property}case\"tagName\":case\"nodeName\":{return el.name.toUpperCase()}case\"href\":case\"src\":{const prop2=(_a=el.attribs)===null||_a===void 0?void 0:_a[name];if(typeof URL!==\"undefined\"&&(name===\"href\"&&(el.tagName===\"a\"||el.tagName===\"link\")||name===\"src\"&&(el.tagName===\"img\"||el.tagName===\"iframe\"||el.tagName===\"audio\"||el.tagName===\"video\"||el.tagName===\"source\"))&&prop2!==void 0&&this.options.baseURI){return new URL(prop2,this.options.baseURI).href}return prop2}case\"innerText\":{return(0,domutils_1.innerText)(el)}case\"textContent\":{return(0,domutils_1.textContent)(el)}case\"outerHTML\":{return this.clone().wrap(\"<container />\").parent().html()}case\"innerHTML\":{return this.html()}default:{return getProp(el,name,this.options.xmlMode)}}}if(typeof name===\"object\"||value!==void 0){if(typeof value===\"function\"){if(typeof name===\"object\"){throw new TypeError(\"Bad combination of arguments.\")}return(0,utils_js_1.domEach)(this,(el,i)=>{if((0,domhandler_1.isTag)(el)){setProp(el,name,value.call(el,i,getProp(el,name,this.options.xmlMode)),this.options.xmlMode)}})}return(0,utils_js_1.domEach)(this,el=>{if(!(0,domhandler_1.isTag)(el))return;if(typeof name===\"object\"){for(const key of Object.keys(name)){const val2=name[key];setProp(el,key,val2,this.options.xmlMode)}}else{setProp(el,name,value,this.options.xmlMode)}})}return void 0}__name(prop,\"prop\");function setData(elem,name,value){var _a;(_a=elem.data)!==null&&_a!==void 0?_a:elem.data={};if(typeof name===\"object\")Object.assign(elem.data,name);else if(typeof name===\"string\"&&value!==void 0){elem.data[name]=value}}__name(setData,\"setData\");function readAllData(el){for(const domName of Object.keys(el.attribs)){if(!domName.startsWith(dataAttrPrefix)){continue}const jsName=(0,utils_js_1.camelCase)(domName.slice(dataAttrPrefix.length));if(!hasOwn.call(el.data,jsName)){el.data[jsName]=parseDataValue(el.attribs[domName])}}return el.data}__name(readAllData,\"readAllData\");function readData(el,name){const domName=dataAttrPrefix+(0,utils_js_1.cssCase)(name);const data2=el.data;if(hasOwn.call(data2,name)){return data2[name]}if(hasOwn.call(el.attribs,domName)){return data2[name]=parseDataValue(el.attribs[domName])}return void 0}__name(readData,\"readData\");function parseDataValue(value){if(value===\"null\")return null;if(value===\"true\")return true;if(value===\"false\")return false;const num=Number(value);if(value===String(num))return num;if(rbrace.test(value)){try{return JSON.parse(value)}catch{}}return value}__name(parseDataValue,\"parseDataValue\");function data(name,value){var _a;const elem=this[0];if(!elem||!(0,domhandler_1.isTag)(elem))return;const dataEl=elem;(_a=dataEl.data)!==null&&_a!==void 0?_a:dataEl.data={};if(name==null){return readAllData(dataEl)}if(typeof name===\"object\"||value!==void 0){(0,utils_js_1.domEach)(this,el=>{if((0,domhandler_1.isTag)(el)){if(typeof name===\"object\")setData(el,name);else setData(el,name,value)}});return this}return readData(dataEl,name)}__name(data,\"data\");function val(value){const querying=arguments.length===0;const element=this[0];if(!element||!(0,domhandler_1.isTag)(element))return querying?void 0:this;switch(element.name){case\"textarea\":{return this.text(value)}case\"select\":{const option=this.find(\"option:selected\");if(!querying){if(this.attr(\"multiple\")==null&&typeof value===\"object\"){return this}this.find(\"option\").removeAttr(\"selected\");const values=typeof value===\"object\"?value:[value];for(const val2 of values){this.find(`option[value=\"${val2}\"]`).attr(\"selected\",\"\")}return this}return this.attr(\"multiple\")?option.toArray().map(el=>(0,static_js_1.text)(el.children)):option.attr(\"value\")}case\"input\":case\"option\":{return querying?this.attr(\"value\"):this.attr(\"value\",value)}}return void 0}__name(val,\"val\");function removeAttribute(elem,name){if(!elem.attribs||!hasOwn.call(elem.attribs,name))return;delete elem.attribs[name]}__name(removeAttribute,\"removeAttribute\");function splitNames(names){return names?names.trim().split(rspace):[]}__name(splitNames,\"splitNames\");function removeAttr(name){const attrNames=splitNames(name);for(const attrName of attrNames){(0,utils_js_1.domEach)(this,elem=>{if((0,domhandler_1.isTag)(elem))removeAttribute(elem,attrName)})}return this}__name(removeAttr,\"removeAttr\");function hasClass(className){return this.toArray().some(elem=>{const clazz=(0,domhandler_1.isTag)(elem)&&elem.attribs[\"class\"];let idx=-1;if(clazz&&className.length>0){while((idx=clazz.indexOf(className,idx+1))>-1){const end=idx+className.length;if((idx===0||rspace.test(clazz[idx-1]))&&(end===clazz.length||rspace.test(clazz[end]))){return true}}}return false})}__name(hasClass,\"hasClass\");function addClass(value){if(typeof value===\"function\"){return(0,utils_js_1.domEach)(this,(el,i)=>{if((0,domhandler_1.isTag)(el)){const className=el.attribs[\"class\"]||\"\";addClass.call([el],value.call(el,i,className))}})}if(!value||typeof value!==\"string\")return this;const classNames=value.split(rspace);const numElements=this.length;for(let i=0;i<numElements;i++){const el=this[i];if(!(0,domhandler_1.isTag)(el))continue;const className=getAttr(el,\"class\",false);if(className){let setClass=` ${className} `;for(const cn of classNames){const appendClass=`${cn} `;if(!setClass.includes(` ${appendClass}`))setClass+=appendClass}setAttr(el,\"class\",setClass.trim())}else{setAttr(el,\"class\",classNames.join(\" \").trim())}}return this}__name(addClass,\"addClass\");function removeClass(name){if(typeof name===\"function\"){return(0,utils_js_1.domEach)(this,(el,i)=>{if((0,domhandler_1.isTag)(el)){removeClass.call([el],name.call(el,i,el.attribs[\"class\"]||\"\"))}})}const classes=splitNames(name);const numClasses=classes.length;const removeAll=arguments.length===0;return(0,utils_js_1.domEach)(this,el=>{if(!(0,domhandler_1.isTag)(el))return;if(removeAll){el.attribs[\"class\"]=\"\"}else{const elClasses=splitNames(el.attribs[\"class\"]);let changed=false;for(let j=0;j<numClasses;j++){const index=elClasses.indexOf(classes[j]);if(index>=0){elClasses.splice(index,1);changed=true;j--}}if(changed){el.attribs[\"class\"]=elClasses.join(\" \")}}})}__name(removeClass,\"removeClass\");function toggleClass(value,stateVal){if(typeof value===\"function\"){return(0,utils_js_1.domEach)(this,(el,i)=>{if((0,domhandler_1.isTag)(el)){toggleClass.call([el],value.call(el,i,el.attribs[\"class\"]||\"\",stateVal),stateVal)}})}if(!value||typeof value!==\"string\")return this;const classNames=value.split(rspace);const numClasses=classNames.length;const state=typeof stateVal===\"boolean\"?stateVal?1:-1:0;const numElements=this.length;for(let i=0;i<numElements;i++){const el=this[i];if(!(0,domhandler_1.isTag)(el))continue;const elementClasses=splitNames(el.attribs[\"class\"]);for(let j=0;j<numClasses;j++){const index=elementClasses.indexOf(classNames[j]);if(state>=0&&index<0){elementClasses.push(classNames[j])}else if(state<=0&&index>=0){elementClasses.splice(index,1)}}el.attribs[\"class\"]=elementClasses.join(\" \")}return this}__name(toggleClass,\"toggleClass\");\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":["prop","val","data"],"sources":["/home/creditga/CofiCarte/node_modules/.pnpm/cheerio@1.0.0/node_modules/cheerio/dist/commonjs/api/attributes.js"],"sourcesContent":["\"use strict\";\n/**\n * Methods for getting and modifying attributes.\n *\n * @module cheerio/attributes\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.attr = attr;\nexports.prop = prop;\nexports.data = data;\nexports.val = val;\nexports.removeAttr = removeAttr;\nexports.hasClass = hasClass;\nexports.addClass = addClass;\nexports.removeClass = removeClass;\nexports.toggleClass = toggleClass;\nconst static_js_1 = require(\"../static.js\");\nconst utils_js_1 = require(\"../utils.js\");\nconst domhandler_1 = require(\"domhandler\");\nconst domutils_1 = require(\"domutils\");\nconst hasOwn = Object.prototype.hasOwnProperty;\nconst rspace = /\\s+/;\nconst dataAttrPrefix = 'data-';\n// Attributes that are booleans\nconst rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;\n// Matches strings that look like JSON objects or arrays\nconst rbrace = /^{[^]*}$|^\\[[^]*]$/;\nfunction getAttr(elem, name, xmlMode) {\n    var _a;\n    if (!elem || !(0, domhandler_1.isTag)(elem))\n        return undefined;\n    (_a = elem.attribs) !== null && _a !== void 0 ? _a : (elem.attribs = {});\n    // Return the entire attribs object if no attribute specified\n    if (!name) {\n        return elem.attribs;\n    }\n    if (hasOwn.call(elem.attribs, name)) {\n        // Get the (decoded) attribute\n        return !xmlMode && rboolean.test(name) ? name : elem.attribs[name];\n    }\n    // Mimic the DOM and return text content as value for `option's`\n    if (elem.name === 'option' && name === 'value') {\n        return (0, static_js_1.text)(elem.children);\n    }\n    // Mimic DOM with default value for radios/checkboxes\n    if (elem.name === 'input' &&\n        (elem.attribs['type'] === 'radio' || elem.attribs['type'] === 'checkbox') &&\n        name === 'value') {\n        return 'on';\n    }\n    return undefined;\n}\n/**\n * Sets the value of an attribute. The attribute will be deleted if the value is\n * `null`.\n *\n * @private\n * @param el - The element to set the attribute on.\n * @param name - The attribute's name.\n * @param value - The attribute's value.\n */\nfunction setAttr(el, name, value) {\n    if (value === null) {\n        removeAttribute(el, name);\n    }\n    else {\n        el.attribs[name] = `${value}`;\n    }\n}\nfunction attr(name, value) {\n    // Set the value (with attr map support)\n    if (typeof name === 'object' || value !== undefined) {\n        if (typeof value === 'function') {\n            if (typeof name !== 'string') {\n                {\n                    throw new Error('Bad combination of arguments.');\n                }\n            }\n            return (0, utils_js_1.domEach)(this, (el, i) => {\n                if ((0, domhandler_1.isTag)(el))\n                    setAttr(el, name, value.call(el, i, el.attribs[name]));\n            });\n        }\n        return (0, utils_js_1.domEach)(this, (el) => {\n            if (!(0, domhandler_1.isTag)(el))\n                return;\n            if (typeof name === 'object') {\n                for (const objName of Object.keys(name)) {\n                    const objValue = name[objName];\n                    setAttr(el, objName, objValue);\n                }\n            }\n            else {\n                setAttr(el, name, value);\n            }\n        });\n    }\n    return arguments.length > 1\n        ? this\n        : getAttr(this[0], name, this.options.xmlMode);\n}\n/**\n * Gets a node's prop.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the prop of.\n * @param name - Name of the prop.\n * @param xmlMode - Disable handling of special HTML attributes.\n * @returns The prop's value.\n */\nfunction getProp(el, name, xmlMode) {\n    return name in el\n        ? // @ts-expect-error TS doesn't like us accessing the value directly here.\n            el[name]\n        : !xmlMode && rboolean.test(name)\n            ? getAttr(el, name, false) !== undefined\n            : getAttr(el, name, xmlMode);\n}\n/**\n * Sets the value of a prop.\n *\n * @private\n * @param el - The element to set the prop on.\n * @param name - The prop's name.\n * @param value - The prop's value.\n * @param xmlMode - Disable handling of special HTML attributes.\n */\nfunction setProp(el, name, value, xmlMode) {\n    if (name in el) {\n        // @ts-expect-error Overriding value\n        el[name] = value;\n    }\n    else {\n        setAttr(el, name, !xmlMode && rboolean.test(name) ? (value ? '' : null) : `${value}`);\n    }\n}\nfunction prop(name, value) {\n    var _a;\n    if (typeof name === 'string' && value === undefined) {\n        const el = this[0];\n        if (!el || !(0, domhandler_1.isTag)(el))\n            return undefined;\n        switch (name) {\n            case 'style': {\n                const property = this.css();\n                const keys = Object.keys(property);\n                for (let i = 0; i < keys.length; i++) {\n                    property[i] = keys[i];\n                }\n                property.length = keys.length;\n                return property;\n            }\n            case 'tagName':\n            case 'nodeName': {\n                return el.name.toUpperCase();\n            }\n            case 'href':\n            case 'src': {\n                const prop = (_a = el.attribs) === null || _a === void 0 ? void 0 : _a[name];\n                if (typeof URL !== 'undefined' &&\n                    ((name === 'href' && (el.tagName === 'a' || el.tagName === 'link')) ||\n                        (name === 'src' &&\n                            (el.tagName === 'img' ||\n                                el.tagName === 'iframe' ||\n                                el.tagName === 'audio' ||\n                                el.tagName === 'video' ||\n                                el.tagName === 'source'))) &&\n                    prop !== undefined &&\n                    this.options.baseURI) {\n                    return new URL(prop, this.options.baseURI).href;\n                }\n                return prop;\n            }\n            case 'innerText': {\n                return (0, domutils_1.innerText)(el);\n            }\n            case 'textContent': {\n                return (0, domutils_1.textContent)(el);\n            }\n            case 'outerHTML': {\n                return this.clone().wrap('<container />').parent().html();\n            }\n            case 'innerHTML': {\n                return this.html();\n            }\n            default: {\n                return getProp(el, name, this.options.xmlMode);\n            }\n        }\n    }\n    if (typeof name === 'object' || value !== undefined) {\n        if (typeof value === 'function') {\n            if (typeof name === 'object') {\n                throw new TypeError('Bad combination of arguments.');\n            }\n            return (0, utils_js_1.domEach)(this, (el, i) => {\n                if ((0, domhandler_1.isTag)(el)) {\n                    setProp(el, name, value.call(el, i, getProp(el, name, this.options.xmlMode)), this.options.xmlMode);\n                }\n            });\n        }\n        return (0, utils_js_1.domEach)(this, (el) => {\n            if (!(0, domhandler_1.isTag)(el))\n                return;\n            if (typeof name === 'object') {\n                for (const key of Object.keys(name)) {\n                    const val = name[key];\n                    setProp(el, key, val, this.options.xmlMode);\n                }\n            }\n            else {\n                setProp(el, name, value, this.options.xmlMode);\n            }\n        });\n    }\n    return undefined;\n}\n/**\n * Sets the value of a data attribute.\n *\n * @private\n * @param elem - The element to set the data attribute on.\n * @param name - The data attribute's name.\n * @param value - The data attribute's value.\n */\nfunction setData(elem, name, value) {\n    var _a;\n    (_a = elem.data) !== null && _a !== void 0 ? _a : (elem.data = {});\n    if (typeof name === 'object')\n        Object.assign(elem.data, name);\n    else if (typeof name === 'string' && value !== undefined) {\n        elem.data[name] = value;\n    }\n}\n/**\n * Read _all_ HTML5 `data-*` attributes from the equivalent HTML5 `data-*`\n * attribute, and cache the value in the node's internal data store.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the data attribute of.\n * @returns A map with all of the data attributes.\n */\nfunction readAllData(el) {\n    for (const domName of Object.keys(el.attribs)) {\n        if (!domName.startsWith(dataAttrPrefix)) {\n            continue;\n        }\n        const jsName = (0, utils_js_1.camelCase)(domName.slice(dataAttrPrefix.length));\n        if (!hasOwn.call(el.data, jsName)) {\n            el.data[jsName] = parseDataValue(el.attribs[domName]);\n        }\n    }\n    return el.data;\n}\n/**\n * Read the specified attribute from the equivalent HTML5 `data-*` attribute,\n * and (if present) cache the value in the node's internal data store.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the data attribute of.\n * @param name - Name of the data attribute.\n * @returns The data attribute's value.\n */\nfunction readData(el, name) {\n    const domName = dataAttrPrefix + (0, utils_js_1.cssCase)(name);\n    const data = el.data;\n    if (hasOwn.call(data, name)) {\n        return data[name];\n    }\n    if (hasOwn.call(el.attribs, domName)) {\n        return (data[name] = parseDataValue(el.attribs[domName]));\n    }\n    return undefined;\n}\n/**\n * Coerce string data-* attributes to their corresponding JavaScript primitives.\n *\n * @private\n * @category Attributes\n * @param value - The value to parse.\n * @returns The parsed value.\n */\nfunction parseDataValue(value) {\n    if (value === 'null')\n        return null;\n    if (value === 'true')\n        return true;\n    if (value === 'false')\n        return false;\n    const num = Number(value);\n    if (value === String(num))\n        return num;\n    if (rbrace.test(value)) {\n        try {\n            return JSON.parse(value);\n        }\n        catch {\n            /* Ignore */\n        }\n    }\n    return value;\n}\nfunction data(name, value) {\n    var _a;\n    const elem = this[0];\n    if (!elem || !(0, domhandler_1.isTag)(elem))\n        return;\n    const dataEl = elem;\n    (_a = dataEl.data) !== null && _a !== void 0 ? _a : (dataEl.data = {});\n    // Return the entire data object if no data specified\n    if (name == null) {\n        return readAllData(dataEl);\n    }\n    // Set the value (with attr map support)\n    if (typeof name === 'object' || value !== undefined) {\n        (0, utils_js_1.domEach)(this, (el) => {\n            if ((0, domhandler_1.isTag)(el)) {\n                if (typeof name === 'object')\n                    setData(el, name);\n                else\n                    setData(el, name, value);\n            }\n        });\n        return this;\n    }\n    return readData(dataEl, name);\n}\nfunction val(value) {\n    const querying = arguments.length === 0;\n    const element = this[0];\n    if (!element || !(0, domhandler_1.isTag)(element))\n        return querying ? undefined : this;\n    switch (element.name) {\n        case 'textarea': {\n            return this.text(value);\n        }\n        case 'select': {\n            const option = this.find('option:selected');\n            if (!querying) {\n                if (this.attr('multiple') == null && typeof value === 'object') {\n                    return this;\n                }\n                this.find('option').removeAttr('selected');\n                const values = typeof value === 'object' ? value : [value];\n                for (const val of values) {\n                    this.find(`option[value=\"${val}\"]`).attr('selected', '');\n                }\n                return this;\n            }\n            return this.attr('multiple')\n                ? option.toArray().map((el) => (0, static_js_1.text)(el.children))\n                : option.attr('value');\n        }\n        case 'input':\n        case 'option': {\n            return querying\n                ? this.attr('value')\n                : this.attr('value', value);\n        }\n    }\n    return undefined;\n}\n/**\n * Remove an attribute.\n *\n * @private\n * @param elem - Node to remove attribute from.\n * @param name - Name of the attribute to remove.\n */\nfunction removeAttribute(elem, name) {\n    if (!elem.attribs || !hasOwn.call(elem.attribs, name))\n        return;\n    delete elem.attribs[name];\n}\n/**\n * Splits a space-separated list of names to individual names.\n *\n * @category Attributes\n * @param names - Names to split.\n * @returns - Split names.\n */\nfunction splitNames(names) {\n    return names ? names.trim().split(rspace) : [];\n}\n/**\n * Method for removing attributes by `name`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').removeAttr('class').html();\n * //=> <li>Pear</li>\n *\n * $('.apple').attr('id', 'favorite');\n * $('.apple').removeAttr('id class').html();\n * //=> <li>Apple</li>\n * ```\n *\n * @param name - Name of the attribute.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/removeAttr/}\n */\nfunction removeAttr(name) {\n    const attrNames = splitNames(name);\n    for (const attrName of attrNames) {\n        (0, utils_js_1.domEach)(this, (elem) => {\n            if ((0, domhandler_1.isTag)(elem))\n                removeAttribute(elem, attrName);\n        });\n    }\n    return this;\n}\n/**\n * Check to see if _any_ of the matched elements have the given `className`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').hasClass('pear');\n * //=> true\n *\n * $('apple').hasClass('fruit');\n * //=> false\n *\n * $('li').hasClass('pear');\n * //=> true\n * ```\n *\n * @param className - Name of the class.\n * @returns Indicates if an element has the given `className`.\n * @see {@link https://api.jquery.com/hasClass/}\n */\nfunction hasClass(className) {\n    return this.toArray().some((elem) => {\n        const clazz = (0, domhandler_1.isTag)(elem) && elem.attribs['class'];\n        let idx = -1;\n        if (clazz && className.length > 0) {\n            while ((idx = clazz.indexOf(className, idx + 1)) > -1) {\n                const end = idx + className.length;\n                if ((idx === 0 || rspace.test(clazz[idx - 1])) &&\n                    (end === clazz.length || rspace.test(clazz[end]))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    });\n}\n/**\n * Adds class(es) to all of the matched elements. Also accepts a `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').addClass('fruit').html();\n * //=> <li class=\"pear fruit\">Pear</li>\n *\n * $('.apple').addClass('fruit red').html();\n * //=> <li class=\"apple fruit red\">Apple</li>\n * ```\n *\n * @param value - Name of new class.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/addClass/}\n */\nfunction addClass(value) {\n    // Support functions\n    if (typeof value === 'function') {\n        return (0, utils_js_1.domEach)(this, (el, i) => {\n            if ((0, domhandler_1.isTag)(el)) {\n                const className = el.attribs['class'] || '';\n                addClass.call([el], value.call(el, i, className));\n            }\n        });\n    }\n    // Return if no value or not a string or function\n    if (!value || typeof value !== 'string')\n        return this;\n    const classNames = value.split(rspace);\n    const numElements = this.length;\n    for (let i = 0; i < numElements; i++) {\n        const el = this[i];\n        // If selected element isn't a tag, move on\n        if (!(0, domhandler_1.isTag)(el))\n            continue;\n        // If we don't already have classes — always set xmlMode to false here, as it doesn't matter for classes\n        const className = getAttr(el, 'class', false);\n        if (className) {\n            let setClass = ` ${className} `;\n            // Check if class already exists\n            for (const cn of classNames) {\n                const appendClass = `${cn} `;\n                if (!setClass.includes(` ${appendClass}`))\n                    setClass += appendClass;\n            }\n            setAttr(el, 'class', setClass.trim());\n        }\n        else {\n            setAttr(el, 'class', classNames.join(' ').trim());\n        }\n    }\n    return this;\n}\n/**\n * Removes one or more space-separated classes from the selected elements. If no\n * `className` is defined, all classes will be removed. Also accepts a\n * `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').removeClass('pear').html();\n * //=> <li class=\"\">Pear</li>\n *\n * $('.apple').addClass('red').removeClass().html();\n * //=> <li class=\"\">Apple</li>\n * ```\n *\n * @param name - Name of the class. If not specified, removes all elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/removeClass/}\n */\nfunction removeClass(name) {\n    // Handle if value is a function\n    if (typeof name === 'function') {\n        return (0, utils_js_1.domEach)(this, (el, i) => {\n            if ((0, domhandler_1.isTag)(el)) {\n                removeClass.call([el], name.call(el, i, el.attribs['class'] || ''));\n            }\n        });\n    }\n    const classes = splitNames(name);\n    const numClasses = classes.length;\n    const removeAll = arguments.length === 0;\n    return (0, utils_js_1.domEach)(this, (el) => {\n        if (!(0, domhandler_1.isTag)(el))\n            return;\n        if (removeAll) {\n            // Short circuit the remove all case as this is the nice one\n            el.attribs['class'] = '';\n        }\n        else {\n            const elClasses = splitNames(el.attribs['class']);\n            let changed = false;\n            for (let j = 0; j < numClasses; j++) {\n                const index = elClasses.indexOf(classes[j]);\n                if (index >= 0) {\n                    elClasses.splice(index, 1);\n                    changed = true;\n                    /*\n                     * We have to do another pass to ensure that there are not duplicate\n                     * classes listed\n                     */\n                    j--;\n                }\n            }\n            if (changed) {\n                el.attribs['class'] = elClasses.join(' ');\n            }\n        }\n    });\n}\n/**\n * Add or remove class(es) from the matched elements, depending on either the\n * class's presence or the value of the switch argument. Also accepts a\n * `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.apple.green').toggleClass('fruit green red').html();\n * //=> <li class=\"apple fruit red\">Apple</li>\n *\n * $('.apple.green').toggleClass('fruit green red', true).html();\n * //=> <li class=\"apple green fruit red\">Apple</li>\n * ```\n *\n * @param value - Name of the class. Can also be a function.\n * @param stateVal - If specified the state of the class.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/toggleClass/}\n */\nfunction toggleClass(value, stateVal) {\n    // Support functions\n    if (typeof value === 'function') {\n        return (0, utils_js_1.domEach)(this, (el, i) => {\n            if ((0, domhandler_1.isTag)(el)) {\n                toggleClass.call([el], value.call(el, i, el.attribs['class'] || '', stateVal), stateVal);\n            }\n        });\n    }\n    // Return if no value or not a string or function\n    if (!value || typeof value !== 'string')\n        return this;\n    const classNames = value.split(rspace);\n    const numClasses = classNames.length;\n    const state = typeof stateVal === 'boolean' ? (stateVal ? 1 : -1) : 0;\n    const numElements = this.length;\n    for (let i = 0; i < numElements; i++) {\n        const el = this[i];\n        // If selected element isn't a tag, move on\n        if (!(0, domhandler_1.isTag)(el))\n            continue;\n        const elementClasses = splitNames(el.attribs['class']);\n        // Check if class already exists\n        for (let j = 0; j < numClasses; j++) {\n            // Check if the class name is currently defined\n            const index = elementClasses.indexOf(classNames[j]);\n            // Add if stateValue === true or we are toggling and there is no value\n            if (state >= 0 && index < 0) {\n                elementClasses.push(classNames[j]);\n            }\n            else if (state <= 0 && index >= 0) {\n                // Otherwise remove but only if the item exists\n                elementClasses.splice(index, 1);\n            }\n        }\n        el.attribs['class'] = elementClasses.join(' ');\n    }\n    return this;\n}\n//# sourceMappingURL=attributes.js.map"]}}