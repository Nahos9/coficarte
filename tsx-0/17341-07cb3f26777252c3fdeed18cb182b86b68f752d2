{"code":"(()=>{\n\"use strict\";const corsSafeListedMethods=[\"GET\",\"HEAD\",\"POST\"];const corsSafeListedMethodsSet=new Set(corsSafeListedMethods);const nullBodyStatus=[101,204,205,304];const redirectStatus=[301,302,303,307,308];const redirectStatusSet=new Set(redirectStatus);const badPorts=[\"1\",\"7\",\"9\",\"11\",\"13\",\"15\",\"17\",\"19\",\"20\",\"21\",\"22\",\"23\",\"25\",\"37\",\"42\",\"43\",\"53\",\"69\",\"77\",\"79\",\"87\",\"95\",\"101\",\"102\",\"103\",\"104\",\"109\",\"110\",\"111\",\"113\",\"115\",\"117\",\"119\",\"123\",\"135\",\"137\",\"139\",\"143\",\"161\",\"179\",\"389\",\"427\",\"465\",\"512\",\"513\",\"514\",\"515\",\"526\",\"530\",\"531\",\"532\",\"540\",\"548\",\"554\",\"556\",\"563\",\"587\",\"601\",\"636\",\"989\",\"990\",\"993\",\"995\",\"1719\",\"1720\",\"1723\",\"2049\",\"3659\",\"4045\",\"4190\",\"5060\",\"5061\",\"6000\",\"6566\",\"6665\",\"6666\",\"6667\",\"6668\",\"6669\",\"6679\",\"6697\",\"10080\"];const badPortsSet=new Set(badPorts);const referrerPolicy=[\"\",\"no-referrer\",\"no-referrer-when-downgrade\",\"same-origin\",\"origin\",\"strict-origin\",\"origin-when-cross-origin\",\"strict-origin-when-cross-origin\",\"unsafe-url\"];const referrerPolicySet=new Set(referrerPolicy);const requestRedirect=[\"follow\",\"manual\",\"error\"];const safeMethods=[\"GET\",\"HEAD\",\"OPTIONS\",\"TRACE\"];const safeMethodsSet=new Set(safeMethods);const requestMode=[\"navigate\",\"same-origin\",\"no-cors\",\"cors\"];const requestCredentials=[\"omit\",\"same-origin\",\"include\"];const requestCache=[\"default\",\"no-store\",\"reload\",\"no-cache\",\"force-cache\",\"only-if-cached\"];const requestBodyHeader=[\"content-encoding\",\"content-language\",\"content-location\",\"content-type\",\"content-length\"];const requestDuplex=[\"half\"];const forbiddenMethods=[\"CONNECT\",\"TRACE\",\"TRACK\"];const forbiddenMethodsSet=new Set(forbiddenMethods);const subresource=[\"audio\",\"audioworklet\",\"font\",\"image\",\"manifest\",\"paintworklet\",\"script\",\"style\",\"track\",\"video\",\"xslt\",\"\"];const subresourceSet=new Set(subresource);module.exports={subresource,forbiddenMethods,requestBodyHeader,referrerPolicy,requestRedirect,requestMode,requestCredentials,requestCache,redirectStatus,corsSafeListedMethods,nullBodyStatus,safeMethods,badPorts,requestDuplex,subresourceSet,badPortsSet,redirectStatusSet,corsSafeListedMethodsSet,safeMethodsSet,forbiddenMethodsSet,referrerPolicySet};\n})()\n","warnings":[],"map":{"version":3,"mappings":";aAEA,MAAM,sBAA8C,CAAC,MAAO,OAAQ,MAAM,EAC1E,MAAM,yBAA2B,IAAI,IAAI,qBAAqB,EAE9D,MAAM,eAAuC,CAAC,IAAK,IAAK,IAAK,GAAG,EAEhE,MAAM,eAAuC,CAAC,IAAK,IAAK,IAAK,IAAK,GAAG,EACrE,MAAM,kBAAoB,IAAI,IAAI,cAAc,EAKhD,MAAM,SAAiC,CACrC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC/G,KAAM,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACvG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAClG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,OACpG,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxG,OAAQ,OACV,EACA,MAAM,YAAc,IAAI,IAAI,QAAQ,EAKpC,MAAM,eAAuC,CAC3C,GACA,cACA,6BACA,cACA,SACA,gBACA,2BACA,kCACA,YACF,EACA,MAAM,kBAAoB,IAAI,IAAI,cAAc,EAEhD,MAAM,gBAAwC,CAAC,SAAU,SAAU,OAAO,EAE1E,MAAM,YAAoC,CAAC,MAAO,OAAQ,UAAW,OAAO,EAC5E,MAAM,eAAiB,IAAI,IAAI,WAAW,EAE1C,MAAM,YAAoC,CAAC,WAAY,cAAe,UAAW,MAAM,EAEvF,MAAM,mBAA2C,CAAC,OAAQ,cAAe,SAAS,EAElF,MAAM,aAAqC,CACzC,UACA,WACA,SACA,WACA,cACA,gBACF,EAKA,MAAM,kBAA0C,CAC9C,mBACA,mBACA,mBACA,eAKA,gBACF,EAKA,MAAM,cAAsC,CAC1C,MACF,EAKA,MAAM,iBAAyC,CAAC,UAAW,QAAS,OAAO,EAC3E,MAAM,oBAAsB,IAAI,IAAI,gBAAgB,EAEpD,MAAM,YAAoC,CACxC,QACA,eACA,OACA,QACA,WACA,eACA,SACA,QACA,QACA,QACA,OACA,EACF,EACA,MAAM,eAAiB,IAAI,IAAI,WAAW,EAE1C,OAAO,QAAU,CACf,YACA,iBACA,kBACA,eACA,gBACA,YACA,mBACA,aACA,eACA,sBACA,eACA,YACA,SACA,cACA,eACA,YACA,kBACA,yBACA,eACA,oBACA,iBACF","names":[],"sources":["/home/creditga/CofiCarte/node_modules/.pnpm/undici@6.21.0/node_modules/undici/lib/web/fetch/constants.js"],"sourcesContent":["'use strict'\n\nconst corsSafeListedMethods = /** @type {const} */ (['GET', 'HEAD', 'POST'])\nconst corsSafeListedMethodsSet = new Set(corsSafeListedMethods)\n\nconst nullBodyStatus = /** @type {const} */ ([101, 204, 205, 304])\n\nconst redirectStatus = /** @type {const} */ ([301, 302, 303, 307, 308])\nconst redirectStatusSet = new Set(redirectStatus)\n\n/**\n * @see https://fetch.spec.whatwg.org/#block-bad-port\n */\nconst badPorts = /** @type {const} */ ([\n  '1', '7', '9', '11', '13', '15', '17', '19', '20', '21', '22', '23', '25', '37', '42', '43', '53', '69', '77', '79',\n  '87', '95', '101', '102', '103', '104', '109', '110', '111', '113', '115', '117', '119', '123', '135', '137',\n  '139', '143', '161', '179', '389', '427', '465', '512', '513', '514', '515', '526', '530', '531', '532',\n  '540', '548', '554', '556', '563', '587', '601', '636', '989', '990', '993', '995', '1719', '1720', '1723',\n  '2049', '3659', '4045', '4190', '5060', '5061', '6000', '6566', '6665', '6666', '6667', '6668', '6669', '6679',\n  '6697', '10080'\n])\nconst badPortsSet = new Set(badPorts)\n\n/**\n * @see https://w3c.github.io/webappsec-referrer-policy/#referrer-policies\n */\nconst referrerPolicy = /** @type {const} */ ([\n  '',\n  'no-referrer',\n  'no-referrer-when-downgrade',\n  'same-origin',\n  'origin',\n  'strict-origin',\n  'origin-when-cross-origin',\n  'strict-origin-when-cross-origin',\n  'unsafe-url'\n])\nconst referrerPolicySet = new Set(referrerPolicy)\n\nconst requestRedirect = /** @type {const} */ (['follow', 'manual', 'error'])\n\nconst safeMethods = /** @type {const} */ (['GET', 'HEAD', 'OPTIONS', 'TRACE'])\nconst safeMethodsSet = new Set(safeMethods)\n\nconst requestMode = /** @type {const} */ (['navigate', 'same-origin', 'no-cors', 'cors'])\n\nconst requestCredentials = /** @type {const} */ (['omit', 'same-origin', 'include'])\n\nconst requestCache = /** @type {const} */ ([\n  'default',\n  'no-store',\n  'reload',\n  'no-cache',\n  'force-cache',\n  'only-if-cached'\n])\n\n/**\n * @see https://fetch.spec.whatwg.org/#request-body-header-name\n */\nconst requestBodyHeader = /** @type {const} */ ([\n  'content-encoding',\n  'content-language',\n  'content-location',\n  'content-type',\n  // See https://github.com/nodejs/undici/issues/2021\n  // 'Content-Length' is a forbidden header name, which is typically\n  // removed in the Headers implementation. However, undici doesn't\n  // filter out headers, so we add it here.\n  'content-length'\n])\n\n/**\n * @see https://fetch.spec.whatwg.org/#enumdef-requestduplex\n */\nconst requestDuplex = /** @type {const} */ ([\n  'half'\n])\n\n/**\n * @see http://fetch.spec.whatwg.org/#forbidden-method\n */\nconst forbiddenMethods = /** @type {const} */ (['CONNECT', 'TRACE', 'TRACK'])\nconst forbiddenMethodsSet = new Set(forbiddenMethods)\n\nconst subresource = /** @type {const} */ ([\n  'audio',\n  'audioworklet',\n  'font',\n  'image',\n  'manifest',\n  'paintworklet',\n  'script',\n  'style',\n  'track',\n  'video',\n  'xslt',\n  ''\n])\nconst subresourceSet = new Set(subresource)\n\nmodule.exports = {\n  subresource,\n  forbiddenMethods,\n  requestBodyHeader,\n  referrerPolicy,\n  requestRedirect,\n  requestMode,\n  requestCredentials,\n  requestCache,\n  redirectStatus,\n  corsSafeListedMethods,\n  nullBodyStatus,\n  safeMethods,\n  badPorts,\n  requestDuplex,\n  subresourceSet,\n  badPortsSet,\n  redirectStatusSet,\n  corsSafeListedMethodsSet,\n  safeMethodsSet,\n  forbiddenMethodsSet,\n  referrerPolicySet\n}\n"]}}