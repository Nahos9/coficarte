{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});const Client=require(\"./lib/dispatcher/client\");const Dispatcher=require(\"./lib/dispatcher/dispatcher\");const Pool=require(\"./lib/dispatcher/pool\");const BalancedPool=require(\"./lib/dispatcher/balanced-pool\");const Agent=require(\"./lib/dispatcher/agent\");const ProxyAgent=require(\"./lib/dispatcher/proxy-agent\");const EnvHttpProxyAgent=require(\"./lib/dispatcher/env-http-proxy-agent\");const RetryAgent=require(\"./lib/dispatcher/retry-agent\");const errors=require(\"./lib/core/errors\");const util=require(\"./lib/core/util\");const{InvalidArgumentError}=errors;const api=require(\"./lib/api\");const buildConnector=require(\"./lib/core/connect\");const MockClient=require(\"./lib/mock/mock-client\");const MockAgent=require(\"./lib/mock/mock-agent\");const MockPool=require(\"./lib/mock/mock-pool\");const mockErrors=require(\"./lib/mock/mock-errors\");const RetryHandler=require(\"./lib/handler/retry-handler\");const{getGlobalDispatcher,setGlobalDispatcher}=require(\"./lib/global\");const DecoratorHandler=require(\"./lib/handler/decorator-handler\");const RedirectHandler=require(\"./lib/handler/redirect-handler\");const createRedirectInterceptor=require(\"./lib/interceptor/redirect-interceptor\");Object.assign(Dispatcher.prototype,api);module.exports.Dispatcher=Dispatcher;module.exports.Client=Client;module.exports.Pool=Pool;module.exports.BalancedPool=BalancedPool;module.exports.Agent=Agent;module.exports.ProxyAgent=ProxyAgent;module.exports.EnvHttpProxyAgent=EnvHttpProxyAgent;module.exports.RetryAgent=RetryAgent;module.exports.RetryHandler=RetryHandler;module.exports.DecoratorHandler=DecoratorHandler;module.exports.RedirectHandler=RedirectHandler;module.exports.createRedirectInterceptor=createRedirectInterceptor;module.exports.interceptors={redirect:require(\"./lib/interceptor/redirect\"),retry:require(\"./lib/interceptor/retry\"),dump:require(\"./lib/interceptor/dump\")};module.exports.buildConnector=buildConnector;module.exports.errors=errors;module.exports.util={parseHeaders:util.parseHeaders,headerNameToString:util.headerNameToString};function makeDispatcher(fn){return(url,opts,handler)=>{if(typeof opts===\"function\"){handler=opts;opts=null}if(!url||typeof url!==\"string\"&&typeof url!==\"object\"&&!(url instanceof URL)){throw new InvalidArgumentError(\"invalid url\")}if(opts!=null&&typeof opts!==\"object\"){throw new InvalidArgumentError(\"invalid opts\")}if(opts&&opts.path!=null){if(typeof opts.path!==\"string\"){throw new InvalidArgumentError(\"invalid opts.path\")}let path=opts.path;if(!opts.path.startsWith(\"/\")){path=`/${path}`}url=new URL(util.parseOrigin(url).origin+path)}else{if(!opts){opts=typeof url===\"object\"?url:{}}url=util.parseURL(url)}const{agent,dispatcher=getGlobalDispatcher()}=opts;if(agent){throw new InvalidArgumentError(\"unsupported opts.agent. Did you mean opts.client?\")}return fn.call(dispatcher,{...opts,origin:url.origin,path:url.search?`${url.pathname}${url.search}`:url.pathname,method:opts.method||(opts.body?\"PUT\":\"GET\")},handler)}}__name(makeDispatcher,\"makeDispatcher\");module.exports.setGlobalDispatcher=setGlobalDispatcher;module.exports.getGlobalDispatcher=getGlobalDispatcher;const fetchImpl=require(\"./lib/web/fetch\").fetch;module.exports.fetch=__name(async function fetch(init,options=void 0){try{return await fetchImpl(init,options)}catch(err){if(err&&typeof err===\"object\"){Error.captureStackTrace(err)}throw err}},\"fetch\");module.exports.Headers=require(\"./lib/web/fetch/headers\").Headers;module.exports.Response=require(\"./lib/web/fetch/response\").Response;module.exports.Request=require(\"./lib/web/fetch/request\").Request;module.exports.FormData=require(\"./lib/web/fetch/formdata\").FormData;module.exports.File=globalThis.File??require(\"node:buffer\").File;module.exports.FileReader=require(\"./lib/web/fileapi/filereader\").FileReader;const{setGlobalOrigin,getGlobalOrigin}=require(\"./lib/web/fetch/global\");module.exports.setGlobalOrigin=setGlobalOrigin;module.exports.getGlobalOrigin=getGlobalOrigin;const{CacheStorage}=require(\"./lib/web/cache/cachestorage\");const{kConstruct}=require(\"./lib/web/cache/symbols\");module.exports.caches=new CacheStorage(kConstruct);const{deleteCookie,getCookies,getSetCookies,setCookie}=require(\"./lib/web/cookies\");module.exports.deleteCookie=deleteCookie;module.exports.getCookies=getCookies;module.exports.getSetCookies=getSetCookies;module.exports.setCookie=setCookie;const{parseMIMEType,serializeAMimeType}=require(\"./lib/web/fetch/data-url\");module.exports.parseMIMEType=parseMIMEType;module.exports.serializeAMimeType=serializeAMimeType;const{CloseEvent,ErrorEvent,MessageEvent}=require(\"./lib/web/websocket/events\");module.exports.WebSocket=require(\"./lib/web/websocket/websocket\").WebSocket;module.exports.CloseEvent=CloseEvent;module.exports.ErrorEvent=ErrorEvent;module.exports.MessageEvent=MessageEvent;module.exports.request=makeDispatcher(api.request);module.exports.stream=makeDispatcher(api.stream);module.exports.pipeline=makeDispatcher(api.pipeline);module.exports.connect=makeDispatcher(api.connect);module.exports.upgrade=makeDispatcher(api.upgrade);module.exports.MockClient=MockClient;module.exports.MockPool=MockPool;module.exports.MockAgent=MockAgent;module.exports.mockErrors=mockErrors;const{EventSource}=require(\"./lib/web/eventsource/eventsource\");module.exports.EventSource=EventSource;\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":[],"sources":["/home/creditga/CofiCarte/node_modules/.pnpm/undici@6.21.0/node_modules/undici/index.js"],"sourcesContent":["'use strict'\n\nconst Client = require('./lib/dispatcher/client')\nconst Dispatcher = require('./lib/dispatcher/dispatcher')\nconst Pool = require('./lib/dispatcher/pool')\nconst BalancedPool = require('./lib/dispatcher/balanced-pool')\nconst Agent = require('./lib/dispatcher/agent')\nconst ProxyAgent = require('./lib/dispatcher/proxy-agent')\nconst EnvHttpProxyAgent = require('./lib/dispatcher/env-http-proxy-agent')\nconst RetryAgent = require('./lib/dispatcher/retry-agent')\nconst errors = require('./lib/core/errors')\nconst util = require('./lib/core/util')\nconst { InvalidArgumentError } = errors\nconst api = require('./lib/api')\nconst buildConnector = require('./lib/core/connect')\nconst MockClient = require('./lib/mock/mock-client')\nconst MockAgent = require('./lib/mock/mock-agent')\nconst MockPool = require('./lib/mock/mock-pool')\nconst mockErrors = require('./lib/mock/mock-errors')\nconst RetryHandler = require('./lib/handler/retry-handler')\nconst { getGlobalDispatcher, setGlobalDispatcher } = require('./lib/global')\nconst DecoratorHandler = require('./lib/handler/decorator-handler')\nconst RedirectHandler = require('./lib/handler/redirect-handler')\nconst createRedirectInterceptor = require('./lib/interceptor/redirect-interceptor')\n\nObject.assign(Dispatcher.prototype, api)\n\nmodule.exports.Dispatcher = Dispatcher\nmodule.exports.Client = Client\nmodule.exports.Pool = Pool\nmodule.exports.BalancedPool = BalancedPool\nmodule.exports.Agent = Agent\nmodule.exports.ProxyAgent = ProxyAgent\nmodule.exports.EnvHttpProxyAgent = EnvHttpProxyAgent\nmodule.exports.RetryAgent = RetryAgent\nmodule.exports.RetryHandler = RetryHandler\n\nmodule.exports.DecoratorHandler = DecoratorHandler\nmodule.exports.RedirectHandler = RedirectHandler\nmodule.exports.createRedirectInterceptor = createRedirectInterceptor\nmodule.exports.interceptors = {\n  redirect: require('./lib/interceptor/redirect'),\n  retry: require('./lib/interceptor/retry'),\n  dump: require('./lib/interceptor/dump')\n}\n\nmodule.exports.buildConnector = buildConnector\nmodule.exports.errors = errors\nmodule.exports.util = {\n  parseHeaders: util.parseHeaders,\n  headerNameToString: util.headerNameToString\n}\n\nfunction makeDispatcher (fn) {\n  return (url, opts, handler) => {\n    if (typeof opts === 'function') {\n      handler = opts\n      opts = null\n    }\n\n    if (!url || (typeof url !== 'string' && typeof url !== 'object' && !(url instanceof URL))) {\n      throw new InvalidArgumentError('invalid url')\n    }\n\n    if (opts != null && typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    if (opts && opts.path != null) {\n      if (typeof opts.path !== 'string') {\n        throw new InvalidArgumentError('invalid opts.path')\n      }\n\n      let path = opts.path\n      if (!opts.path.startsWith('/')) {\n        path = `/${path}`\n      }\n\n      url = new URL(util.parseOrigin(url).origin + path)\n    } else {\n      if (!opts) {\n        opts = typeof url === 'object' ? url : {}\n      }\n\n      url = util.parseURL(url)\n    }\n\n    const { agent, dispatcher = getGlobalDispatcher() } = opts\n\n    if (agent) {\n      throw new InvalidArgumentError('unsupported opts.agent. Did you mean opts.client?')\n    }\n\n    return fn.call(dispatcher, {\n      ...opts,\n      origin: url.origin,\n      path: url.search ? `${url.pathname}${url.search}` : url.pathname,\n      method: opts.method || (opts.body ? 'PUT' : 'GET')\n    }, handler)\n  }\n}\n\nmodule.exports.setGlobalDispatcher = setGlobalDispatcher\nmodule.exports.getGlobalDispatcher = getGlobalDispatcher\n\nconst fetchImpl = require('./lib/web/fetch').fetch\nmodule.exports.fetch = async function fetch (init, options = undefined) {\n  try {\n    return await fetchImpl(init, options)\n  } catch (err) {\n    if (err && typeof err === 'object') {\n      Error.captureStackTrace(err)\n    }\n\n    throw err\n  }\n}\nmodule.exports.Headers = require('./lib/web/fetch/headers').Headers\nmodule.exports.Response = require('./lib/web/fetch/response').Response\nmodule.exports.Request = require('./lib/web/fetch/request').Request\nmodule.exports.FormData = require('./lib/web/fetch/formdata').FormData\nmodule.exports.File = globalThis.File ?? require('node:buffer').File\nmodule.exports.FileReader = require('./lib/web/fileapi/filereader').FileReader\n\nconst { setGlobalOrigin, getGlobalOrigin } = require('./lib/web/fetch/global')\n\nmodule.exports.setGlobalOrigin = setGlobalOrigin\nmodule.exports.getGlobalOrigin = getGlobalOrigin\n\nconst { CacheStorage } = require('./lib/web/cache/cachestorage')\nconst { kConstruct } = require('./lib/web/cache/symbols')\n\n// Cache & CacheStorage are tightly coupled with fetch. Even if it may run\n// in an older version of Node, it doesn't have any use without fetch.\nmodule.exports.caches = new CacheStorage(kConstruct)\n\nconst { deleteCookie, getCookies, getSetCookies, setCookie } = require('./lib/web/cookies')\n\nmodule.exports.deleteCookie = deleteCookie\nmodule.exports.getCookies = getCookies\nmodule.exports.getSetCookies = getSetCookies\nmodule.exports.setCookie = setCookie\n\nconst { parseMIMEType, serializeAMimeType } = require('./lib/web/fetch/data-url')\n\nmodule.exports.parseMIMEType = parseMIMEType\nmodule.exports.serializeAMimeType = serializeAMimeType\n\nconst { CloseEvent, ErrorEvent, MessageEvent } = require('./lib/web/websocket/events')\nmodule.exports.WebSocket = require('./lib/web/websocket/websocket').WebSocket\nmodule.exports.CloseEvent = CloseEvent\nmodule.exports.ErrorEvent = ErrorEvent\nmodule.exports.MessageEvent = MessageEvent\n\nmodule.exports.request = makeDispatcher(api.request)\nmodule.exports.stream = makeDispatcher(api.stream)\nmodule.exports.pipeline = makeDispatcher(api.pipeline)\nmodule.exports.connect = makeDispatcher(api.connect)\nmodule.exports.upgrade = makeDispatcher(api.upgrade)\n\nmodule.exports.MockClient = MockClient\nmodule.exports.MockPool = MockPool\nmodule.exports.MockAgent = MockAgent\nmodule.exports.mockErrors = mockErrors\n\nconst { EventSource } = require('./lib/web/eventsource/eventsource')\n\nmodule.exports.EventSource = EventSource\n"]}}