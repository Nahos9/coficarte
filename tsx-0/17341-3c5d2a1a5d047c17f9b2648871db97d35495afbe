{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});const assert=require(\"node:assert\");const{kDestroyed,kBodyUsed,kListeners,kBody}=require(\"./symbols\");const{IncomingMessage}=require(\"node:http\");const stream=require(\"node:stream\");const net=require(\"node:net\");const{Blob}=require(\"node:buffer\");const nodeUtil=require(\"node:util\");const{stringify}=require(\"node:querystring\");const{EventEmitter:EE}=require(\"node:events\");const{InvalidArgumentError}=require(\"./errors\");const{headerNameLowerCasedRecord}=require(\"./constants\");const{tree}=require(\"./tree\");const[nodeMajor,nodeMinor]=process.versions.node.split(\".\").map(v=>Number(v));class BodyAsyncIterable{static{__name(this,\"BodyAsyncIterable\")}constructor(body){this[kBody]=body;this[kBodyUsed]=false}async*[Symbol.asyncIterator](){assert(!this[kBodyUsed],\"disturbed\");this[kBodyUsed]=true;yield*this[kBody]}}function wrapRequestBody(body){if(isStream(body)){if(bodyLength(body)===0){body.on(\"data\",function(){assert(false)})}if(typeof body.readableDidRead!==\"boolean\"){body[kBodyUsed]=false;EE.prototype.on.call(body,\"data\",function(){this[kBodyUsed]=true})}return body}else if(body&&typeof body.pipeTo===\"function\"){return new BodyAsyncIterable(body)}else if(body&&typeof body!==\"string\"&&!ArrayBuffer.isView(body)&&isIterable(body)){return new BodyAsyncIterable(body)}else{return body}}__name(wrapRequestBody,\"wrapRequestBody\");function nop(){}__name(nop,\"nop\");function isStream(obj){return obj&&typeof obj===\"object\"&&typeof obj.pipe===\"function\"&&typeof obj.on===\"function\"}__name(isStream,\"isStream\");function isBlobLike(object){if(object===null){return false}else if(object instanceof Blob){return true}else if(typeof object!==\"object\"){return false}else{const sTag=object[Symbol.toStringTag];return(sTag===\"Blob\"||sTag===\"File\")&&(\"stream\"in object&&typeof object.stream===\"function\"||\"arrayBuffer\"in object&&typeof object.arrayBuffer===\"function\")}}__name(isBlobLike,\"isBlobLike\");function buildURL(url,queryParams){if(url.includes(\"?\")||url.includes(\"#\")){throw new Error('Query params cannot be passed when url already contains \"?\" or \"#\".')}const stringified=stringify(queryParams);if(stringified){url+=\"?\"+stringified}return url}__name(buildURL,\"buildURL\");function isValidPort(port){const value=parseInt(port,10);return value===Number(port)&&value>=0&&value<=65535}__name(isValidPort,\"isValidPort\");function isHttpOrHttpsPrefixed(value){return value!=null&&value[0]===\"h\"&&value[1]===\"t\"&&value[2]===\"t\"&&value[3]===\"p\"&&(value[4]===\":\"||value[4]===\"s\"&&value[5]===\":\")}__name(isHttpOrHttpsPrefixed,\"isHttpOrHttpsPrefixed\");function parseURL(url){if(typeof url===\"string\"){url=new URL(url);if(!isHttpOrHttpsPrefixed(url.origin||url.protocol)){throw new InvalidArgumentError(\"Invalid URL protocol: the URL must start with `http:` or `https:`.\")}return url}if(!url||typeof url!==\"object\"){throw new InvalidArgumentError(\"Invalid URL: The URL argument must be a non-null object.\")}if(!(url instanceof URL)){if(url.port!=null&&url.port!==\"\"&&isValidPort(url.port)===false){throw new InvalidArgumentError(\"Invalid URL: port must be a valid integer or a string representation of an integer.\")}if(url.path!=null&&typeof url.path!==\"string\"){throw new InvalidArgumentError(\"Invalid URL path: the path must be a string or null/undefined.\")}if(url.pathname!=null&&typeof url.pathname!==\"string\"){throw new InvalidArgumentError(\"Invalid URL pathname: the pathname must be a string or null/undefined.\")}if(url.hostname!=null&&typeof url.hostname!==\"string\"){throw new InvalidArgumentError(\"Invalid URL hostname: the hostname must be a string or null/undefined.\")}if(url.origin!=null&&typeof url.origin!==\"string\"){throw new InvalidArgumentError(\"Invalid URL origin: the origin must be a string or null/undefined.\")}if(!isHttpOrHttpsPrefixed(url.origin||url.protocol)){throw new InvalidArgumentError(\"Invalid URL protocol: the URL must start with `http:` or `https:`.\")}const port=url.port!=null?url.port:url.protocol===\"https:\"?443:80;let origin=url.origin!=null?url.origin:`${url.protocol||\"\"}//${url.hostname||\"\"}:${port}`;let path=url.path!=null?url.path:`${url.pathname||\"\"}${url.search||\"\"}`;if(origin[origin.length-1]===\"/\"){origin=origin.slice(0,origin.length-1)}if(path&&path[0]!==\"/\"){path=`/${path}`}return new URL(`${origin}${path}`)}if(!isHttpOrHttpsPrefixed(url.origin||url.protocol)){throw new InvalidArgumentError(\"Invalid URL protocol: the URL must start with `http:` or `https:`.\")}return url}__name(parseURL,\"parseURL\");function parseOrigin(url){url=parseURL(url);if(url.pathname!==\"/\"||url.search||url.hash){throw new InvalidArgumentError(\"invalid url\")}return url}__name(parseOrigin,\"parseOrigin\");function getHostname(host){if(host[0]===\"[\"){const idx2=host.indexOf(\"]\");assert(idx2!==-1);return host.substring(1,idx2)}const idx=host.indexOf(\":\");if(idx===-1)return host;return host.substring(0,idx)}__name(getHostname,\"getHostname\");function getServerName(host){if(!host){return null}assert(typeof host===\"string\");const servername=getHostname(host);if(net.isIP(servername)){return\"\"}return servername}__name(getServerName,\"getServerName\");function deepClone(obj){return JSON.parse(JSON.stringify(obj))}__name(deepClone,\"deepClone\");function isAsyncIterable(obj){return!!(obj!=null&&typeof obj[Symbol.asyncIterator]===\"function\")}__name(isAsyncIterable,\"isAsyncIterable\");function isIterable(obj){return!!(obj!=null&&(typeof obj[Symbol.iterator]===\"function\"||typeof obj[Symbol.asyncIterator]===\"function\"))}__name(isIterable,\"isIterable\");function bodyLength(body){if(body==null){return 0}else if(isStream(body)){const state=body._readableState;return state&&state.objectMode===false&&state.ended===true&&Number.isFinite(state.length)?state.length:null}else if(isBlobLike(body)){return body.size!=null?body.size:null}else if(isBuffer(body)){return body.byteLength}return null}__name(bodyLength,\"bodyLength\");function isDestroyed(body){return body&&!!(body.destroyed||body[kDestroyed]||stream.isDestroyed?.(body))}__name(isDestroyed,\"isDestroyed\");function destroy(stream2,err){if(stream2==null||!isStream(stream2)||isDestroyed(stream2)){return}if(typeof stream2.destroy===\"function\"){if(Object.getPrototypeOf(stream2).constructor===IncomingMessage){stream2.socket=null}stream2.destroy(err)}else if(err){queueMicrotask(()=>{stream2.emit(\"error\",err)})}if(stream2.destroyed!==true){stream2[kDestroyed]=true}}__name(destroy,\"destroy\");const KEEPALIVE_TIMEOUT_EXPR=/timeout=(\\d+)/;function parseKeepAliveTimeout(val){const m=val.toString().match(KEEPALIVE_TIMEOUT_EXPR);return m?parseInt(m[1],10)*1e3:null}__name(parseKeepAliveTimeout,\"parseKeepAliveTimeout\");function headerNameToString(value){return typeof value===\"string\"?headerNameLowerCasedRecord[value]??value.toLowerCase():tree.lookup(value)??value.toString(\"latin1\").toLowerCase()}__name(headerNameToString,\"headerNameToString\");function bufferToLowerCasedHeaderName(value){return tree.lookup(value)??value.toString(\"latin1\").toLowerCase()}__name(bufferToLowerCasedHeaderName,\"bufferToLowerCasedHeaderName\");function parseHeaders(headers,obj){if(obj===void 0)obj={};for(let i=0;i<headers.length;i+=2){const key=headerNameToString(headers[i]);let val=obj[key];if(val){if(typeof val===\"string\"){val=[val];obj[key]=val}val.push(headers[i+1].toString(\"utf8\"))}else{const headersValue=headers[i+1];if(typeof headersValue===\"string\"){obj[key]=headersValue}else{obj[key]=Array.isArray(headersValue)?headersValue.map(x=>x.toString(\"utf8\")):headersValue.toString(\"utf8\")}}}if(\"content-length\"in obj&&\"content-disposition\"in obj){obj[\"content-disposition\"]=Buffer.from(obj[\"content-disposition\"]).toString(\"latin1\")}return obj}__name(parseHeaders,\"parseHeaders\");function parseRawHeaders(headers){const len=headers.length;const ret=new Array(len);let hasContentLength=false;let contentDispositionIdx=-1;let key;let val;let kLen=0;for(let n=0;n<headers.length;n+=2){key=headers[n];val=headers[n+1];typeof key!==\"string\"&&(key=key.toString());typeof val!==\"string\"&&(val=val.toString(\"utf8\"));kLen=key.length;if(kLen===14&&key[7]===\"-\"&&(key===\"content-length\"||key.toLowerCase()===\"content-length\")){hasContentLength=true}else if(kLen===19&&key[7]===\"-\"&&(key===\"content-disposition\"||key.toLowerCase()===\"content-disposition\")){contentDispositionIdx=n+1}ret[n]=key;ret[n+1]=val}if(hasContentLength&&contentDispositionIdx!==-1){ret[contentDispositionIdx]=Buffer.from(ret[contentDispositionIdx]).toString(\"latin1\")}return ret}__name(parseRawHeaders,\"parseRawHeaders\");function isBuffer(buffer){return buffer instanceof Uint8Array||Buffer.isBuffer(buffer)}__name(isBuffer,\"isBuffer\");function validateHandler(handler,method,upgrade){if(!handler||typeof handler!==\"object\"){throw new InvalidArgumentError(\"handler must be an object\")}if(typeof handler.onConnect!==\"function\"){throw new InvalidArgumentError(\"invalid onConnect method\")}if(typeof handler.onError!==\"function\"){throw new InvalidArgumentError(\"invalid onError method\")}if(typeof handler.onBodySent!==\"function\"&&handler.onBodySent!==void 0){throw new InvalidArgumentError(\"invalid onBodySent method\")}if(upgrade||method===\"CONNECT\"){if(typeof handler.onUpgrade!==\"function\"){throw new InvalidArgumentError(\"invalid onUpgrade method\")}}else{if(typeof handler.onHeaders!==\"function\"){throw new InvalidArgumentError(\"invalid onHeaders method\")}if(typeof handler.onData!==\"function\"){throw new InvalidArgumentError(\"invalid onData method\")}if(typeof handler.onComplete!==\"function\"){throw new InvalidArgumentError(\"invalid onComplete method\")}}}__name(validateHandler,\"validateHandler\");function isDisturbed(body){return!!(body&&(stream.isDisturbed(body)||body[kBodyUsed]))}__name(isDisturbed,\"isDisturbed\");function isErrored(body){return!!(body&&stream.isErrored(body))}__name(isErrored,\"isErrored\");function isReadable(body){return!!(body&&stream.isReadable(body))}__name(isReadable,\"isReadable\");function getSocketInfo(socket){return{localAddress:socket.localAddress,localPort:socket.localPort,remoteAddress:socket.remoteAddress,remotePort:socket.remotePort,remoteFamily:socket.remoteFamily,timeout:socket.timeout,bytesWritten:socket.bytesWritten,bytesRead:socket.bytesRead}}__name(getSocketInfo,\"getSocketInfo\");function ReadableStreamFrom(iterable){let iterator;return new ReadableStream({async start(){iterator=iterable[Symbol.asyncIterator]()},async pull(controller){const{done,value}=await iterator.next();if(done){queueMicrotask(()=>{controller.close();controller.byobRequest?.respond(0)})}else{const buf=Buffer.isBuffer(value)?value:Buffer.from(value);if(buf.byteLength){controller.enqueue(new Uint8Array(buf))}}return controller.desiredSize>0},async cancel(reason){await iterator.return()},type:\"bytes\"})}__name(ReadableStreamFrom,\"ReadableStreamFrom\");function isFormDataLike(object){return object&&typeof object===\"object\"&&typeof object.append===\"function\"&&typeof object.delete===\"function\"&&typeof object.get===\"function\"&&typeof object.getAll===\"function\"&&typeof object.has===\"function\"&&typeof object.set===\"function\"&&object[Symbol.toStringTag]===\"FormData\"}__name(isFormDataLike,\"isFormDataLike\");function addAbortListener(signal,listener){if(\"addEventListener\"in signal){signal.addEventListener(\"abort\",listener,{once:true});return()=>signal.removeEventListener(\"abort\",listener)}signal.addListener(\"abort\",listener);return()=>signal.removeListener(\"abort\",listener)}__name(addAbortListener,\"addAbortListener\");const hasToWellFormed=typeof String.prototype.toWellFormed===\"function\";const hasIsWellFormed=typeof String.prototype.isWellFormed===\"function\";function toUSVString(val){return hasToWellFormed?`${val}`.toWellFormed():nodeUtil.toUSVString(val)}__name(toUSVString,\"toUSVString\");function isUSVString(val){return hasIsWellFormed?`${val}`.isWellFormed():toUSVString(val)===`${val}`}__name(isUSVString,\"isUSVString\");function isTokenCharCode(c){switch(c){case 34:case 40:case 41:case 44:case 47:case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 91:case 92:case 93:case 123:case 125:return false;default:return c>=33&&c<=126}}__name(isTokenCharCode,\"isTokenCharCode\");function isValidHTTPToken(characters){if(characters.length===0){return false}for(let i=0;i<characters.length;++i){if(!isTokenCharCode(characters.charCodeAt(i))){return false}}return true}__name(isValidHTTPToken,\"isValidHTTPToken\");const headerCharRegex=/[^\\t\\x20-\\x7e\\x80-\\xff]/;function isValidHeaderValue(characters){return!headerCharRegex.test(characters)}__name(isValidHeaderValue,\"isValidHeaderValue\");function parseRangeHeader(range){if(range==null||range===\"\")return{start:0,end:null,size:null};const m=range?range.match(/^bytes (\\d+)-(\\d+)\\/(\\d+)?$/):null;return m?{start:parseInt(m[1]),end:m[2]?parseInt(m[2]):null,size:m[3]?parseInt(m[3]):null}:null}__name(parseRangeHeader,\"parseRangeHeader\");function addListener(obj,name,listener){const listeners=obj[kListeners]??=[];listeners.push([name,listener]);obj.on(name,listener);return obj}__name(addListener,\"addListener\");function removeAllListeners(obj){for(const[name,listener]of obj[kListeners]??[]){obj.removeListener(name,listener)}obj[kListeners]=null}__name(removeAllListeners,\"removeAllListeners\");function errorRequest(client,request,err){try{request.onError(err);assert(request.aborted)}catch(err2){client.emit(\"error\",err2)}}__name(errorRequest,\"errorRequest\");const kEnumerableProperty=Object.create(null);kEnumerableProperty.enumerable=true;const normalizedMethodRecordsBase={delete:\"DELETE\",DELETE:\"DELETE\",get:\"GET\",GET:\"GET\",head:\"HEAD\",HEAD:\"HEAD\",options:\"OPTIONS\",OPTIONS:\"OPTIONS\",post:\"POST\",POST:\"POST\",put:\"PUT\",PUT:\"PUT\"};const normalizedMethodRecords={...normalizedMethodRecordsBase,patch:\"patch\",PATCH:\"PATCH\"};Object.setPrototypeOf(normalizedMethodRecordsBase,null);Object.setPrototypeOf(normalizedMethodRecords,null);module.exports={kEnumerableProperty,nop,isDisturbed,isErrored,isReadable,toUSVString,isUSVString,isBlobLike,parseOrigin,parseURL,getServerName,isStream,isIterable,isAsyncIterable,isDestroyed,headerNameToString,bufferToLowerCasedHeaderName,addListener,removeAllListeners,errorRequest,parseRawHeaders,parseHeaders,parseKeepAliveTimeout,destroy,bodyLength,deepClone,ReadableStreamFrom,isBuffer,validateHandler,getSocketInfo,isFormDataLike,buildURL,addAbortListener,isValidHTTPToken,isValidHeaderValue,isTokenCharCode,parseRangeHeader,normalizedMethodRecordsBase,normalizedMethodRecords,isValidPort,isHttpOrHttpsPrefixed,nodeMajor,nodeMinor,safeHTTPMethods:[\"GET\",\"HEAD\",\"OPTIONS\",\"TRACE\"],wrapRequestBody};\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":["idx","stream","err"],"sources":["/home/creditga/CofiCarte/node_modules/.pnpm/undici@6.21.0/node_modules/undici/lib/core/util.js"],"sourcesContent":["'use strict'\n\nconst assert = require('node:assert')\nconst { kDestroyed, kBodyUsed, kListeners, kBody } = require('./symbols')\nconst { IncomingMessage } = require('node:http')\nconst stream = require('node:stream')\nconst net = require('node:net')\nconst { Blob } = require('node:buffer')\nconst nodeUtil = require('node:util')\nconst { stringify } = require('node:querystring')\nconst { EventEmitter: EE } = require('node:events')\nconst { InvalidArgumentError } = require('./errors')\nconst { headerNameLowerCasedRecord } = require('./constants')\nconst { tree } = require('./tree')\n\nconst [nodeMajor, nodeMinor] = process.versions.node.split('.').map(v => Number(v))\n\nclass BodyAsyncIterable {\n  constructor (body) {\n    this[kBody] = body\n    this[kBodyUsed] = false\n  }\n\n  async * [Symbol.asyncIterator] () {\n    assert(!this[kBodyUsed], 'disturbed')\n    this[kBodyUsed] = true\n    yield * this[kBody]\n  }\n}\n\nfunction wrapRequestBody (body) {\n  if (isStream(body)) {\n    // TODO (fix): Provide some way for the user to cache the file to e.g. /tmp\n    // so that it can be dispatched again?\n    // TODO (fix): Do we need 100-expect support to provide a way to do this properly?\n    if (bodyLength(body) === 0) {\n      body\n        .on('data', function () {\n          assert(false)\n        })\n    }\n\n    if (typeof body.readableDidRead !== 'boolean') {\n      body[kBodyUsed] = false\n      EE.prototype.on.call(body, 'data', function () {\n        this[kBodyUsed] = true\n      })\n    }\n\n    return body\n  } else if (body && typeof body.pipeTo === 'function') {\n    // TODO (fix): We can't access ReadableStream internal state\n    // to determine whether or not it has been disturbed. This is just\n    // a workaround.\n    return new BodyAsyncIterable(body)\n  } else if (\n    body &&\n    typeof body !== 'string' &&\n    !ArrayBuffer.isView(body) &&\n    isIterable(body)\n  ) {\n    // TODO: Should we allow re-using iterable if !this.opts.idempotent\n    // or through some other flag?\n    return new BodyAsyncIterable(body)\n  } else {\n    return body\n  }\n}\n\nfunction nop () {}\n\nfunction isStream (obj) {\n  return obj && typeof obj === 'object' && typeof obj.pipe === 'function' && typeof obj.on === 'function'\n}\n\n// based on https://github.com/node-fetch/fetch-blob/blob/8ab587d34080de94140b54f07168451e7d0b655e/index.js#L229-L241 (MIT License)\nfunction isBlobLike (object) {\n  if (object === null) {\n    return false\n  } else if (object instanceof Blob) {\n    return true\n  } else if (typeof object !== 'object') {\n    return false\n  } else {\n    const sTag = object[Symbol.toStringTag]\n\n    return (sTag === 'Blob' || sTag === 'File') && (\n      ('stream' in object && typeof object.stream === 'function') ||\n      ('arrayBuffer' in object && typeof object.arrayBuffer === 'function')\n    )\n  }\n}\n\nfunction buildURL (url, queryParams) {\n  if (url.includes('?') || url.includes('#')) {\n    throw new Error('Query params cannot be passed when url already contains \"?\" or \"#\".')\n  }\n\n  const stringified = stringify(queryParams)\n\n  if (stringified) {\n    url += '?' + stringified\n  }\n\n  return url\n}\n\nfunction isValidPort (port) {\n  const value = parseInt(port, 10)\n  return (\n    value === Number(port) &&\n    value >= 0 &&\n    value <= 65535\n  )\n}\n\nfunction isHttpOrHttpsPrefixed (value) {\n  return (\n    value != null &&\n    value[0] === 'h' &&\n    value[1] === 't' &&\n    value[2] === 't' &&\n    value[3] === 'p' &&\n    (\n      value[4] === ':' ||\n      (\n        value[4] === 's' &&\n        value[5] === ':'\n      )\n    )\n  )\n}\n\nfunction parseURL (url) {\n  if (typeof url === 'string') {\n    url = new URL(url)\n\n    if (!isHttpOrHttpsPrefixed(url.origin || url.protocol)) {\n      throw new InvalidArgumentError('Invalid URL protocol: the URL must start with `http:` or `https:`.')\n    }\n\n    return url\n  }\n\n  if (!url || typeof url !== 'object') {\n    throw new InvalidArgumentError('Invalid URL: The URL argument must be a non-null object.')\n  }\n\n  if (!(url instanceof URL)) {\n    if (url.port != null && url.port !== '' && isValidPort(url.port) === false) {\n      throw new InvalidArgumentError('Invalid URL: port must be a valid integer or a string representation of an integer.')\n    }\n\n    if (url.path != null && typeof url.path !== 'string') {\n      throw new InvalidArgumentError('Invalid URL path: the path must be a string or null/undefined.')\n    }\n\n    if (url.pathname != null && typeof url.pathname !== 'string') {\n      throw new InvalidArgumentError('Invalid URL pathname: the pathname must be a string or null/undefined.')\n    }\n\n    if (url.hostname != null && typeof url.hostname !== 'string') {\n      throw new InvalidArgumentError('Invalid URL hostname: the hostname must be a string or null/undefined.')\n    }\n\n    if (url.origin != null && typeof url.origin !== 'string') {\n      throw new InvalidArgumentError('Invalid URL origin: the origin must be a string or null/undefined.')\n    }\n\n    if (!isHttpOrHttpsPrefixed(url.origin || url.protocol)) {\n      throw new InvalidArgumentError('Invalid URL protocol: the URL must start with `http:` or `https:`.')\n    }\n\n    const port = url.port != null\n      ? url.port\n      : (url.protocol === 'https:' ? 443 : 80)\n    let origin = url.origin != null\n      ? url.origin\n      : `${url.protocol || ''}//${url.hostname || ''}:${port}`\n    let path = url.path != null\n      ? url.path\n      : `${url.pathname || ''}${url.search || ''}`\n\n    if (origin[origin.length - 1] === '/') {\n      origin = origin.slice(0, origin.length - 1)\n    }\n\n    if (path && path[0] !== '/') {\n      path = `/${path}`\n    }\n    // new URL(path, origin) is unsafe when `path` contains an absolute URL\n    // From https://developer.mozilla.org/en-US/docs/Web/API/URL/URL:\n    // If first parameter is a relative URL, second param is required, and will be used as the base URL.\n    // If first parameter is an absolute URL, a given second param will be ignored.\n    return new URL(`${origin}${path}`)\n  }\n\n  if (!isHttpOrHttpsPrefixed(url.origin || url.protocol)) {\n    throw new InvalidArgumentError('Invalid URL protocol: the URL must start with `http:` or `https:`.')\n  }\n\n  return url\n}\n\nfunction parseOrigin (url) {\n  url = parseURL(url)\n\n  if (url.pathname !== '/' || url.search || url.hash) {\n    throw new InvalidArgumentError('invalid url')\n  }\n\n  return url\n}\n\nfunction getHostname (host) {\n  if (host[0] === '[') {\n    const idx = host.indexOf(']')\n\n    assert(idx !== -1)\n    return host.substring(1, idx)\n  }\n\n  const idx = host.indexOf(':')\n  if (idx === -1) return host\n\n  return host.substring(0, idx)\n}\n\n// IP addresses are not valid server names per RFC6066\n// > Currently, the only server names supported are DNS hostnames\nfunction getServerName (host) {\n  if (!host) {\n    return null\n  }\n\n  assert(typeof host === 'string')\n\n  const servername = getHostname(host)\n  if (net.isIP(servername)) {\n    return ''\n  }\n\n  return servername\n}\n\nfunction deepClone (obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n\nfunction isAsyncIterable (obj) {\n  return !!(obj != null && typeof obj[Symbol.asyncIterator] === 'function')\n}\n\nfunction isIterable (obj) {\n  return !!(obj != null && (typeof obj[Symbol.iterator] === 'function' || typeof obj[Symbol.asyncIterator] === 'function'))\n}\n\nfunction bodyLength (body) {\n  if (body == null) {\n    return 0\n  } else if (isStream(body)) {\n    const state = body._readableState\n    return state && state.objectMode === false && state.ended === true && Number.isFinite(state.length)\n      ? state.length\n      : null\n  } else if (isBlobLike(body)) {\n    return body.size != null ? body.size : null\n  } else if (isBuffer(body)) {\n    return body.byteLength\n  }\n\n  return null\n}\n\nfunction isDestroyed (body) {\n  return body && !!(body.destroyed || body[kDestroyed] || (stream.isDestroyed?.(body)))\n}\n\nfunction destroy (stream, err) {\n  if (stream == null || !isStream(stream) || isDestroyed(stream)) {\n    return\n  }\n\n  if (typeof stream.destroy === 'function') {\n    if (Object.getPrototypeOf(stream).constructor === IncomingMessage) {\n      // See: https://github.com/nodejs/node/pull/38505/files\n      stream.socket = null\n    }\n\n    stream.destroy(err)\n  } else if (err) {\n    queueMicrotask(() => {\n      stream.emit('error', err)\n    })\n  }\n\n  if (stream.destroyed !== true) {\n    stream[kDestroyed] = true\n  }\n}\n\nconst KEEPALIVE_TIMEOUT_EXPR = /timeout=(\\d+)/\nfunction parseKeepAliveTimeout (val) {\n  const m = val.toString().match(KEEPALIVE_TIMEOUT_EXPR)\n  return m ? parseInt(m[1], 10) * 1000 : null\n}\n\n/**\n * Retrieves a header name and returns its lowercase value.\n * @param {string | Buffer} value Header name\n * @returns {string}\n */\nfunction headerNameToString (value) {\n  return typeof value === 'string'\n    ? headerNameLowerCasedRecord[value] ?? value.toLowerCase()\n    : tree.lookup(value) ?? value.toString('latin1').toLowerCase()\n}\n\n/**\n * Receive the buffer as a string and return its lowercase value.\n * @param {Buffer} value Header name\n * @returns {string}\n */\nfunction bufferToLowerCasedHeaderName (value) {\n  return tree.lookup(value) ?? value.toString('latin1').toLowerCase()\n}\n\n/**\n * @param {Record<string, string | string[]> | (Buffer | string | (Buffer | string)[])[]} headers\n * @param {Record<string, string | string[]>} [obj]\n * @returns {Record<string, string | string[]>}\n */\nfunction parseHeaders (headers, obj) {\n  if (obj === undefined) obj = {}\n  for (let i = 0; i < headers.length; i += 2) {\n    const key = headerNameToString(headers[i])\n    let val = obj[key]\n\n    if (val) {\n      if (typeof val === 'string') {\n        val = [val]\n        obj[key] = val\n      }\n      val.push(headers[i + 1].toString('utf8'))\n    } else {\n      const headersValue = headers[i + 1]\n      if (typeof headersValue === 'string') {\n        obj[key] = headersValue\n      } else {\n        obj[key] = Array.isArray(headersValue) ? headersValue.map(x => x.toString('utf8')) : headersValue.toString('utf8')\n      }\n    }\n  }\n\n  // See https://github.com/nodejs/node/pull/46528\n  if ('content-length' in obj && 'content-disposition' in obj) {\n    obj['content-disposition'] = Buffer.from(obj['content-disposition']).toString('latin1')\n  }\n\n  return obj\n}\n\nfunction parseRawHeaders (headers) {\n  const len = headers.length\n  const ret = new Array(len)\n\n  let hasContentLength = false\n  let contentDispositionIdx = -1\n  let key\n  let val\n  let kLen = 0\n\n  for (let n = 0; n < headers.length; n += 2) {\n    key = headers[n]\n    val = headers[n + 1]\n\n    typeof key !== 'string' && (key = key.toString())\n    typeof val !== 'string' && (val = val.toString('utf8'))\n\n    kLen = key.length\n    if (kLen === 14 && key[7] === '-' && (key === 'content-length' || key.toLowerCase() === 'content-length')) {\n      hasContentLength = true\n    } else if (kLen === 19 && key[7] === '-' && (key === 'content-disposition' || key.toLowerCase() === 'content-disposition')) {\n      contentDispositionIdx = n + 1\n    }\n    ret[n] = key\n    ret[n + 1] = val\n  }\n\n  // See https://github.com/nodejs/node/pull/46528\n  if (hasContentLength && contentDispositionIdx !== -1) {\n    ret[contentDispositionIdx] = Buffer.from(ret[contentDispositionIdx]).toString('latin1')\n  }\n\n  return ret\n}\n\nfunction isBuffer (buffer) {\n  // See, https://github.com/mcollina/undici/pull/319\n  return buffer instanceof Uint8Array || Buffer.isBuffer(buffer)\n}\n\nfunction validateHandler (handler, method, upgrade) {\n  if (!handler || typeof handler !== 'object') {\n    throw new InvalidArgumentError('handler must be an object')\n  }\n\n  if (typeof handler.onConnect !== 'function') {\n    throw new InvalidArgumentError('invalid onConnect method')\n  }\n\n  if (typeof handler.onError !== 'function') {\n    throw new InvalidArgumentError('invalid onError method')\n  }\n\n  if (typeof handler.onBodySent !== 'function' && handler.onBodySent !== undefined) {\n    throw new InvalidArgumentError('invalid onBodySent method')\n  }\n\n  if (upgrade || method === 'CONNECT') {\n    if (typeof handler.onUpgrade !== 'function') {\n      throw new InvalidArgumentError('invalid onUpgrade method')\n    }\n  } else {\n    if (typeof handler.onHeaders !== 'function') {\n      throw new InvalidArgumentError('invalid onHeaders method')\n    }\n\n    if (typeof handler.onData !== 'function') {\n      throw new InvalidArgumentError('invalid onData method')\n    }\n\n    if (typeof handler.onComplete !== 'function') {\n      throw new InvalidArgumentError('invalid onComplete method')\n    }\n  }\n}\n\n// A body is disturbed if it has been read from and it cannot\n// be re-used without losing state or data.\nfunction isDisturbed (body) {\n  // TODO (fix): Why is body[kBodyUsed] needed?\n  return !!(body && (stream.isDisturbed(body) || body[kBodyUsed]))\n}\n\nfunction isErrored (body) {\n  return !!(body && stream.isErrored(body))\n}\n\nfunction isReadable (body) {\n  return !!(body && stream.isReadable(body))\n}\n\nfunction getSocketInfo (socket) {\n  return {\n    localAddress: socket.localAddress,\n    localPort: socket.localPort,\n    remoteAddress: socket.remoteAddress,\n    remotePort: socket.remotePort,\n    remoteFamily: socket.remoteFamily,\n    timeout: socket.timeout,\n    bytesWritten: socket.bytesWritten,\n    bytesRead: socket.bytesRead\n  }\n}\n\n/** @type {globalThis['ReadableStream']} */\nfunction ReadableStreamFrom (iterable) {\n  // We cannot use ReadableStream.from here because it does not return a byte stream.\n\n  let iterator\n  return new ReadableStream(\n    {\n      async start () {\n        iterator = iterable[Symbol.asyncIterator]()\n      },\n      async pull (controller) {\n        const { done, value } = await iterator.next()\n        if (done) {\n          queueMicrotask(() => {\n            controller.close()\n            controller.byobRequest?.respond(0)\n          })\n        } else {\n          const buf = Buffer.isBuffer(value) ? value : Buffer.from(value)\n          if (buf.byteLength) {\n            controller.enqueue(new Uint8Array(buf))\n          }\n        }\n        return controller.desiredSize > 0\n      },\n      async cancel (reason) {\n        await iterator.return()\n      },\n      type: 'bytes'\n    }\n  )\n}\n\n// The chunk should be a FormData instance and contains\n// all the required methods.\nfunction isFormDataLike (object) {\n  return (\n    object &&\n    typeof object === 'object' &&\n    typeof object.append === 'function' &&\n    typeof object.delete === 'function' &&\n    typeof object.get === 'function' &&\n    typeof object.getAll === 'function' &&\n    typeof object.has === 'function' &&\n    typeof object.set === 'function' &&\n    object[Symbol.toStringTag] === 'FormData'\n  )\n}\n\nfunction addAbortListener (signal, listener) {\n  if ('addEventListener' in signal) {\n    signal.addEventListener('abort', listener, { once: true })\n    return () => signal.removeEventListener('abort', listener)\n  }\n  signal.addListener('abort', listener)\n  return () => signal.removeListener('abort', listener)\n}\n\nconst hasToWellFormed = typeof String.prototype.toWellFormed === 'function'\nconst hasIsWellFormed = typeof String.prototype.isWellFormed === 'function'\n\n/**\n * @param {string} val\n */\nfunction toUSVString (val) {\n  return hasToWellFormed ? `${val}`.toWellFormed() : nodeUtil.toUSVString(val)\n}\n\n/**\n * @param {string} val\n */\n// TODO: move this to webidl\nfunction isUSVString (val) {\n  return hasIsWellFormed ? `${val}`.isWellFormed() : toUSVString(val) === `${val}`\n}\n\n/**\n * @see https://tools.ietf.org/html/rfc7230#section-3.2.6\n * @param {number} c\n */\nfunction isTokenCharCode (c) {\n  switch (c) {\n    case 0x22:\n    case 0x28:\n    case 0x29:\n    case 0x2c:\n    case 0x2f:\n    case 0x3a:\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x40:\n    case 0x5b:\n    case 0x5c:\n    case 0x5d:\n    case 0x7b:\n    case 0x7d:\n      // DQUOTE and \"(),/:;<=>?@[\\]{}\"\n      return false\n    default:\n      // VCHAR %x21-7E\n      return c >= 0x21 && c <= 0x7e\n  }\n}\n\n/**\n * @param {string} characters\n */\nfunction isValidHTTPToken (characters) {\n  if (characters.length === 0) {\n    return false\n  }\n  for (let i = 0; i < characters.length; ++i) {\n    if (!isTokenCharCode(characters.charCodeAt(i))) {\n      return false\n    }\n  }\n  return true\n}\n\n// headerCharRegex have been lifted from\n// https://github.com/nodejs/node/blob/main/lib/_http_common.js\n\n/**\n * Matches if val contains an invalid field-vchar\n *  field-value    = *( field-content / obs-fold )\n *  field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n *  field-vchar    = VCHAR / obs-text\n */\nconst headerCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/\n\n/**\n * @param {string} characters\n */\nfunction isValidHeaderValue (characters) {\n  return !headerCharRegex.test(characters)\n}\n\n// Parsed accordingly to RFC 9110\n// https://www.rfc-editor.org/rfc/rfc9110#field.content-range\nfunction parseRangeHeader (range) {\n  if (range == null || range === '') return { start: 0, end: null, size: null }\n\n  const m = range ? range.match(/^bytes (\\d+)-(\\d+)\\/(\\d+)?$/) : null\n  return m\n    ? {\n        start: parseInt(m[1]),\n        end: m[2] ? parseInt(m[2]) : null,\n        size: m[3] ? parseInt(m[3]) : null\n      }\n    : null\n}\n\nfunction addListener (obj, name, listener) {\n  const listeners = (obj[kListeners] ??= [])\n  listeners.push([name, listener])\n  obj.on(name, listener)\n  return obj\n}\n\nfunction removeAllListeners (obj) {\n  for (const [name, listener] of obj[kListeners] ?? []) {\n    obj.removeListener(name, listener)\n  }\n  obj[kListeners] = null\n}\n\nfunction errorRequest (client, request, err) {\n  try {\n    request.onError(err)\n    assert(request.aborted)\n  } catch (err) {\n    client.emit('error', err)\n  }\n}\n\nconst kEnumerableProperty = Object.create(null)\nkEnumerableProperty.enumerable = true\n\nconst normalizedMethodRecordsBase = {\n  delete: 'DELETE',\n  DELETE: 'DELETE',\n  get: 'GET',\n  GET: 'GET',\n  head: 'HEAD',\n  HEAD: 'HEAD',\n  options: 'OPTIONS',\n  OPTIONS: 'OPTIONS',\n  post: 'POST',\n  POST: 'POST',\n  put: 'PUT',\n  PUT: 'PUT'\n}\n\nconst normalizedMethodRecords = {\n  ...normalizedMethodRecordsBase,\n  patch: 'patch',\n  PATCH: 'PATCH'\n}\n\n// Note: object prototypes should not be able to be referenced. e.g. `Object#hasOwnProperty`.\nObject.setPrototypeOf(normalizedMethodRecordsBase, null)\nObject.setPrototypeOf(normalizedMethodRecords, null)\n\nmodule.exports = {\n  kEnumerableProperty,\n  nop,\n  isDisturbed,\n  isErrored,\n  isReadable,\n  toUSVString,\n  isUSVString,\n  isBlobLike,\n  parseOrigin,\n  parseURL,\n  getServerName,\n  isStream,\n  isIterable,\n  isAsyncIterable,\n  isDestroyed,\n  headerNameToString,\n  bufferToLowerCasedHeaderName,\n  addListener,\n  removeAllListeners,\n  errorRequest,\n  parseRawHeaders,\n  parseHeaders,\n  parseKeepAliveTimeout,\n  destroy,\n  bodyLength,\n  deepClone,\n  ReadableStreamFrom,\n  isBuffer,\n  validateHandler,\n  getSocketInfo,\n  isFormDataLike,\n  buildURL,\n  addAbortListener,\n  isValidHTTPToken,\n  isValidHeaderValue,\n  isTokenCharCode,\n  parseRangeHeader,\n  normalizedMethodRecordsBase,\n  normalizedMethodRecords,\n  isValidPort,\n  isHttpOrHttpsPrefixed,\n  nodeMajor,\n  nodeMinor,\n  safeHTTPMethods: ['GET', 'HEAD', 'OPTIONS', 'TRACE'],\n  wrapRequestBody\n}\n"]}}