{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});Object.defineProperty(exports,\"__esModule\",{value:true});exports.css=css;const utils_js_1=require(\"../utils.js\");const domhandler_1=require(\"domhandler\");function css(prop,val){if(prop!=null&&val!=null||typeof prop===\"object\"&&!Array.isArray(prop)){return(0,utils_js_1.domEach)(this,(el,i)=>{if((0,domhandler_1.isTag)(el)){setCss(el,prop,val,i)}})}if(this.length===0){return void 0}return getCss(this[0],prop)}__name(css,\"css\");function setCss(el,prop,value,idx){if(typeof prop===\"string\"){const styles=getCss(el);const val=typeof value===\"function\"?value.call(el,idx,styles[prop]):value;if(val===\"\"){delete styles[prop]}else if(val!=null){styles[prop]=val}el.attribs[\"style\"]=stringify(styles)}else if(typeof prop===\"object\"){const keys=Object.keys(prop);for(let i=0;i<keys.length;i++){const k=keys[i];setCss(el,k,prop[k],i)}}}__name(setCss,\"setCss\");function getCss(el,prop){if(!el||!(0,domhandler_1.isTag)(el))return;const styles=parse(el.attribs[\"style\"]);if(typeof prop===\"string\"){return styles[prop]}if(Array.isArray(prop)){const newStyles={};for(const item of prop){if(styles[item]!=null){newStyles[item]=styles[item]}}return newStyles}return styles}__name(getCss,\"getCss\");function stringify(obj){return Object.keys(obj).reduce((str,prop)=>`${str}${str?\" \":\"\"}${prop}: ${obj[prop]};`,\"\")}__name(stringify,\"stringify\");function parse(styles){styles=(styles||\"\").trim();if(!styles)return{};const obj={};let key;for(const str of styles.split(\";\")){const n=str.indexOf(\":\");if(n<1||n===str.length-1){const trimmed=str.trimEnd();if(trimmed.length>0&&key!==void 0){obj[key]+=`;${trimmed}`}}else{key=str.slice(0,n).trim();obj[key]=str.slice(n+1).trim()}}return obj}__name(parse,\"parse\");\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HACA,OAAO,eAAe,QAAS,aAAc,CAAE,MAAO,IAAK,CAAC,EAC5D,QAAQ,IAAM,IACd,MAAM,WAAa,QAAQ,aAAa,EACxC,MAAM,aAAe,QAAQ,YAAY,EAUzC,SAAS,IAAI,KAAM,IAAK,CACpB,GAAK,MAAQ,MAAQ,KAAO,MAEvB,OAAO,OAAS,UAAY,CAAC,MAAM,QAAQ,IAAI,EAAI,CACpD,OAAQ,EAAG,WAAW,SAAS,KAAM,CAAC,GAAI,IAAM,CAC5C,IAAK,EAAG,aAAa,OAAO,EAAE,EAAG,CAE7B,OAAO,GAAI,KAAM,IAAK,CAAC,CAC3B,CACJ,CAAC,CACL,CACA,GAAI,KAAK,SAAW,EAAG,CACnB,OAAO,MACX,CACA,OAAO,OAAO,KAAK,CAAC,EAAG,IAAI,CAC/B,CAfS,kBAyBT,SAAS,OAAO,GAAI,KAAM,MAAO,IAAK,CAClC,GAAI,OAAO,OAAS,SAAU,CAC1B,MAAM,OAAS,OAAO,EAAE,EACxB,MAAM,IAAM,OAAO,QAAU,WAAa,MAAM,KAAK,GAAI,IAAK,OAAO,IAAI,CAAC,EAAI,MAC9E,GAAI,MAAQ,GAAI,CACZ,OAAO,OAAO,IAAI,CACtB,SACS,KAAO,KAAM,CAClB,OAAO,IAAI,EAAI,GACnB,CACA,GAAG,QAAQ,OAAO,EAAI,UAAU,MAAM,CAC1C,SACS,OAAO,OAAS,SAAU,CAC/B,MAAM,KAAO,OAAO,KAAK,IAAI,EAC7B,QAAS,EAAI,EAAG,EAAI,KAAK,OAAQ,IAAK,CAClC,MAAM,EAAI,KAAK,CAAC,EAChB,OAAO,GAAI,EAAG,KAAK,CAAC,EAAG,CAAC,CAC5B,CACJ,CACJ,CAnBS,wBAoBT,SAAS,OAAO,GAAI,KAAM,CACtB,GAAI,CAAC,IAAM,EAAE,EAAG,aAAa,OAAO,EAAE,EAClC,OACJ,MAAM,OAAS,MAAM,GAAG,QAAQ,OAAO,CAAC,EACxC,GAAI,OAAO,OAAS,SAAU,CAC1B,OAAO,OAAO,IAAI,CACtB,CACA,GAAI,MAAM,QAAQ,IAAI,EAAG,CACrB,MAAM,UAAY,CAAC,EACnB,UAAW,QAAQ,KAAM,CACrB,GAAI,OAAO,IAAI,GAAK,KAAM,CACtB,UAAU,IAAI,EAAI,OAAO,IAAI,CACjC,CACJ,CACA,OAAO,SACX,CACA,OAAO,MACX,CAjBS,wBA0BT,SAAS,UAAU,IAAK,CACpB,OAAO,OAAO,KAAK,GAAG,EAAE,OAAO,CAAC,IAAK,OAAS,GAAG,GAAG,GAAG,IAAM,IAAM,EAAE,GAAG,IAAI,KAAK,IAAI,IAAI,CAAC,IAAK,EAAE,CACrG,CAFS,8BAWT,SAAS,MAAM,OAAQ,CACnB,QAAU,QAAU,IAAI,KAAK,EAC7B,GAAI,CAAC,OACD,MAAO,CAAC,EACZ,MAAM,IAAM,CAAC,EACb,IAAI,IACJ,UAAW,OAAO,OAAO,MAAM,GAAG,EAAG,CACjC,MAAM,EAAI,IAAI,QAAQ,GAAG,EAEzB,GAAI,EAAI,GAAK,IAAM,IAAI,OAAS,EAAG,CAC/B,MAAM,QAAU,IAAI,QAAQ,EAC5B,GAAI,QAAQ,OAAS,GAAK,MAAQ,OAAW,CACzC,IAAI,GAAG,GAAK,IAAI,OAAO,EAC3B,CACJ,KACK,CACD,IAAM,IAAI,MAAM,EAAG,CAAC,EAAE,KAAK,EAC3B,IAAI,GAAG,EAAI,IAAI,MAAM,EAAI,CAAC,EAAE,KAAK,CACrC,CACJ,CACA,OAAO,GACX,CArBS","names":[],"sources":["/home/creditga/CofiCarte/node_modules/.pnpm/cheerio@1.0.0/node_modules/cheerio/dist/commonjs/api/css.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.css = css;\nconst utils_js_1 = require(\"../utils.js\");\nconst domhandler_1 = require(\"domhandler\");\n/**\n * Set multiple CSS properties for every matched element.\n *\n * @category CSS\n * @param prop - The names of the properties.\n * @param val - The new values.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/css/}\n */\nfunction css(prop, val) {\n    if ((prop != null && val != null) ||\n        // When `prop` is a \"plain\" object\n        (typeof prop === 'object' && !Array.isArray(prop))) {\n        return (0, utils_js_1.domEach)(this, (el, i) => {\n            if ((0, domhandler_1.isTag)(el)) {\n                // `prop` can't be an array here anymore.\n                setCss(el, prop, val, i);\n            }\n        });\n    }\n    if (this.length === 0) {\n        return undefined;\n    }\n    return getCss(this[0], prop);\n}\n/**\n * Set styles of all elements.\n *\n * @private\n * @param el - Element to set style of.\n * @param prop - Name of property.\n * @param value - Value to set property to.\n * @param idx - Optional index within the selection.\n */\nfunction setCss(el, prop, value, idx) {\n    if (typeof prop === 'string') {\n        const styles = getCss(el);\n        const val = typeof value === 'function' ? value.call(el, idx, styles[prop]) : value;\n        if (val === '') {\n            delete styles[prop];\n        }\n        else if (val != null) {\n            styles[prop] = val;\n        }\n        el.attribs['style'] = stringify(styles);\n    }\n    else if (typeof prop === 'object') {\n        const keys = Object.keys(prop);\n        for (let i = 0; i < keys.length; i++) {\n            const k = keys[i];\n            setCss(el, k, prop[k], i);\n        }\n    }\n}\nfunction getCss(el, prop) {\n    if (!el || !(0, domhandler_1.isTag)(el))\n        return;\n    const styles = parse(el.attribs['style']);\n    if (typeof prop === 'string') {\n        return styles[prop];\n    }\n    if (Array.isArray(prop)) {\n        const newStyles = {};\n        for (const item of prop) {\n            if (styles[item] != null) {\n                newStyles[item] = styles[item];\n            }\n        }\n        return newStyles;\n    }\n    return styles;\n}\n/**\n * Stringify `obj` to styles.\n *\n * @private\n * @category CSS\n * @param obj - Object to stringify.\n * @returns The serialized styles.\n */\nfunction stringify(obj) {\n    return Object.keys(obj).reduce((str, prop) => `${str}${str ? ' ' : ''}${prop}: ${obj[prop]};`, '');\n}\n/**\n * Parse `styles`.\n *\n * @private\n * @category CSS\n * @param styles - Styles to be parsed.\n * @returns The parsed styles.\n */\nfunction parse(styles) {\n    styles = (styles || '').trim();\n    if (!styles)\n        return {};\n    const obj = {};\n    let key;\n    for (const str of styles.split(';')) {\n        const n = str.indexOf(':');\n        // If there is no :, or if it is the first/last character, add to the previous item's value\n        if (n < 1 || n === str.length - 1) {\n            const trimmed = str.trimEnd();\n            if (trimmed.length > 0 && key !== undefined) {\n                obj[key] += `;${trimmed}`;\n            }\n        }\n        else {\n            key = str.slice(0, n).trim();\n            obj[key] = str.slice(n + 1).trim();\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=css.js.map"]}}